{\rtf1\ansi\ansicpg1252\uc1\deff0\stshfdbch0\stshfloch0\stshfhich0\stshfbi0\deflang1033\deflangfe1041{\fonttbl{\f0\froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times New Roman;}{\f1\fswiss\fcharset0\fprq2{\*\panose 020b0604020202020204}Arial;}
{\f2\fmodern\fcharset0\fprq1{\*\panose 02070309020205020404}Courier New;}{\f3\froman\fcharset2\fprq2{\*\panose 05050102010706020507}Symbol;}{\f4\fswiss\fcharset0\fprq2{\*\panose 020b0604020202020204}Helvetica;}
{\f5\fmodern\fcharset0\fprq1{\*\panose 02070409020205020404}Courier;}{\f6\froman\fcharset0\fprq2{\*\panose 02020603040505020304}Tms Rmn;}{\f7\fswiss\fcharset0\fprq2{\*\panose 020b0604020202030204}Helv;}
{\f8\froman\fcharset0\fprq2{\*\panose 02040503060506020304}New York;}{\f9\fswiss\fcharset0\fprq2{\*\panose 00000000000000000000}System;}{\f10\fnil\fcharset2\fprq2{\*\panose 05000000000000000000}Wingdings;}
{\f11\fmodern\fcharset128\fprq1{\*\panose 02020609040205080304}MS Mincho{\*\falt ?l?r ??\'81\'66c};}{\f12\froman\fcharset129\fprq2{\*\panose 02030600000101010101}Batang{\*\falt \'a8\'cfoUAA};}
{\f13\fnil\fcharset134\fprq2{\*\panose 02010600030101010101}SimSun{\*\falt ??\'a1\'a7??};}{\f14\froman\fcharset136\fprq2{\*\panose 02020300000000000000}PMingLiU{\*\falt !Ps2OcuAe};}
{\f15\fmodern\fcharset128\fprq1{\*\panose 020b0609070205080204}MS Gothic{\*\falt ?l?r ?S?V?b?N};}{\f16\fswiss\fcharset129\fprq2{\*\panose 020b0600000101010101}Dotum{\*\falt \'a1\'cdi\'a1\'cb\'a1\'fe\'a1\'cb?o};}
{\f17\fnil\fcharset134\fprq2{\*\panose 02010600030101010101}SimHei{\*\falt o\'a1\'a72\'a1\'a7??};}{\f18\fmodern\fcharset136\fprq1{\*\panose 02020309000000000000}MingLiU{\*\falt 2OcuAe};}
{\f19\froman\fcharset128\fprq1{\*\panose 02020609040305080305}Mincho{\*\falt ??\'81\'66c};}{\f20\fswiss\fcharset129\fprq2{\*\panose 020b0600000101010101}Gulim{\*\falt \'a2\'ae\'a8\'fa\'a1\'a7u\'a1\'cb\'a1\'fe\'a8\'cf\'a1\'c0};}
{\f21\froman\fcharset0\fprq2{\*\panose 02040603050705020303}Century;}{\f22\froman\fcharset0\fprq2{\*\panose 02020603050405020304}Angsana New;}{\f23\fswiss\fcharset0\fprq2{\*\panose 020b0304020202020204}Cordia New;}
{\f24\fnil\fcharset0\fprq2{\*\panose 00000400000000000000}Mangal;}{\f25\fnil\fcharset0\fprq2{\*\panose 00000400000000000000}Latha;}{\f26\froman\fcharset0\fprq2{\*\panose 010a0502050306030303}Sylfaen;}
{\f27\fnil\fcharset0\fprq2{\*\panose 01010600010101010101}Vrinda;}{\f28\fnil\fcharset0\fprq2{\*\panose 00000400000000000000}Raavi;}{\f29\fnil\fcharset0\fprq2{\*\panose 00000400000000000000}Shruti;}
{\f30\froman\fcharset1\fprq2{\*\panose 00000400000000000000}Sendnya;}{\f31\fnil\fcharset0\fprq2{\*\panose 00000400000000000000}Gautami;}{\f32\fnil\fcharset0\fprq2{\*\panose 00000400000000000000}Tunga;}
{\f33\froman\fcharset1\fprq2{\*\panose 00000000000000000000}Estrangella Edessa;}{\f34\fswiss\fcharset128\fprq2{\*\panose 020b0604020202020204}Arial Unicode MS;}{\f35\fswiss\fcharset0\fprq2{\*\panose 020b0604030504040204}Tahoma;}
{\f36\fnil\fcharset2\fprq2{\*\panose 00000000000000000000}Marlett;}{\f37\fmodern\fcharset0\fprq1{\*\panose 020b0609040504020204}Lucida Console;}{\f38\fswiss\fcharset0\fprq2{\*\panose 020b0602030504020204}Lucida Sans Unicode;}
{\f39\fswiss\fcharset0\fprq2{\*\panose 020b0604030504040204}Verdana;}{\f40\fswiss\fcharset0\fprq2{\*\panose 020b0a04020102020204}Arial Black;}{\f41\fscript\fcharset0\fprq2{\*\panose 030f0702030302020204}Comic Sans MS;}
{\f42\fswiss\fcharset0\fprq2{\*\panose 020b0806030902050204}Impact;}{\f43\froman\fcharset0\fprq2{\*\panose 02040502050405020303}Georgia;}{\f44\fswiss\fcharset0\fprq2{\*\panose 020b0603020102020204}Franklin Gothic Medium;}
{\f45\froman\fcharset0\fprq2{\*\panose 02040502050505030304}Palatino Linotype;}{\f46\fswiss\fcharset0\fprq2{\*\panose 020b0603020202020204}Trebuchet MS;}{\f47\froman\fcharset2\fprq2{\*\panose 05030102010509060703}Webdings;}
{\f48\fscript\fcharset0\fprq2 Estrangelo Edessa;}{\f49\fnil\fcharset0\fprq2 MV Boli;}{\f50\fswiss\fcharset0\fprq2{\*\panose 020b0604020202020204}Microsoft Sans Serif;}{\f51\froman\fcharset222\fprq2{\*\panose 02020603050405020304}AngsanaUPC;}
{\f52\fswiss\fcharset222\fprq2{\*\panose 020b0604020202020204}BrowalliaUPC;}{\f53\fswiss\fcharset0\fprq2{\*\panose 020b0604020202020204}Browallia New;}{\f54\fswiss\fcharset222\fprq2{\*\panose 020b0304020202020204}CordiaUPC;}
{\f55\froman\fcharset222\fprq2{\*\panose 02020603050405020304}DilleniaUPC;}{\f56\froman\fcharset222\fprq2{\*\panose 02020603050405020304}EucrosiaUPC;}{\f57\fswiss\fcharset222\fprq2{\*\panose 020b0604020202020204}FreesiaUPC;}
{\f58\fswiss\fcharset222\fprq2{\*\panose 020b0604020202020204}IrisUPC;}{\f59\froman\fcharset222\fprq2{\*\panose 02020603050405020304}JasmineUPC;}{\f60\froman\fcharset222\fprq2{\*\panose 02020603050405020304}KodchiangUPC;}
{\f61\fswiss\fcharset222\fprq2{\*\panose 020b0604020202020204}LilyUPC;}{\f62\fnil\fcharset177\fprq2{\*\panose 00000000000000000000}Aharoni;}{\f63\fnil\fcharset177\fprq2{\*\panose 00000000000000000000}David;}
{\f64\fnil\fcharset177\fprq2{\*\panose 00000000000000000000}David Transparent;}{\f65\fnil\fcharset177\fprq2{\*\panose 00000000000000000000}FrankRuehl;}{\f66\fnil\fcharset177\fprq2{\*\panose 00000000000000000000}Levenim MT;}
{\f67\fnil\fcharset177\fprq2{\*\panose 00000000000000000000}Miriam;}{\f68\fnil\fcharset177\fprq2{\*\panose 00000000000000000000}Miriam Transparent;}{\f69\fmodern\fcharset177\fprq1{\*\panose 00000009000000000000}Miriam Fixed;}
{\f70\fmodern\fcharset177\fprq1{\*\panose 00000009000000000000}Fixed Miriam Transparent;}{\f71\fnil\fcharset177\fprq2{\*\panose 00000000000000000000}Narkisim;}{\f72\fmodern\fcharset177\fprq1{\*\panose 00000009000000000000}Rod;}
{\f73\fmodern\fcharset177\fprq1{\*\panose 00000009000000000000}Rod Transparent;}{\f74\fnil\fcharset178\fprq2{\*\panose 02010000000000000000}Traditional Arabic;}{\f75\fnil\fcharset178\fprq2{\*\panose 02010000000000000000}Arabic Transparent;}
{\f76\fnil\fcharset178\fprq2{\*\panose 02010000000000000000}Andalus;}{\f77\fnil\fcharset178\fprq2{\*\panose 02010000000000000000}Simplified Arabic;}{\f78\fmodern\fcharset178\fprq1{\*\panose 02010009000000000000}Simplified Arabic Fixed;}
{\f79\fswiss\fcharset0\fprq2{\*\panose 020b0506020202030204}Arial Narrow;}{\f80\froman\fcharset0\fprq2{\*\panose 02040602050305030304}Book Antiqua;}{\f81\froman\fcharset0\fprq2{\*\panose 02050604050505020204}Bookman Old Style;}
{\f82\fswiss\fcharset0\fprq2{\*\panose 020b0502020202020204}Century Gothic;}{\f83\froman\fcharset0\fprq2{\*\panose 02020404030301010803}Garamond;}{\f84\fswiss\fcharset0\fprq2{\*\panose 020b0706040902060204}Haettenschweiler;}
{\f85\fnil\fcharset2\fprq2{\*\panose 05000000000000000000}MS Outlook;}{\f86\fscript\fcharset0\fprq2{\*\panose 03010101010201010101}Monotype Corsiva;}{\f87\froman\fcharset2\fprq2{\*\panose 05020102010507070707}Wingdings 2;}
{\f88\froman\fcharset2\fprq2{\*\panose 05040102010807070707}Wingdings 3;}{\f89\froman\fcharset2\fprq2{\*\panose 05050102010205020202}MT Extra;}{\f90\fnil\fcharset0\fprq2{\*\panose 00000400000000000000}Abri Barcode39;}
{\f91\fnil\fcharset0\fprq2{\*\panose 00000400000000000000}Abri Barcode39a;}{\f92\fnil\fcharset0\fprq2{\*\panose 00000400000000000000}Abri Barcode39N;}{\f93\fnil\fcharset0\fprq2{\*\panose 00000400000000000000}Abri Barcode39Na;}
{\f94\fnil\fcharset0\fprq2{\*\panose 00000400000000000000}Abri Barcode39W;}{\f95\fnil\fcharset0\fprq2{\*\panose 00000400000000000000}Abri Barcode39Wa;}{\f96\fnil\fcharset2\fprq2{\*\panose 00000400000000000000}ABSALOM;}
{\f97\fnil\fcharset2\fprq2{\*\panose 00000400000000000000}ALIBI;}{\f98\fswiss\fcharset0\fprq2{\*\panose 020b0603050302020204}Anime Ace;}{\f99\fswiss\fcharset128\fprq2{\*\panose 020b0604020202020204}@Arial Unicode MS;}
{\f100\fswiss\fcharset0\fprq2{\*\panose 020b7200000000000000}.VnArial;}{\f101\fswiss\fcharset0\fprq2{\*\panose 020b7200000000000000}.VnArial Narrow;}{\f102\fswiss\fcharset0\fprq2{\*\panose 020b7200000000000000}.VnArialH;}
{\f103\fswiss\fcharset0\fprq2{\*\panose 020b7200000000000000}.VnAvant;}{\f104\fswiss\fcharset0\fprq2{\*\panose 020b7200000000000000}.VnCentury Schoolbook;}{\f105\fswiss\fcharset0\fprq2{\*\panose 020b7200000000000000}.VnMystical;}
{\f106\fswiss\fcharset0\fprq2{\*\panose 020b7200000000000000}.VnTime;}{\f107\fswiss\fcharset0\fprq2{\*\panose 020b7200000000000000}.VnTimeH;}{\f108\fswiss\fcharset0\fprq2{\*\panose 020b0a06030101010103}Abadi MT Condensed Extra Bold;}
{\f109\fswiss\fcharset0\fprq2{\*\panose 020b0306030101010103}Abadi MT Condensed Light;}{\f110\fdecor\fcharset0\fprq2{\*\panose 04020705040a02060702}Algerian;}{\f111\fswiss\fcharset0\fprq2{\*\panose 020b0604020202020204}alittlev;}
{\f112\fnil\fcharset2\fprq2{\*\panose 05010101010101010101}Almanac MT;}{\f113\fswiss\fcharset2\fprq2{\*\panose 020b0504020104020203}Andale Mono IPA;}{\f114\fswiss\fcharset0\fprq2{\*\panose 020b0603050302020204}Anglo-Saxon, 8th c.;}
{\f115\fnil\fcharset0\fprq1{\*\panose 020b7200000000000000}\'c1nhMinh 1.1;}{\f116\fnil\fcharset0\fprq2{\*\panose 00000400000000000000}Animorphs;}{\f117\fswiss\fcharset0\fprq2{\*\panose 020f0704030504030204}Arial Rounded MT Bold;}
{\f118\froman\fcharset0\fprq2{\*\panose 02020602080505020303}Baskerville Old Face;}{\f119\fnil\fcharset2\fprq2{\*\panose 00000400000000000000}BATAVIA;}{\f120\fswiss\fcharset0\fprq2{\*\panose 020b0603050302020204}Battel Abbey, 8th c.;}
{\f121\fdecor\fcharset0\fprq2{\*\panose 04030905020b02020c02}Bauhaus 93;}{\f122\fdecor\fcharset0\fprq2{\*\panose 04040a05050d02020502}Beesknees ITC;}{\f123\froman\fcharset0\fprq2{\*\panose 02020503060305020303}Bell MT;}
{\f124\froman\fcharset0\fprq2{\*\panose 02050806060905020404}Bernard MT Condensed;}{\f125\fnil\fcharset2\fprq2{\*\panose 05010101010101010101}Bon Apetit MT;}{\f126\fnil\fcharset0\fprq2{\*\panose 02000000000000000000}Bouwsma Uncial;}
{\f127\fscript\fcharset0\fprq2{\*\panose 03070402050302030203}Bradley Hand ITC;}{\f128\fdecor\fcharset0\fprq2{\*\panose 04030b070d0b02020403}Braggadocio;}{\f129\fswiss\fcharset0\fprq2{\*\panose 020b0903060703020204}Britannic Bold;}
{\f130\fswiss\fcharset0\fprq2{\*\panose 020b0603050302020204}British Block Flourish, 10th c.;}{\f131\fswiss\fcharset0\fprq2{\*\panose 020b0603050302020204}British Museum, 14th c.;}
{\f132\fswiss\fcharset0\fprq2{\*\panose 020b0603050302020204}British Outline Majuscules;}{\f133\fscript\fcharset0\fprq2{\*\panose 03060802040406070304}Brush Script MT;}{\f134\froman\fcharset0\fprq2{\*\panose 02040603050505030304}Calisto MT;}
{\f135\fnil\fcharset0\fprq2{\*\panose 00000000000000000000}Cartoon;}{\f136\fnil\fcharset2\fprq2{\*\panose 00000400000000000000}CASMIRA;}{\f137\fnil\fcharset0\fprq2{\*\panose 00000400000000000000}Celtic Frames;}
{\f138\fswiss\fcharset0\fprq2{\*\panose 020b0607050302020204}Celtic Knot;}{\f139\fdecor\fcharset0\fprq2{\*\panose 040b0600000000000000}NWCV15;}{\f140\froman\fcharset0\fprq2{\*\panose 02020503030404060203}Kartika;}
{\f141\fnil\fcharset2\fprq2{\*\panose 00000400000000000000}ELEGANCE;}{\f142\fnil\fcharset2\fprq2{\*\panose 00000400000000000000}ELLIS;}{\f143\fnil\fcharset2\fprq2{\*\panose 00000400000000000000}EXCESS;}
{\f144\fnil\fcharset2\fprq2{\*\panose 00000400000000000000}GENUINE;}{\f145\fnil\fcharset2\fprq2{\*\panose 00000400000000000000}HELTERSKELTER;}{\f146\fnil\fcharset2\fprq2{\*\panose 00000400000000000000}HERMAN;}
{\f147\fnil\fcharset2\fprq2{\*\panose 00000400000000000000}ISABELLE;}{\f148\fnil\fcharset2\fprq2{\*\panose 00000400000000000000}JOAN;}{\f149\fnil\fcharset2\fprq2{\*\panose 00000400000000000000}JUSTICE;}
{\f150\fnil\fcharset2\fprq2{\*\panose 00000400000000000000}MANDELA;}{\f151\fnil\fcharset2\fprq2{\*\panose 00000400000000000000}MATTEROFFACT;}{\f152\fnil\fcharset2\fprq2{\*\panose 00000400000000000000}MICRODOT;}
{\f153\fnil\fcharset2\fprq2{\*\panose 00000400000000000000}NATURALBORN;}{\f154\fnil\fcharset2\fprq2{\*\panose 00000400000000000000}NEOLITH;}{\f155\fnil\fcharset2\fprq2{\*\panose 00000400000000000000}OPENCLASSIC;}
{\f156\fnil\fcharset2\fprq2{\*\panose 00000400000000000000}PRETEXT;}{\f157\fnil\fcharset2\fprq2{\*\panose 00000400000000000000}PUPPYLIKE;}{\f158\fnil\fcharset2\fprq2{\*\panose 00000400000000000000}RADAGUND;}
{\f159\fnil\fcharset2\fprq2{\*\panose 00000400000000000000}REALVIRTUE;}{\f160\fnil\fcharset2\fprq2{\*\panose 00000400000000000000}SHELMAN;}{\f161\fnil\fcharset2\fprq2{\*\panose 00000400000000000000}TRENDY;}
{\f162\fmodern\fcharset0\fprq1{\*\panose 020b0609030804020204}Bitstream Vera Sans Mono;}{\f163\fswiss\fcharset0\fprq2{\*\panose 020b0603030804020204}Bitstream Vera Sans;}{\f164\froman\fcharset0\fprq2{\*\panose 02060603050605020204}Bitstream Vera Serif;}
{\f165\fnil\fcharset2\fprq2{\*\panose 05010000000000000000}OpenSymbol;}{\f166\fswiss\fcharset0\fprq2{\*\panose 020b0602030504020204}Lucida Sans;}{\f167\fnil\fcharset0\fprq2{\*\panose 00000400000000000000}AmrLipi;}
{\f168\fnil\fcharset0\fprq2{\*\panose 00000400000000000000}Alba;}{\f169\fnil\fcharset0\fprq2{\*\panose 00000400000000000000}Alba Matter;}{\f170\fnil\fcharset0\fprq2{\*\panose 00000400000000000000}Alba Super;}
{\f171\fnil\fcharset0\fprq2{\*\panose 00000400000000000000}Baby Kruffy;}{\f172\fnil\fcharset0\fprq2{\*\panose 00000900000000000000}Chick;}{\f173\fnil\fcharset0\fprq2{\*\panose 00000400000000000000}Croobie;}
{\f174\fnil\fcharset0\fprq2{\*\panose 00000400000000000000}Fat;}{\f175\fnil\fcharset0\fprq2{\*\panose 00000400000000000000}Freshbot;}{\f176\fnil\fcharset0\fprq2{\*\panose 00000400000000000000}Frosty;}
{\f177\fnil\fcharset0\fprq2{\*\panose 00000400000000000000}GlooGun;}{\f178\fnil\fcharset0\fprq2{\*\panose 00000400000000000000}Jenkins v2.0;}{\f179\fnil\fcharset0\fprq2{\*\panose 00000400000000000000}Jokewood;}
{\f180\fnil\fcharset0\fprq2{\*\panose 00000900000000000000}Porky's;}{\f181\fnil\fcharset0\fprq2{\*\panose 00000400000000000000}Pussycat;}{\f182\fnil\fcharset0\fprq2{\*\panose 00000400000000000000}Weltron Urban;}
{\f183\fnil\fcharset0\fprq2{\*\panose 00000400000000000000}Digital2;}{\f184\fnil\fcharset0\fprq2{\*\panose 00000000000000000000}John Handy LET;}{\f185\fnil\fcharset0\fprq2{\*\panose 00000000000000000000}Academy Engraved LET;}
{\f186\fnil\fcharset0\fprq2{\*\panose 00000000000000000000}University Roman LET;}{\f187\fnil\fcharset0\fprq2{\*\panose 00000000000000000000}Milano LET;}{\f188\fnil\fcharset0\fprq2{\*\panose 00000000000000000000}Smudger LET;}
{\f189\fnil\fcharset0\fprq2{\*\panose 00000000000000000000}Ruach LET;}{\f190\fnil\fcharset0\fprq2{\*\panose 00000000000000000000}La Bamba LET;}{\f191\fnil\fcharset0\fprq2{\*\panose 00000000000000000000}Quixley LET;}
{\f192\fnil\fcharset0\fprq2{\*\panose 00000000000000000000}One Stroke Script LET;}{\f193\fnil\fcharset0\fprq2{\*\panose 00000000000000000000}Odessa LET;}{\f194\fnil\fcharset0\fprq2{\*\panose 00000000000000000000}Scruff LET;}
{\f195\fscript\fcharset0\fprq2{\*\panose 03020602050506080705}ParkAvenue BT;}{\f196\fscript\fcharset0\fprq2{\*\panose 03090702030407020403}Staccato222 BT;}{\f197\fscript\fcharset0\fprq2{\*\panose 03020802040502060804}Cataneo BT;}
{\f198\fscript\fcharset0\fprq2{\*\panose 03040802020608040804}Blackletter686 BT;}{\f199\fscript\fcharset0\fprq2{\*\panose 03060702050402020204}Calligraph421 BT;}{\f200\fscript\fcharset0\fprq2{\*\panose 03080802020302020203}MisterEarl BT;}
{\f201\fdecor\fcharset0\fprq2{\*\panose 04080805060107010802}OldDreadfulNo7 BT;}{\f202\fswiss\fcharset2\fprq2{\*\panose 050c0102010209020202}HolidayPi BT;}{\f203\fnil\fcharset0\fprq2{\*\panose 00000000000000000000}Jokerman LET;}
{\f204\fnil\fcharset0\fprq2{\*\panose 00000000000000000000}Orange LET;}{\f205\fnil\fcharset0\fprq2{\*\panose 00000000000000000000}Victorian LET;}{\f206\fnil\fcharset0\fprq2{\*\panose 00000000000000000000}Westwood LET;}
{\f207\fnil\fcharset0\fprq2{\*\panose 00000000000000000000}Rage Italic LET;}{\f208\fnil\fcharset0\fprq2{\*\panose 00000000000000000000}Tiranti Solid LET;}{\f209\fnil\fcharset0\fprq2{\*\panose 00000000000000000000}Mekanik LET;}
{\f210\fnil\fcharset0\fprq2{\*\panose 00000000000000000000}Highlight LET;}{\f211\fdecor\fcharset0\fprq2{\*\panose 04040905080b02020502}Broadway BT;}{\f212\fswiss\fcharset0\fprq2{\*\panose 020b0504020202060204}Square721 BT;}
{\f213\fnil\fcharset0\fprq2{\*\panose 00000000000000000000}Pump Demi Bold LET;}{\f214\fmodern\fcharset0\fprq1{\*\panose 02070309020205020404}VPS Courier;}{\f215\fswiss\fcharset0\fprq2{\*\panose 020b0604020202020204}VPS Helv;}
{\f216\fswiss\fcharset0\fprq2{\*\panose 020b0604020202020204}VPS Helv Hoa;}{\f217\fswiss\fcharset0\fprq2{\*\panose 020b0000000000000000}VPS Long An;}{\f218\fswiss\fcharset0\fprq2{\*\panose 020b0000000000000000}VPS Long An Hoa;}
{\f219\fnil\fcharset0\fprq2{\*\panose 00000000000000000000}VPS Nam Dinh;}{\f220\fnil\fcharset0\fprq2{\*\panose 00000000000000000000}VPS Nam Dinh Hoa;}{\f221\fnil\fcharset0\fprq2{\*\panose 00000000000000000000}VPS Ninh Binh;}
{\f222\fnil\fcharset0\fprq2{\*\panose 00000000000000000000}VPS Ninh Binh Hoa;}{\f223\froman\fcharset0\fprq2{\*\panose 02020603050405020304}VPS Times;}{\f224\froman\fcharset0\fprq2{\*\panose 02020603050405020304}VPS Times Hoa;}
{\f225\froman\fcharset0\fprq2{\*\panose 02027200000000000000}VPS Quang Duc;}{\f226\froman\fcharset0\fprq2{\*\panose 02027200000000000000}VPS Quang Duc Hoa;}{\f227\fscript\fcharset0\fprq2{\*\panose 03030702030607090b03}VPS Kien An;}
{\f228\fscript\fcharset0\fprq2{\*\panose 03030702030607090b03}VPS Kien An Hoa;}{\f229\fswiss\fcharset0\fprq2{\*\panose 020b0903020204020204}VPS Cho Lon Hoa;}{\f230\froman\fcharset2\fprq2{\*\panose 02020500000000000000}Vietnm01;}
{\f231\fnil\fcharset0\fprq2{\*\panose 00000400000000000000}Poornut;}{\f232\fmodern\fcharset0\fprq2{\*\panose 00000509030000020004}Ethiopia Jiret;}{\f233\fnil\fcharset0\fprq2{\*\panose 02000500000000020004}Khmer OS System;}
{\f234\fnil\fcharset0\fprq2{\*\panose 00000000000000000000}Lao New Light;}{\f235\fnil\fcharset0\fprq2{\*\panose 02000000000000000000}Lao Phonemic;}{\f236\fnil\fcharset0\fprq2{\*\panose 00000000000000000000}IPA;}
{\f237\fnil\fcharset0\fprq2{\*\panose 02000506000000020004}MahaSila;}{\f238\fnil\fcharset2\fprq2{\*\panose 00000400000000000000}TaiHeritage;}{\f239\fnil\fcharset0\fprq2{\*\panose 00000000000000000000}SongPetburi;}
{\f240\fnil\fcharset0\fprq2{\*\panose 00000000000000000000}WHITETAI;}{\f241\fnil\fcharset0\fprq2{\*\panose 00000000000000000000}NDEHONG;}{\f242\fswiss\fcharset0\fprq2{\*\panose 020b0603050302020204}Mouth Breather BB;}
{\f243\fswiss\fcharset0\fprq2{\*\panose 020b0603050302020204}Fanboy Hardcore;}{\f244\fnil\fcharset0\fprq2{\*\panose 00000000000000000000}VPS An Giang;}{\f245\fnil\fcharset0\fprq2{\*\panose 00000000000000000000}VPS An Giang Hoa;}
{\f246\fswiss\fcharset0\fprq2{\*\panose 020b0000000000000000}VPS An Loc;}{\f247\fswiss\fcharset0\fprq2{\*\panose 020b0000000000000000}VPS An Loc Hoa;}{\f248\fnil\fcharset0\fprq2{\*\panose 00000000000000000000}VPS An Loc Hoa Lignt;}
{\f249\fnil\fcharset0\fprq2{\*\panose 00000000000000000000}VPS An Loc Hoa Medium;}{\f250\fnil\fcharset0\fprq2{\*\panose 00000000000000000000}VPS An Loc Light;}{\f251\fnil\fcharset0\fprq2{\*\panose 00000000000000000000}VPS An Loc Medium;}
{\f252\fdecor\fcharset0\fprq2{\*\panose 04040905090002050503}VPS An Xuyen;}{\f253\fdecor\fcharset0\fprq2{\*\panose 04040905090002050503}VPS An Xuyen Hoa;}{\f254\fdecor\fcharset0\fprq2{\*\panose 04040704021002020703}VPS Ba Ria;}
{\f255\fdecor\fcharset0\fprq2{\*\panose 04040704021002020703}VPS Ba Ria Hoa;}{\f256\fdecor\fcharset0\fprq2{\*\panose 04030405020b02020c04}VPS Bac Giang Hoa;}{\f257\fscript\fcharset0\fprq2{\*\panose 03020402050402020203}VPS Bac Kan;}
{\f258\fscript\fcharset0\fprq2{\*\panose 03020402050402020203}VPS Bac Kan Hoa;}{\f259\fswiss\fcharset0\fprq2{\*\panose 020b7200000000000000}VPS Bac Lieu Hoa;}{\f260\fswiss\fcharset0\fprq2{\*\panose 020b0000000000000000}VPS Bac Ninh;}
{\f261\fswiss\fcharset0\fprq2{\*\panose 020b0000000000000000}VPS Bac Ninh Hoa;}{\f262\fswiss\fcharset0\fprq2{\*\panose 020b7200000000000000}VPS Ben Tre;}{\f263\fswiss\fcharset0\fprq2{\*\panose 020b7200000000000000}VPS Ben Tre Hoa;}
{\f264\fswiss\fcharset0\fprq2{\*\panose 020b0000000000000000}VPS Bien Hoa;}{\f265\fswiss\fcharset0\fprq2{\*\panose 020b0000000000000000}VPS Bien Hoa Hoa;}{\f266\fswiss\fcharset0\fprq2{\*\panose 020b0000000000000000}VPS Binh Duong;}
{\f267\fswiss\fcharset0\fprq2{\*\panose 020b0000000000000000}VPS Binh Duong Hoa;}{\f268\fswiss\fcharset0\fprq2{\*\panose 020b7200000000000000}VPS Binh Long;}{\f269\fswiss\fcharset0\fprq2{\*\panose 020b7200000000000000}VPS Binh Long Hoa;}
{\f270\fscript\fcharset0\fprq2{\*\panose 03020702030807050705}VPS Binh Tuy;}{\f271\fscript\fcharset0\fprq2{\*\panose 03020702030807050705}VPS Binh Tuy Hoa;}{\f272\fnil\fcharset0\fprq2{\*\panose 00000000000000000000}VPS Ca Mau;}
{\f273\fnil\fcharset0\fprq2{\*\panose 00000000000000000000}VPS Ca Mau Hoa;}{\f274\fswiss\fcharset0\fprq2{\*\panose 020b7200000000000000}VPS Can Tho;}{\f275\fswiss\fcharset0\fprq2{\*\panose 020b7200000000000000}VPS Can Tho Hoa;}
{\f276\fnil\fcharset0\fprq2{\*\panose 00000000000000000000}VPS Cao Bang;}{\f277\fnil\fcharset0\fprq2{\*\panose 00000000000000000000}VPS Cao Bang Hoa;}{\f278\fscript\fcharset0\fprq2{\*\panose 03030602040405080b03}VPS Chau Doc;}
{\f279\fscript\fcharset0\fprq2{\*\panose 03030602040405080b03}VPS Chau Doc Hoa;}{\f280\fnil\fcharset0\fprq2{\*\panose 00000000000000000000}VPS Con Son;}{\f281\fnil\fcharset0\fprq2{\*\panose 00000000000000000000}VPS Con Son Hoa;}
{\f282\fmodern\fcharset0\fprq1{\*\panose 02070309020205020404}VPS Courier Hoa;}{\f283\fscript\fcharset0\fprq2{\*\panose 03090802040305080204}VPS Cu Chi;}{\f284\fscript\fcharset0\fprq2{\*\panose 03090802040305080204}VPS Cu Chi Hoa;}
{\f285\fswiss\fcharset0\fprq2{\*\panose 020b0000000000000000}VPS Da Nang Hoa;}{\f286\fscript\fcharset0\fprq2{\*\panose 030306020406070f0b05}VPS Dac Lac;}{\f287\fscript\fcharset0\fprq2{\*\panose 030306020406070f0b05}VPS Dac Lac Hoa;}
{\f288\fnil\fcharset0\fprq2{\*\panose 00000000000000000000}VPS Dong Da;}{\f289\fnil\fcharset0\fprq2{\*\panose 00000000000000000000}VPS Dong Da Hoa;}{\f290\fscript\fcharset0\fprq2{\*\panose 03020602040606070306}VPS Dong Ha;}
{\f291\fscript\fcharset0\fprq2{\*\panose 03020602040606070306}VPS Dong Ha Hoa;}{\f292\fdecor\fcharset0\fprq2{\*\panose 04040505040002020303}VPS Dong Hoi;}{\f293\fdecor\fcharset0\fprq2{\*\panose 04040505040002020303}VPS Dong Hoi Hoa;}
{\f294\fscript\fcharset0\fprq2{\*\panose 03020702040505070503}VPS Dong Nai;}{\f295\fscript\fcharset0\fprq2{\*\panose 03020702040505070503}VPS Dong Nai Hoa;}{\f296\fnil\fcharset0\fprq2{\*\panose 00000000000000000000}VPS Gia Dinh Hoa;}
{\f297\fnil\fcharset0\fprq2{\*\panose 00000000000000000000}VPS Go Cong;}{\f298\fnil\fcharset0\fprq2{\*\panose 00000000000000000000}VPS Go Cong Hoa;}{\f299\fnil\fcharset0\fprq2{\*\panose 00000000000000000000}VPS Ha Dong;}
{\f300\fnil\fcharset0\fprq2{\*\panose 00000000000000000000}VPS Ha Dong Hoa;}{\f301\fswiss\fcharset0\fprq2{\*\panose 020b0000000000000000}VPS Ha Long;}{\f302\fswiss\fcharset0\fprq2{\*\panose 020b0000000000000000}VPS Ha Long Hoa;}
{\f303\fswiss\fcharset0\fprq2{\*\panose 020b0502020204020303}VPS Ha Noi Medium;}{\f304\fswiss\fcharset0\fprq2{\*\panose 020b0502020204020303}VPS Ha Noi Medium Hoa;}{\f305\fdecor\fcharset0\fprq2{\*\panose 04030705000002020703}VPS Ha Tien;}
{\f306\fdecor\fcharset0\fprq2{\*\panose 04030705000002020703}VPS Ha Tien Hoa;}{\f307\fswiss\fcharset0\fprq2{\*\panose 020b0000000000000000}VPS Hai Ninh;}{\f308\fswiss\fcharset0\fprq2{\*\panose 020b0000000000000000}VPS Hai Ninh Hoa;}
{\f309\fnil\fcharset0\fprq2{\*\panose 00000000000000000000}VPS Hai Phong Hoa;}{\f310\fdecor\fcharset0\fprq2{\*\panose 04030605060002020503}VPS Hoa Binh;}{\f311\fdecor\fcharset0\fprq2{\*\panose 04030605060002020503}VPS Hoa Binh Hoa;}
{\f312\fnil\fcharset0\fprq2{\*\panose 00000000000000000000}VPS Hoa Lu;}{\f313\fnil\fcharset0\fprq2{\*\panose 00000000000000000000}VPS Hoa Lu Hoa;}{\f314\fswiss\fcharset0\fprq2{\*\panose 020b0000000000000000}VPS Hoang Sa;}
{\f315\fswiss\fcharset0\fprq2{\*\panose 020b0000000000000000}VPS Hoang Sa Hoa;}{\f316\fdecor\fcharset0\fprq2{\*\panose 04040904000702020402}VPS Hue;}{\f317\fdecor\fcharset0\fprq2{\*\panose 04040904000702020402}VPS Hue Hoa;}
{\f318\fnil\fcharset0\fprq2{\*\panose 00000000000000000000}VPS Hung Yen;}{\f319\fnil\fcharset0\fprq2{\*\panose 00000000000000000000}VPS Hung Yen Hoa;}{\f320\fswiss\fcharset0\fprq2{\*\panose 020b0000000000000000}VPS Khanh Hoa;}
{\f321\fswiss\fcharset0\fprq2{\*\panose 020b0000000000000000}VPS Khanh Hoa Hoa;}{\f322\fnil\fcharset0\fprq2{\*\panose 00000000000000000000}VPS Khe Sanh Hoa;}{\f323\fdecor\fcharset0\fprq2{\*\panose 04030505050002020a03}VPS Kien Giang;}
{\f324\fdecor\fcharset0\fprq2{\*\panose 04030505050002020a03}VPS Kien Giang Hoa;}{\f325\fswiss\fcharset0\fprq2{\*\panose 020b0000000000000000}VPS Kontum;}{\f326\fswiss\fcharset0\fprq2{\*\panose 020b0000000000000000}VPS Kontum Hoa;}
{\f327\fswiss\fcharset0\fprq2{\*\panose 020b0000000000000000}VPS Lai Chau Hoa;}{\f328\fnil\fcharset0\fprq2{\*\panose 00000000000000000000}VPS Lang Son;}{\f329\fnil\fcharset0\fprq2{\*\panose 00000000000000000000}VPS Lang Son Hoa;}
{\f330\fdecor\fcharset0\fprq2{\*\panose 04030b07000002020403}VPS Lao Kay;}{\f331\fswiss\fcharset0\fprq2{\*\panose 020b0000000000000000}VPS Long Binh;}{\f332\fswiss\fcharset0\fprq2{\*\panose 020b0000000000000000}VPS Long Binh Hoa;}
{\f333\fnil\fcharset0\fprq2{\*\panose 00000000000000000000}VPS Long Hai;}{\f334\fnil\fcharset0\fprq2{\*\panose 00000000000000000000}VPS Long Hai Hoa;}{\f335\fscript\fcharset0\fprq2{\*\panose 03060702040402020b04}VPS Long Khanh;}
{\f336\fscript\fcharset0\fprq2{\*\panose 03060702040402020b04}VPS Long Khanh Hoa;}{\f337\fswiss\fcharset0\fprq2{\*\panose 020b0000000000000000}VPS Long Xuyen;}{\f338\fswiss\fcharset0\fprq2{\*\panose 020b0000000000000000}VPS Long Xuyen Hoa;}
{\f339\fnil\fcharset0\fprq2{\*\panose 00000000000000000000}VPS My Tho;}{\f340\fnil\fcharset0\fprq2{\*\panose 00000000000000000000}VPS My Tho Hoa;}{\f341\fswiss\fcharset0\fprq2{\*\panose 020b0500000000000000}VPS Nghe An;}
{\f342\fswiss\fcharset0\fprq2{\*\panose 020b0500000000000000}VPS Nghe An Hoa;}{\f343\fdecor\fcharset0\fprq2{\*\panose 04020705040002060702}VPS Ninh Thuan Hoa;}{\f344\fscript\fcharset0\fprq2{\*\panose 03040702020708020505}VPS Phong Dinh;}
{\f345\fscript\fcharset0\fprq2{\*\panose 03040702020708020505}VPS Phong Dinh Hoa;}{\f346\fdecor\fcharset0\fprq2{\*\panose 04040807060002020704}VPS Phu Bon Hoa;}{\f347\fswiss\fcharset0\fprq2{\*\panose 020b0000000000000000}VPS Phu Quoc Hoa;}
{\f348\fnil\fcharset0\fprq2{\*\panose 00000000000000000000}VPS Phu Yen;}{\f349\fnil\fcharset0\fprq2{\*\panose 00000000000000000000}VPS Phu Yen Hoa;}{\f350\fswiss\fcharset0\fprq2{\*\panose 020b0000000000000000}VPS Phuoc Long Hoa;}
{\f351\fdecor\fcharset0\fprq2{\*\panose 04030205020002020502}VPS Phuoc Thanh;}{\f352\fswiss\fcharset0\fprq2{\*\panose 020b0506020202030204}VPS Pleiku;}{\f353\fswiss\fcharset0\fprq2{\*\panose 020b0506020202030204}VPS Pleiku Hoa;}
{\f354\fswiss\fcharset0\fprq2{\*\panose 020b0000000000000000}VPS Quang Ngai Hoa;}{\f355\fswiss\fcharset0\fprq2{\*\panose 020b0000000000000000}VPS Quang Tri;}{\f356\fswiss\fcharset0\fprq2{\*\panose 020b0000000000000000}VPS Quang Tri Hoa;}
{\f357\fswiss\fcharset0\fprq2{\*\panose 020b0000000000000000}VPS Quang Yen Hoa;}{\f358\fnil\fcharset0\fprq2{\*\panose 00000000000000000000}VPS Qui Nhon;}{\f359\fnil\fcharset0\fprq2{\*\panose 00000000000000000000}VPS Qui Nhon Hoa;}
{\f360\fscript\fcharset0\fprq2{\*\panose 03040602040406080504}VPS Sa Dec;}{\f361\fscript\fcharset0\fprq2{\*\panose 03040602040406080504}VPS Sa Dec Hoa;}{\f362\fswiss\fcharset0\fprq2{\*\panose 020b0000000000000000}VPS Sai Gon;}
{\f363\fswiss\fcharset0\fprq2{\*\panose 020b0000000000000000}VPS Sai Gon Hoa;}{\f364\fnil\fcharset0\fprq2{\*\panose 00000000000000000000}VPS Soc Trang Hoa;}{\f365\fswiss\fcharset0\fprq2{\*\panose 020b0000000000000000}VPS Son La Hoa;}
{\f366\fswiss\fcharset0\fprq2{\*\panose 020b7200000000000000}VPS Son Tay;}{\f367\fswiss\fcharset0\fprq2{\*\panose 020b7200000000000000}VPS Son Tay Hoa;}{\f368\fscript\fcharset0\fprq2{\*\panose 03060902040502090204}VPS Tay Ninh;}
{\f369\fscript\fcharset0\fprq2{\*\panose 03060902040502090204}VPS Tay Ninh Hoa;}{\f370\fscript\fcharset0\fprq2{\*\panose 03020802060602070202}VPS Thai Nguyen;}{\f371\fscript\fcharset0\fprq2{\*\panose 03020802060602070202}VPS Thai Nguyen Hoa;}
{\f372\fswiss\fcharset0\fprq2{\*\panose 020b0500000000000000}VPS Thanh Hoa;}{\f373\fswiss\fcharset0\fprq2{\*\panose 020b0500000000000000}VPS Thanh Hoa Hoa;}{\f374\fnil\fcharset0\fprq2{\*\panose 00000000000000000000}VPS Thu Duc;}
{\f375\fnil\fcharset0\fprq2{\*\panose 00000000000000000000}VPS Thu Duc Hoa;}{\f376\fswiss\fcharset0\fprq2{\*\panose 020b0000000000000000}VPS Tra Vinh Hoa;}{\f377\froman\fcharset0\fprq2{\*\panose 02080503040505020303}VPS Truong Sa Light;}
{\f378\froman\fcharset0\fprq2{\*\panose 02080503040505020303}VPS Truong Sa Light Hoa;}{\f379\fswiss\fcharset0\fprq2{\*\panose 020b0402020202020204}VPS Tuyen Duc;}{\f380\fswiss\fcharset0\fprq2{\*\panose 020b0402020202020204}VPS Tuyen Duc Hoa;}
{\f381\fscript\fcharset0\fprq2{\*\panose 03020702040502020203}VPS Tuyen Quang;}{\f382\fscript\fcharset0\fprq2{\*\panose 03020702040502020203}VPS Tuyen Quang Hoa;}{\f383\fnil\fcharset0\fprq2{\*\panose 00000000000000000000}VPS Vinh;}
{\f384\fswiss\fcharset0\fprq2{\*\panose 020b0200000000000000}VPS Vinh Hoa;}{\f385\fdecor\fcharset0\fprq2{\*\panose 04040804050002020703}VPS Vinh Long;}{\f386\fdecor\fcharset0\fprq2{\*\panose 04040804050002020703}VPS Vinh Long Hoa;}
{\f387\fscript\fcharset0\fprq2{\*\panose 03010101010101010101}VPS Vinh Yen;}{\f388\fscript\fcharset0\fprq2{\*\panose 03010101010101010101}VPS Vinh Yen Hoa;}{\f389\froman\fcharset0\fprq2{\*\panose 0202060206050b020a04}VPS Vung Tau;}
{\f390\froman\fcharset0\fprq2{\*\panose 0202060206050b020a04}VPS Vung Tau Hoa;}{\f391\fdecor\fcharset0\fprq2{\*\panose 040b0905000002020804}VPS Yen Bai Hoa;}{\f392\froman\fcharset0\fprq2{\*\panose 020a0a07050505020404}VPS Dong Dang Hoa;}
{\f393\froman\fcharset0\fprq2{\*\panose 020a0a07050505020404}VPS Dong Dang;}{\f394\fdecor\fcharset0\fprq2{\*\panose 04030b07000002020403}VPS Lao Kay Hoa;}{\f395\fdecor\fcharset0\fprq2{\*\panose 04030205020002020502}VPS Phuoc Thanh Hoa;}
{\f396\fnil\fcharset0\fprq2{\*\panose 02000600000000000000}YorubaOK;}{\f397\fnil\fcharset0\fprq2{\*\panose 02000500060000020004}Charis SIL;}{\f398\fswiss\fcharset0\fprq2{\*\panose 020b7200000000000000}\'c1nhMinhH 1.1;}
{\f399\fswiss\fcharset0\fprq2{\*\panose 020b7200000000000000}ThaHuong 1.1;}{\f400\fswiss\fcharset0\fprq2{\*\panose 020b7200000000000000}ThaHuongH 1.1;}{\f401\fnil\fcharset0\fprq2{\*\panose 02000000000000000000}Aboriginal Sans;}
{\f402\fnil\fcharset0\fprq2{\*\panose 02000500000000020004}Vulcanius;}{\f403\fswiss\fcharset0\fprq2{\*\panose 020b0604030504040204}Myanmar1;}{\f404\fnil\fcharset0\fprq2{\*\panose 00000400000000000000}JG ChamVN;}
{\f405\fnil\fcharset0\fprq2{\*\panose 02010503010101010104}Iskoola Pota;}{\f406\fnil\fcharset2\fprq2{\*\panose 05010101010101010101}SWGamekeys MT;}{\f407\fnil\fcharset2\fprq2{\*\panose 05010101010101010101}SWGamekeys2 MT;}
{\f408\fmodern\fcharset0\fprq2{\*\panose 02010509020102010303}OCR A Extended;}{\f409\fmodern\fcharset128\fprq1{\*\panose 02020609040205080304}@MS Mincho;}{\f410\froman\fcharset128\fprq2{\*\panose 02020600040205080304}MS PMincho;}
{\f411\froman\fcharset128\fprq2{\*\panose 02020600040205080304}@MS PMincho;}{\f412\fmodern\fcharset128\fprq1{\*\panose 020b0609070205080204}@MS Gothic;}{\f413\fswiss\fcharset128\fprq2{\*\panose 020b0600070205080204}MS PGothic;}
{\f414\fswiss\fcharset128\fprq2{\*\panose 020b0600070205080204}@MS PGothic;}{\f415\fswiss\fcharset128\fprq2{\*\panose 020b0600070205080204}MS UI Gothic;}{\f416\fswiss\fcharset128\fprq2{\*\panose 020b0600070205080204}@MS UI Gothic;}
{\f417\fswiss\fcharset129\fprq2{\*\panose 020b0600000101010101}@Gulim;}{\f418\fmodern\fcharset129\fprq1{\*\panose 020b0609000101010101}GulimChe;}{\f419\fmodern\fcharset129\fprq1{\*\panose 020b0609000101010101}@GulimChe;}
{\f420\fswiss\fcharset129\fprq2{\*\panose 020b0600000101010101}@Dotum;}{\f421\fmodern\fcharset129\fprq1{\*\panose 020b0609000101010101}DotumChe;}{\f422\fmodern\fcharset129\fprq1{\*\panose 020b0609000101010101}@DotumChe;}
{\f423\froman\fcharset129\fprq2{\*\panose 02030600000101010101}@Batang;}{\f424\fmodern\fcharset129\fprq1{\*\panose 02030609000101010101}BatangChe;}{\f425\fmodern\fcharset129\fprq1{\*\panose 02030609000101010101}@BatangChe;}
{\f426\froman\fcharset129\fprq2{\*\panose 02030600000101010101}Gungsuh;}{\f427\froman\fcharset129\fprq2{\*\panose 02030600000101010101}@Gungsuh;}{\f428\fmodern\fcharset129\fprq1{\*\panose 02030609000101010101}GungsuhChe;}
{\f429\fmodern\fcharset129\fprq1{\*\panose 02030609000101010101}@GungsuhChe;}{\f430\fnil\fcharset134\fprq2{\*\panose 02010600030101010101}@SimSun;}{\f431\fmodern\fcharset134\fprq1{\*\panose 02010609030101010101}NSimSun;}
{\f432\fmodern\fcharset134\fprq1{\*\panose 02010609030101010101}@NSimSun;}{\f433\fnil\fcharset134\fprq2{\*\panose 02010600030101010101}@SimHei;}{\f434\fmodern\fcharset136\fprq1{\*\panose 02020309000000000000}@MingLiU;}
{\f435\froman\fcharset136\fprq2{\*\panose 02020300000000000000}@PMingLiU;}{\f436\fnil\fcharset0\fprq2{\*\panose 00000400000000000000}JG Cham Ver2;}{\f437\fnil\fcharset0\fprq2{\*\panose 02000400000000000000}DinaminaUniWeb;}
{\f438\fswiss\fcharset0\fprq2{\*\panose 020b0400000000000000}Malithi Web;}{\f439\fnil\fcharset0\fprq2{\*\panose 00000400000000000000}Basketcase;}{\f440\fnil\fcharset0\fprq2{\*\panose 00000400000000000000}Bleed;}
{\f441\fnil\fcharset0\fprq2{\*\panose 00000400000000000000}Blood Of Dracula;}{\f442\fnil\fcharset0\fprq2{\*\panose 00000400000000000000}Bloodgutter 99;}{\f443\fnil\fcharset0\fprq2{\*\panose 00000400000000000000}Bloodsuckers;}
{\f444\fnil\fcharset0\fprq2{\*\panose 00000000000000000000}Bloody;}{\f445\fnil\fcharset2\fprq2{\*\panose 00000400000000000000}Double Feature;}{\f446\fnil\fcharset0\fprq2{\*\panose 00000400000000000000}Dracula;}
{\f447\fnil\fcharset0\fprq2{\*\panose 00000400000000000000}DrippingGoo;}{\f448\fnil\fcharset0\fprq2{\*\panose 00000000000000000000}Ghouly Caps;}{\f449\fnil\fcharset0\fprq2{\*\panose 00000400000000000000}GoreFont;}
{\f450\fnil\fcharset0\fprq2{\*\panose 00000400000000000000}Green Fuz;}{\f451\fnil\fcharset0\fprq2{\*\panose 00000400000000000000}Grossout Shadow;}{\f452\fnil\fcharset0\fprq2{\*\panose 00000400000000000000}Halloween;}
{\f453\fnil\fcharset0\fprq2{\*\panose 00000000000000000000}Horror;}{\f454\fnil\fcharset0\fprq2{\*\panose 00000400000000000000}Liquidism;}{\f455\fnil\fcharset0\fprq2{\*\panose 00000400000000000000}Liquidism part 2;}
{\f456\fnil\fcharset0\fprq2{\*\panose 00000000000000000000}PostCrypt;}{\f457\froman\fcharset0\fprq2{\*\panose 02020500000000000000}PreCrypt;}{\f458\fnil\fcharset0\fprq2{\*\panose 00000400000000000000}ROCKY;}
{\f459\fnil\fcharset0\fprq2{\*\panose 00000400000000000000}Sanguinary\'99;}{\f460\fswiss\fcharset0\fprq2{\*\panose 020b0608020202050204}Shlop;}{\f461\fnil\fcharset0\fprq2{\*\panose 00000400000000000000}SolsticeOfSuffering;}
{\f462\fmodern\fcharset0\fprq1{\*\panose 02000409000000000000}TeleText;}{\f463\fmodern\fcharset0\fprq1{\*\panose 02000409000000000000}TeleTextDH;}{\f464\fmodern\fcharset0\fprq1{\*\panose 02000409000000000000}TeleTextLineDraw;}
{\f465\fmodern\fcharset0\fprq1{\*\panose 02000409000000000000}TeleTextLineDrawDH;}{\f466\fswiss\fcharset163\fprq2{\*\panose 00000000000000000000}Microsoft Sans Serif (Vietnames;}{\f467\froman\fcharset238\fprq2 Times New Roman CE;}
{\f468\froman\fcharset204\fprq2 Times New Roman Cyr;}{\f470\froman\fcharset161\fprq2 Times New Roman Greek;}{\f471\froman\fcharset162\fprq2 Times New Roman Tur;}{\f472\froman\fcharset177\fprq2 Times New Roman (Hebrew);}
{\f473\froman\fcharset178\fprq2 Times New Roman (Arabic);}{\f474\froman\fcharset186\fprq2 Times New Roman Baltic;}{\f475\froman\fcharset163\fprq2 Times New Roman (Vietnamese);}{\f477\fswiss\fcharset238\fprq2 Arial CE;}
{\f478\fswiss\fcharset204\fprq2 Arial Cyr;}{\f480\fswiss\fcharset161\fprq2 Arial Greek;}{\f481\fswiss\fcharset162\fprq2 Arial Tur;}{\f482\fswiss\fcharset177\fprq2 Arial (Hebrew);}{\f483\fswiss\fcharset178\fprq2 Arial (Arabic);}
{\f484\fswiss\fcharset186\fprq2 Arial Baltic;}{\f485\fswiss\fcharset163\fprq2 Arial (Vietnamese);}{\f487\fmodern\fcharset238\fprq1 Courier New CE;}{\f488\fmodern\fcharset204\fprq1 Courier New Cyr;}{\f490\fmodern\fcharset161\fprq1 Courier New Greek;}
{\f491\fmodern\fcharset162\fprq1 Courier New Tur;}{\f492\fmodern\fcharset177\fprq1 Courier New (Hebrew);}{\f493\fmodern\fcharset178\fprq1 Courier New (Arabic);}{\f494\fmodern\fcharset186\fprq1 Courier New Baltic;}
{\f495\fmodern\fcharset163\fprq1 Courier New (Vietnamese);}{\f507\fswiss\fcharset238\fprq2 Helvetica CE;}{\f508\fswiss\fcharset204\fprq2 Helvetica Cyr;}{\f510\fswiss\fcharset161\fprq2 Helvetica Greek;}{\f511\fswiss\fcharset162\fprq2 Helvetica Tur;}
{\f512\fswiss\fcharset177\fprq2 Helvetica (Hebrew);}{\f513\fswiss\fcharset178\fprq2 Helvetica (Arabic);}{\f514\fswiss\fcharset186\fprq2 Helvetica Baltic;}{\f515\fswiss\fcharset163\fprq2 Helvetica (Vietnamese);}
{\f579\fmodern\fcharset0\fprq1 MS Mincho Western{\*\falt ?l?r ??\'81\'66c};}{\f577\fmodern\fcharset238\fprq1 MS Mincho CE{\*\falt ?l?r ??\'81\'66c};}{\f578\fmodern\fcharset204\fprq1 MS Mincho Cyr{\*\falt ?l?r ??\'81\'66c};}
{\f580\fmodern\fcharset161\fprq1 MS Mincho Greek{\*\falt ?l?r ??\'81\'66c};}{\f581\fmodern\fcharset162\fprq1 MS Mincho Tur{\*\falt ?l?r ??\'81\'66c};}{\f584\fmodern\fcharset186\fprq1 MS Mincho Baltic{\*\falt ?l?r ??\'81\'66c};}
{\f589\froman\fcharset0\fprq2 Batang Western{\*\falt \'a8\'cfoUAA};}{\f587\froman\fcharset238\fprq2 Batang CE{\*\falt \'a8\'cfoUAA};}{\f588\froman\fcharset204\fprq2 Batang Cyr{\*\falt \'a8\'cfoUAA};}
{\f590\froman\fcharset161\fprq2 Batang Greek{\*\falt \'a8\'cfoUAA};}{\f591\froman\fcharset162\fprq2 Batang Tur{\*\falt \'a8\'cfoUAA};}{\f594\froman\fcharset186\fprq2 Batang Baltic{\*\falt \'a8\'cfoUAA};}
{\f599\fnil\fcharset0\fprq2 SimSun Western{\*\falt ??\'a1\'a7??};}{\f609\froman\fcharset0\fprq2 PMingLiU Western{\*\falt !Ps2OcuAe};}{\f619\fmodern\fcharset0\fprq1 MS Gothic Western{\*\falt ?l?r ?S?V?b?N};}
{\f617\fmodern\fcharset238\fprq1 MS Gothic CE{\*\falt ?l?r ?S?V?b?N};}{\f618\fmodern\fcharset204\fprq1 MS Gothic Cyr{\*\falt ?l?r ?S?V?b?N};}{\f620\fmodern\fcharset161\fprq1 MS Gothic Greek{\*\falt ?l?r ?S?V?b?N};}
{\f621\fmodern\fcharset162\fprq1 MS Gothic Tur{\*\falt ?l?r ?S?V?b?N};}{\f624\fmodern\fcharset186\fprq1 MS Gothic Baltic{\*\falt ?l?r ?S?V?b?N};}{\f629\fswiss\fcharset0\fprq2 Dotum Western{\*\falt \'a1\'cdi\'a1\'cb\'a1\'fe\'a1\'cb?o};}
{\f627\fswiss\fcharset238\fprq2 Dotum CE{\*\falt \'a1\'cdi\'a1\'cb\'a1\'fe\'a1\'cb?o};}{\f628\fswiss\fcharset204\fprq2 Dotum Cyr{\*\falt \'a1\'cdi\'a1\'cb\'a1\'fe\'a1\'cb?o};}
{\f630\fswiss\fcharset161\fprq2 Dotum Greek{\*\falt \'a1\'cdi\'a1\'cb\'a1\'fe\'a1\'cb?o};}{\f631\fswiss\fcharset162\fprq2 Dotum Tur{\*\falt \'a1\'cdi\'a1\'cb\'a1\'fe\'a1\'cb?o};}
{\f634\fswiss\fcharset186\fprq2 Dotum Baltic{\*\falt \'a1\'cdi\'a1\'cb\'a1\'fe\'a1\'cb?o};}{\f649\fmodern\fcharset0\fprq1 MingLiU Western{\*\falt 2OcuAe};}
{\f669\fswiss\fcharset0\fprq2 Gulim Western{\*\falt \'a2\'ae\'a8\'fa\'a1\'a7u\'a1\'cb\'a1\'fe\'a8\'cf\'a1\'c0};}{\f667\fswiss\fcharset238\fprq2 Gulim CE{\*\falt \'a2\'ae\'a8\'fa\'a1\'a7u\'a1\'cb\'a1\'fe\'a8\'cf\'a1\'c0};}
{\f668\fswiss\fcharset204\fprq2 Gulim Cyr{\*\falt \'a2\'ae\'a8\'fa\'a1\'a7u\'a1\'cb\'a1\'fe\'a8\'cf\'a1\'c0};}{\f670\fswiss\fcharset161\fprq2 Gulim Greek{\*\falt \'a2\'ae\'a8\'fa\'a1\'a7u\'a1\'cb\'a1\'fe\'a8\'cf\'a1\'c0};}
{\f671\fswiss\fcharset162\fprq2 Gulim Tur{\*\falt \'a2\'ae\'a8\'fa\'a1\'a7u\'a1\'cb\'a1\'fe\'a8\'cf\'a1\'c0};}{\f674\fswiss\fcharset186\fprq2 Gulim Baltic{\*\falt \'a2\'ae\'a8\'fa\'a1\'a7u\'a1\'cb\'a1\'fe\'a8\'cf\'a1\'c0};}
{\f696\froman\fcharset222\fprq2 Angsana New (Thai);}{\f706\fswiss\fcharset222\fprq2 Cordia New (Thai);}{\f727\froman\fcharset238\fprq2 Sylfaen CE;}{\f728\froman\fcharset204\fprq2 Sylfaen Cyr;}{\f730\froman\fcharset161\fprq2 Sylfaen Greek;}
{\f731\froman\fcharset162\fprq2 Sylfaen Tur;}{\f734\froman\fcharset186\fprq2 Sylfaen Baltic;}{\f809\fswiss\fcharset0\fprq2 Arial Unicode MS Western;}{\f807\fswiss\fcharset238\fprq2 Arial Unicode MS CE;}
{\f808\fswiss\fcharset204\fprq2 Arial Unicode MS Cyr;}{\f810\fswiss\fcharset161\fprq2 Arial Unicode MS Greek;}{\f811\fswiss\fcharset162\fprq2 Arial Unicode MS Tur;}{\f812\fswiss\fcharset177\fprq2 Arial Unicode MS (Hebrew);}
{\f813\fswiss\fcharset178\fprq2 Arial Unicode MS (Arabic);}{\f814\fswiss\fcharset186\fprq2 Arial Unicode MS Baltic;}{\f815\fswiss\fcharset163\fprq2 Arial Unicode MS (Vietnamese);}{\f816\fswiss\fcharset222\fprq2 Arial Unicode MS (Thai);}
{\f817\fswiss\fcharset238\fprq2 Tahoma CE;}{\f818\fswiss\fcharset204\fprq2 Tahoma Cyr;}{\f820\fswiss\fcharset161\fprq2 Tahoma Greek;}{\f821\fswiss\fcharset162\fprq2 Tahoma Tur;}{\f822\fswiss\fcharset177\fprq2 Tahoma (Hebrew);}
{\f823\fswiss\fcharset178\fprq2 Tahoma (Arabic);}{\f824\fswiss\fcharset186\fprq2 Tahoma Baltic;}{\f825\fswiss\fcharset163\fprq2 Tahoma (Vietnamese);}{\f826\fswiss\fcharset222\fprq2 Tahoma (Thai);}{\f837\fmodern\fcharset238\fprq1 Lucida Console CE;}
{\f838\fmodern\fcharset204\fprq1 Lucida Console Cyr;}{\f840\fmodern\fcharset161\fprq1 Lucida Console Greek;}{\f841\fmodern\fcharset162\fprq1 Lucida Console Tur;}{\f847\fswiss\fcharset238\fprq2 Lucida Sans Unicode CE;}
{\f848\fswiss\fcharset204\fprq2 Lucida Sans Unicode Cyr;}{\f850\fswiss\fcharset161\fprq2 Lucida Sans Unicode Greek;}{\f851\fswiss\fcharset162\fprq2 Lucida Sans Unicode Tur;}{\f852\fswiss\fcharset177\fprq2 Lucida Sans Unicode (Hebrew);}
{\f857\fswiss\fcharset238\fprq2 Verdana CE;}{\f858\fswiss\fcharset204\fprq2 Verdana Cyr;}{\f860\fswiss\fcharset161\fprq2 Verdana Greek;}{\f861\fswiss\fcharset162\fprq2 Verdana Tur;}{\f864\fswiss\fcharset186\fprq2 Verdana Baltic;}
{\f865\fswiss\fcharset163\fprq2 Verdana (Vietnamese);}{\f867\fswiss\fcharset238\fprq2 Arial Black CE;}{\f868\fswiss\fcharset204\fprq2 Arial Black Cyr;}{\f870\fswiss\fcharset161\fprq2 Arial Black Greek;}{\f871\fswiss\fcharset162\fprq2 Arial Black Tur;}
{\f874\fswiss\fcharset186\fprq2 Arial Black Baltic;}{\f877\fscript\fcharset238\fprq2 Comic Sans MS CE;}{\f878\fscript\fcharset204\fprq2 Comic Sans MS Cyr;}{\f880\fscript\fcharset161\fprq2 Comic Sans MS Greek;}
{\f881\fscript\fcharset162\fprq2 Comic Sans MS Tur;}{\f884\fscript\fcharset186\fprq2 Comic Sans MS Baltic;}{\f887\fswiss\fcharset238\fprq2 Impact CE;}{\f888\fswiss\fcharset204\fprq2 Impact Cyr;}{\f890\fswiss\fcharset161\fprq2 Impact Greek;}
{\f891\fswiss\fcharset162\fprq2 Impact Tur;}{\f894\fswiss\fcharset186\fprq2 Impact Baltic;}{\f897\froman\fcharset238\fprq2 Georgia CE;}{\f898\froman\fcharset204\fprq2 Georgia Cyr;}{\f900\froman\fcharset161\fprq2 Georgia Greek;}
{\f901\froman\fcharset162\fprq2 Georgia Tur;}{\f904\froman\fcharset186\fprq2 Georgia Baltic;}{\f907\fswiss\fcharset238\fprq2 Franklin Gothic Medium CE;}{\f908\fswiss\fcharset204\fprq2 Franklin Gothic Medium Cyr;}
{\f910\fswiss\fcharset161\fprq2 Franklin Gothic Medium Greek;}{\f911\fswiss\fcharset162\fprq2 Franklin Gothic Medium Tur;}{\f914\fswiss\fcharset186\fprq2 Franklin Gothic Medium Baltic;}{\f917\froman\fcharset238\fprq2 Palatino Linotype CE;}
{\f918\froman\fcharset204\fprq2 Palatino Linotype Cyr;}{\f920\froman\fcharset161\fprq2 Palatino Linotype Greek;}{\f921\froman\fcharset162\fprq2 Palatino Linotype Tur;}{\f924\froman\fcharset186\fprq2 Palatino Linotype Baltic;}
{\f925\froman\fcharset163\fprq2 Palatino Linotype (Vietnamese);}{\f927\fswiss\fcharset238\fprq2 Trebuchet MS CE;}{\f928\fswiss\fcharset204\fprq2 Trebuchet MS Cyr;}{\f930\fswiss\fcharset161\fprq2 Trebuchet MS Greek;}
{\f931\fswiss\fcharset162\fprq2 Trebuchet MS Tur;}{\f934\fswiss\fcharset186\fprq2 Trebuchet MS Baltic;}{\f967\fswiss\fcharset238\fprq2 Microsoft Sans Serif CE;}{\f968\fswiss\fcharset204\fprq2 Microsoft Sans Serif Cyr;}
{\f970\fswiss\fcharset161\fprq2 Microsoft Sans Serif Greek;}{\f971\fswiss\fcharset162\fprq2 Microsoft Sans Serif Tur;}{\f972\fswiss\fcharset177\fprq2 Microsoft Sans Serif (Hebrew);}{\f973\fswiss\fcharset178\fprq2 Microsoft Sans Serif (Arabic);}
{\f974\fswiss\fcharset186\fprq2 Microsoft Sans Serif Baltic;}{\f975\fswiss\fcharset163\fprq2 Microsoft Sans Serif (Vietnamese);}{\f976\fswiss\fcharset222\fprq2 Microsoft Sans Serif (Thai);}{\f1006\fswiss\fcharset222\fprq2 Browallia New (Thai);}
{\f1257\fswiss\fcharset238\fprq2 Arial Narrow CE;}{\f1258\fswiss\fcharset204\fprq2 Arial Narrow Cyr;}{\f1260\fswiss\fcharset161\fprq2 Arial Narrow Greek;}{\f1261\fswiss\fcharset162\fprq2 Arial Narrow Tur;}
{\f1264\fswiss\fcharset186\fprq2 Arial Narrow Baltic;}{\f1267\froman\fcharset238\fprq2 Book Antiqua CE;}{\f1268\froman\fcharset204\fprq2 Book Antiqua Cyr;}{\f1270\froman\fcharset161\fprq2 Book Antiqua Greek;}
{\f1271\froman\fcharset162\fprq2 Book Antiqua Tur;}{\f1274\froman\fcharset186\fprq2 Book Antiqua Baltic;}{\f1277\froman\fcharset238\fprq2 Bookman Old Style CE;}{\f1278\froman\fcharset204\fprq2 Bookman Old Style Cyr;}
{\f1280\froman\fcharset161\fprq2 Bookman Old Style Greek;}{\f1281\froman\fcharset162\fprq2 Bookman Old Style Tur;}{\f1284\froman\fcharset186\fprq2 Bookman Old Style Baltic;}{\f1287\fswiss\fcharset238\fprq2 Century Gothic CE;}
{\f1288\fswiss\fcharset204\fprq2 Century Gothic Cyr;}{\f1290\fswiss\fcharset161\fprq2 Century Gothic Greek;}{\f1291\fswiss\fcharset162\fprq2 Century Gothic Tur;}{\f1294\fswiss\fcharset186\fprq2 Century Gothic Baltic;}
{\f1297\froman\fcharset238\fprq2 Garamond CE;}{\f1298\froman\fcharset204\fprq2 Garamond Cyr;}{\f1300\froman\fcharset161\fprq2 Garamond Greek;}{\f1301\froman\fcharset162\fprq2 Garamond Tur;}{\f1304\froman\fcharset186\fprq2 Garamond Baltic;}
{\f1307\fswiss\fcharset238\fprq2 Haettenschweiler CE;}{\f1308\fswiss\fcharset204\fprq2 Haettenschweiler Cyr;}{\f1310\fswiss\fcharset161\fprq2 Haettenschweiler Greek;}{\f1311\fswiss\fcharset162\fprq2 Haettenschweiler Tur;}
{\f1314\fswiss\fcharset186\fprq2 Haettenschweiler Baltic;}{\f1327\fscript\fcharset238\fprq2 Monotype Corsiva CE;}{\f1328\fscript\fcharset204\fprq2 Monotype Corsiva Cyr;}{\f1330\fscript\fcharset161\fprq2 Monotype Corsiva Greek;}
{\f1331\fscript\fcharset162\fprq2 Monotype Corsiva Tur;}{\f1334\fscript\fcharset186\fprq2 Monotype Corsiva Baltic;}{\f1459\fswiss\fcharset0\fprq2 @Arial Unicode MS Western;}{\f1457\fswiss\fcharset238\fprq2 @Arial Unicode MS CE;}
{\f1458\fswiss\fcharset204\fprq2 @Arial Unicode MS Cyr;}{\f1460\fswiss\fcharset161\fprq2 @Arial Unicode MS Greek;}{\f1461\fswiss\fcharset162\fprq2 @Arial Unicode MS Tur;}{\f1462\fswiss\fcharset177\fprq2 @Arial Unicode MS (Hebrew);}
{\f1463\fswiss\fcharset178\fprq2 @Arial Unicode MS (Arabic);}{\f1464\fswiss\fcharset186\fprq2 @Arial Unicode MS Baltic;}{\f1465\fswiss\fcharset163\fprq2 @Arial Unicode MS (Vietnamese);}{\f1466\fswiss\fcharset222\fprq2 @Arial Unicode MS (Thai);}
{\f1467\fswiss\fcharset238\fprq2 .VnArial CE;}{\f1471\fswiss\fcharset162\fprq2 .VnArial Tur;}{\f1477\fswiss\fcharset238\fprq2 .VnArial Narrow CE;}{\f1487\fswiss\fcharset238\fprq2 .VnArialH CE;}{\f1537\fswiss\fcharset238\fprq2 .VnTimeH CE;}
{\f1541\fswiss\fcharset162\fprq2 .VnTimeH Tur;}{\f1730\fnil\fcharset161\fprq2 Bouwsma Uncial Greek;}{\f1817\fnil\fcharset238\fprq2 Cartoon CE;}{\f1820\fnil\fcharset161\fprq2 Cartoon Greek;}{\f1821\fnil\fcharset162\fprq2 Cartoon Tur;}
{\f2150\fnil\fcharset161\fprq2 Alba Greek;}{\f2160\fnil\fcharset161\fprq2 Alba Matter Greek;}{\f2170\fnil\fcharset161\fprq2 Alba Super Greek;}{\f2180\fnil\fcharset161\fprq2 Baby Kruffy Greek;}{\f2190\fnil\fcharset161\fprq2 Chick Greek;}
{\f2200\fnil\fcharset161\fprq2 Croobie Greek;}{\f2220\fnil\fcharset161\fprq2 Freshbot Greek;}{\f2230\fnil\fcharset161\fprq2 Frosty Greek;}{\f2240\fnil\fcharset161\fprq2 GlooGun Greek;}{\f2250\fnil\fcharset161\fprq2 Jenkins v2.0 Greek;}
{\f2280\fnil\fcharset161\fprq2 Pussycat Greek;}{\f2290\fnil\fcharset161\fprq2 Weltron Urban Greek;}{\f2310\fnil\fcharset161\fprq2 John Handy LET Greek;}{\f2320\fnil\fcharset161\fprq2 Academy Engraved LET Greek;}
{\f2330\fnil\fcharset161\fprq2 University Roman LET Greek;}{\f2340\fnil\fcharset161\fprq2 Milano LET Greek;}{\f2350\fnil\fcharset161\fprq2 Smudger LET Greek;}{\f2360\fnil\fcharset161\fprq2 Ruach LET Greek;}
{\f2370\fnil\fcharset161\fprq2 La Bamba LET Greek;}{\f2380\fnil\fcharset161\fprq2 Quixley LET Greek;}{\f2390\fnil\fcharset161\fprq2 One Stroke Script LET Greek;}{\f2400\fnil\fcharset161\fprq2 Odessa LET Greek;}
{\f2410\fnil\fcharset161\fprq2 Scruff LET Greek;}{\f2417\fscript\fcharset238\fprq2 ParkAvenue BT CE;}{\f2420\fscript\fcharset161\fprq2 ParkAvenue BT Greek;}{\f2421\fscript\fcharset162\fprq2 ParkAvenue BT Tur;}
{\f2427\fscript\fcharset238\fprq2 Staccato222 BT CE;}{\f2430\fscript\fcharset161\fprq2 Staccato222 BT Greek;}{\f2431\fscript\fcharset162\fprq2 Staccato222 BT Tur;}{\f2437\fscript\fcharset238\fprq2 Cataneo BT CE;}
{\f2440\fscript\fcharset161\fprq2 Cataneo BT Greek;}{\f2441\fscript\fcharset162\fprq2 Cataneo BT Tur;}{\f2447\fscript\fcharset238\fprq2 Blackletter686 BT CE;}{\f2450\fscript\fcharset161\fprq2 Blackletter686 BT Greek;}
{\f2451\fscript\fcharset162\fprq2 Blackletter686 BT Tur;}{\f2457\fscript\fcharset238\fprq2 Calligraph421 BT CE;}{\f2460\fscript\fcharset161\fprq2 Calligraph421 BT Greek;}{\f2461\fscript\fcharset162\fprq2 Calligraph421 BT Tur;}
{\f2467\fscript\fcharset238\fprq2 MisterEarl BT CE;}{\f2470\fscript\fcharset161\fprq2 MisterEarl BT Greek;}{\f2471\fscript\fcharset162\fprq2 MisterEarl BT Tur;}{\f2477\fdecor\fcharset238\fprq2 OldDreadfulNo7 BT CE;}
{\f2480\fdecor\fcharset161\fprq2 OldDreadfulNo7 BT Greek;}{\f2481\fdecor\fcharset162\fprq2 OldDreadfulNo7 BT Tur;}{\f2500\fnil\fcharset161\fprq2 Jokerman LET Greek;}{\f2510\fnil\fcharset161\fprq2 Orange LET Greek;}
{\f2520\fnil\fcharset161\fprq2 Victorian LET Greek;}{\f2530\fnil\fcharset161\fprq2 Westwood LET Greek;}{\f2540\fnil\fcharset161\fprq2 Rage Italic LET Greek;}{\f2550\fnil\fcharset161\fprq2 Tiranti Solid LET Greek;}
{\f2560\fnil\fcharset161\fprq2 Mekanik LET Greek;}{\f2570\fnil\fcharset161\fprq2 Highlight LET Greek;}{\f2577\fdecor\fcharset238\fprq2 Broadway BT CE;}{\f2580\fdecor\fcharset161\fprq2 Broadway BT Greek;}{\f2581\fdecor\fcharset162\fprq2 Broadway BT Tur;}
{\f2587\fswiss\fcharset238\fprq2 Square721 BT CE;}{\f2590\fswiss\fcharset161\fprq2 Square721 BT Greek;}{\f2591\fswiss\fcharset162\fprq2 Square721 BT Tur;}{\f2600\fnil\fcharset161\fprq2 Pump Demi Bold LET Greek;}
{\f2747\fscript\fcharset238\fprq2 VPS Kien An Hoa CE;}{\f2750\fscript\fcharset161\fprq2 VPS Kien An Hoa Greek;}{\f2751\fscript\fcharset162\fprq2 VPS Kien An Hoa Tur;}{\f2757\fswiss\fcharset238\fprq2 VPS Cho Lon Hoa CE;}
{\f2760\fswiss\fcharset161\fprq2 VPS Cho Lon Hoa Greek;}{\f2761\fswiss\fcharset162\fprq2 VPS Cho Lon Hoa Tur;}{\f2801\fnil\fcharset162\fprq2 Khmer OS System Tur;}{\f2805\fnil\fcharset163\fprq2 Khmer OS System (Vietnamese);}
{\f2841\fnil\fcharset162\fprq2 MahaSila Tur;}{\f2845\fnil\fcharset163\fprq2 MahaSila (Vietnamese);}{\f2987\fdecor\fcharset238\fprq2 VPS An Xuyen CE;}{\f2990\fdecor\fcharset161\fprq2 VPS An Xuyen Greek;}{\f2991\fdecor\fcharset162\fprq2 VPS An Xuyen Tur;}
{\f2997\fdecor\fcharset238\fprq2 VPS An Xuyen Hoa CE;}{\f3000\fdecor\fcharset161\fprq2 VPS An Xuyen Hoa Greek;}{\f3001\fdecor\fcharset162\fprq2 VPS An Xuyen Hoa Tur;}{\f3041\fscript\fcharset162\fprq2 VPS Bac Kan Tur;}
{\f3051\fscript\fcharset162\fprq2 VPS Bac Kan Hoa Tur;}{\f3167\fscript\fcharset238\fprq2 VPS Binh Tuy CE;}{\f3170\fscript\fcharset161\fprq2 VPS Binh Tuy Greek;}{\f3171\fscript\fcharset162\fprq2 VPS Binh Tuy Tur;}
{\f3177\fscript\fcharset238\fprq2 VPS Binh Tuy Hoa CE;}{\f3180\fscript\fcharset161\fprq2 VPS Binh Tuy Hoa Greek;}{\f3181\fscript\fcharset162\fprq2 VPS Binh Tuy Hoa Tur;}{\f3187\fnil\fcharset238\fprq2 VPS Ca Mau CE;}
{\f3191\fnil\fcharset162\fprq2 VPS Ca Mau Tur;}{\f3197\fnil\fcharset238\fprq2 VPS Ca Mau Hoa CE;}{\f3201\fnil\fcharset162\fprq2 VPS Ca Mau Hoa Tur;}{\f3247\fscript\fcharset238\fprq2 VPS Chau Doc CE;}{\f3250\fscript\fcharset161\fprq2 VPS Chau Doc Greek;}
{\f3251\fscript\fcharset162\fprq2 VPS Chau Doc Tur;}{\f3297\fscript\fcharset238\fprq2 VPS Cu Chi CE;}{\f3300\fscript\fcharset161\fprq2 VPS Cu Chi Greek;}{\f3301\fscript\fcharset162\fprq2 VPS Cu Chi Tur;}
{\f3307\fscript\fcharset238\fprq2 VPS Cu Chi Hoa CE;}{\f3310\fscript\fcharset161\fprq2 VPS Cu Chi Hoa Greek;}{\f3311\fscript\fcharset162\fprq2 VPS Cu Chi Hoa Tur;}{\f3337\fscript\fcharset238\fprq2 VPS Dac Lac Hoa CE;}
{\f3340\fscript\fcharset161\fprq2 VPS Dac Lac Hoa Greek;}{\f3341\fscript\fcharset162\fprq2 VPS Dac Lac Hoa Tur;}{\f3367\fscript\fcharset238\fprq2 VPS Dong Ha CE;}{\f3370\fscript\fcharset161\fprq2 VPS Dong Ha Greek;}
{\f3371\fscript\fcharset162\fprq2 VPS Dong Ha Tur;}{\f3377\fscript\fcharset238\fprq2 VPS Dong Ha Hoa CE;}{\f3380\fscript\fcharset161\fprq2 VPS Dong Ha Hoa Greek;}{\f3381\fscript\fcharset162\fprq2 VPS Dong Ha Hoa Tur;}
{\f3387\fdecor\fcharset238\fprq2 VPS Dong Hoi CE;}{\f3390\fdecor\fcharset161\fprq2 VPS Dong Hoi Greek;}{\f3391\fdecor\fcharset162\fprq2 VPS Dong Hoi Tur;}{\f3397\fdecor\fcharset238\fprq2 VPS Dong Hoi Hoa CE;}
{\f3400\fdecor\fcharset161\fprq2 VPS Dong Hoi Hoa Greek;}{\f3401\fdecor\fcharset162\fprq2 VPS Dong Hoi Hoa Tur;}{\f3407\fscript\fcharset238\fprq2 VPS Dong Nai CE;}{\f3410\fscript\fcharset161\fprq2 VPS Dong Nai Greek;}
{\f3411\fscript\fcharset162\fprq2 VPS Dong Nai Tur;}{\f3417\fscript\fcharset238\fprq2 VPS Dong Nai Hoa CE;}{\f3420\fscript\fcharset161\fprq2 VPS Dong Nai Hoa Greek;}{\f3421\fscript\fcharset162\fprq2 VPS Dong Nai Hoa Tur;}
{\f3437\fnil\fcharset238\fprq2 VPS Go Cong CE;}{\f3447\fnil\fcharset238\fprq2 VPS Go Cong Hoa CE;}{\f3497\fswiss\fcharset238\fprq2 VPS Ha Noi Medium CE;}{\f3500\fswiss\fcharset161\fprq2 VPS Ha Noi Medium Greek;}
{\f3501\fswiss\fcharset162\fprq2 VPS Ha Noi Medium Tur;}{\f3507\fswiss\fcharset238\fprq2 VPS Ha Noi Medium Hoa CE;}{\f3510\fswiss\fcharset161\fprq2 VPS Ha Noi Medium Hoa Greek;}{\f3511\fswiss\fcharset162\fprq2 VPS Ha Noi Medium Hoa Tur;}
{\f3627\fdecor\fcharset238\fprq2 VPS Hue CE;}{\f3630\fdecor\fcharset161\fprq2 VPS Hue Greek;}{\f3631\fdecor\fcharset162\fprq2 VPS Hue Tur;}{\f3637\fdecor\fcharset238\fprq2 VPS Hue Hoa CE;}{\f3640\fdecor\fcharset161\fprq2 VPS Hue Hoa Greek;}
{\f3641\fdecor\fcharset162\fprq2 VPS Hue Hoa Tur;}{\f3697\fdecor\fcharset238\fprq2 VPS Kien Giang CE;}{\f3700\fdecor\fcharset161\fprq2 VPS Kien Giang Greek;}{\f3701\fdecor\fcharset162\fprq2 VPS Kien Giang Tur;}
{\f3817\fscript\fcharset238\fprq2 VPS Long Khanh CE;}{\f3820\fscript\fcharset161\fprq2 VPS Long Khanh Greek;}{\f3821\fscript\fcharset162\fprq2 VPS Long Khanh Tur;}{\f3837\fswiss\fcharset238\fprq2 VPS Long Xuyen CE;}
{\f3847\fswiss\fcharset238\fprq2 VPS Long Xuyen Hoa CE;}{\f3901\fdecor\fcharset162\fprq2 VPS Ninh Thuan Hoa Tur;}{\f3907\fscript\fcharset238\fprq2 VPS Phong Dinh CE;}{\f3910\fscript\fcharset161\fprq2 VPS Phong Dinh Greek;}
{\f3911\fscript\fcharset162\fprq2 VPS Phong Dinh Tur;}{\f3917\fscript\fcharset238\fprq2 VPS Phong Dinh Hoa CE;}{\f3920\fscript\fcharset161\fprq2 VPS Phong Dinh Hoa Greek;}{\f3921\fscript\fcharset162\fprq2 VPS Phong Dinh Hoa Tur;}
{\f3927\fdecor\fcharset238\fprq2 VPS Phu Bon Hoa CE;}{\f3930\fdecor\fcharset161\fprq2 VPS Phu Bon Hoa Greek;}{\f3931\fdecor\fcharset162\fprq2 VPS Phu Bon Hoa Tur;}{\f3967\fswiss\fcharset238\fprq2 VPS Phuoc Long Hoa CE;}
{\f3971\fswiss\fcharset162\fprq2 VPS Phuoc Long Hoa Tur;}{\f4067\fscript\fcharset238\fprq2 VPS Sa Dec CE;}{\f4070\fscript\fcharset161\fprq2 VPS Sa Dec Greek;}{\f4071\fscript\fcharset162\fprq2 VPS Sa Dec Tur;}
{\f4077\fscript\fcharset238\fprq2 VPS Sa Dec Hoa CE;}{\f4080\fscript\fcharset161\fprq2 VPS Sa Dec Hoa Greek;}{\f4081\fscript\fcharset162\fprq2 VPS Sa Dec Hoa Tur;}{\f4087\fswiss\fcharset238\fprq2 VPS Sai Gon CE;}
{\f4147\fscript\fcharset238\fprq2 VPS Tay Ninh CE;}{\f4150\fscript\fcharset161\fprq2 VPS Tay Ninh Greek;}{\f4151\fscript\fcharset162\fprq2 VPS Tay Ninh Tur;}{\f4157\fscript\fcharset238\fprq2 VPS Tay Ninh Hoa CE;}
{\f4160\fscript\fcharset161\fprq2 VPS Tay Ninh Hoa Greek;}{\f4161\fscript\fcharset162\fprq2 VPS Tay Ninh Hoa Tur;}{\f4237\froman\fcharset238\fprq2 VPS Truong Sa Light CE;}{\f4240\froman\fcharset161\fprq2 VPS Truong Sa Light Greek;}
{\f4241\froman\fcharset162\fprq2 VPS Truong Sa Light Tur;}{\f4247\froman\fcharset238\fprq2 VPS Truong Sa Light Hoa CE;}{\f4250\froman\fcharset161\fprq2 VPS Truong Sa Light Hoa Greek;}{\f4251\froman\fcharset162\fprq2 VPS Truong Sa Light Hoa Tur;}
{\f4267\fswiss\fcharset238\fprq2 VPS Tuyen Duc Hoa CE;}{\f4270\fswiss\fcharset161\fprq2 VPS Tuyen Duc Hoa Greek;}{\f4271\fswiss\fcharset162\fprq2 VPS Tuyen Duc Hoa Tur;}{\f4287\fscript\fcharset238\fprq2 VPS Tuyen Quang Hoa CE;}
{\f4290\fscript\fcharset161\fprq2 VPS Tuyen Quang Hoa Greek;}{\f4291\fscript\fcharset162\fprq2 VPS Tuyen Quang Hoa Tur;}{\f4317\fdecor\fcharset238\fprq2 VPS Vinh Long CE;}{\f4320\fdecor\fcharset161\fprq2 VPS Vinh Long Greek;}
{\f4321\fdecor\fcharset162\fprq2 VPS Vinh Long Tur;}{\f4327\fdecor\fcharset238\fprq2 VPS Vinh Long Hoa CE;}{\f4330\fdecor\fcharset161\fprq2 VPS Vinh Long Hoa Greek;}{\f4331\fdecor\fcharset162\fprq2 VPS Vinh Long Hoa Tur;}
{\f4357\froman\fcharset238\fprq2 VPS Vung Tau CE;}{\f4360\froman\fcharset161\fprq2 VPS Vung Tau Greek;}{\f4361\froman\fcharset162\fprq2 VPS Vung Tau Tur;}{\f4367\froman\fcharset238\fprq2 VPS Vung Tau Hoa CE;}
{\f4370\froman\fcharset161\fprq2 VPS Vung Tau Hoa Greek;}{\f4371\froman\fcharset162\fprq2 VPS Vung Tau Hoa Tur;}{\f4377\fdecor\fcharset238\fprq2 VPS Yen Bai Hoa CE;}{\f4380\fdecor\fcharset161\fprq2 VPS Yen Bai Hoa Greek;}
{\f4381\fdecor\fcharset162\fprq2 VPS Yen Bai Hoa Tur;}{\f4417\fdecor\fcharset238\fprq2 VPS Phuoc Thanh Hoa CE;}{\f4420\fdecor\fcharset161\fprq2 VPS Phuoc Thanh Hoa Greek;}{\f4421\fdecor\fcharset162\fprq2 VPS Phuoc Thanh Hoa Tur;}
{\f4427\fnil\fcharset238\fprq2 YorubaOK CE;}{\f4437\fnil\fcharset238\fprq2 Charis SIL CE;}{\f4438\fnil\fcharset204\fprq2 Charis SIL Cyr;}{\f4441\fnil\fcharset162\fprq2 Charis SIL Tur;}{\f4444\fnil\fcharset186\fprq2 Charis SIL Baltic;}
{\f4445\fnil\fcharset163\fprq2 Charis SIL (Vietnamese);}{\f4477\fnil\fcharset238\fprq2 Aboriginal Sans CE;}{\f4480\fnil\fcharset161\fprq2 Aboriginal Sans Greek;}{\f4481\fnil\fcharset162\fprq2 Aboriginal Sans Tur;}
{\f4484\fnil\fcharset186\fprq2 Aboriginal Sans Baltic;}{\f4485\fnil\fcharset163\fprq2 Aboriginal Sans (Vietnamese);}{\f4559\fmodern\fcharset0\fprq1 @MS Mincho Western;}{\f4557\fmodern\fcharset238\fprq1 @MS Mincho CE;}
{\f4558\fmodern\fcharset204\fprq1 @MS Mincho Cyr;}{\f4560\fmodern\fcharset161\fprq1 @MS Mincho Greek;}{\f4561\fmodern\fcharset162\fprq1 @MS Mincho Tur;}{\f4564\fmodern\fcharset186\fprq1 @MS Mincho Baltic;}
{\f4569\froman\fcharset0\fprq2 MS PMincho Western;}{\f4567\froman\fcharset238\fprq2 MS PMincho CE;}{\f4568\froman\fcharset204\fprq2 MS PMincho Cyr;}{\f4570\froman\fcharset161\fprq2 MS PMincho Greek;}{\f4571\froman\fcharset162\fprq2 MS PMincho Tur;}
{\f4574\froman\fcharset186\fprq2 MS PMincho Baltic;}{\f4579\froman\fcharset0\fprq2 @MS PMincho Western;}{\f4577\froman\fcharset238\fprq2 @MS PMincho CE;}{\f4578\froman\fcharset204\fprq2 @MS PMincho Cyr;}{\f4580\froman\fcharset161\fprq2 @MS PMincho Greek;}
{\f4581\froman\fcharset162\fprq2 @MS PMincho Tur;}{\f4584\froman\fcharset186\fprq2 @MS PMincho Baltic;}{\f4589\fmodern\fcharset0\fprq1 @MS Gothic Western;}{\f4587\fmodern\fcharset238\fprq1 @MS Gothic CE;}{\f4588\fmodern\fcharset204\fprq1 @MS Gothic Cyr;}
{\f4590\fmodern\fcharset161\fprq1 @MS Gothic Greek;}{\f4591\fmodern\fcharset162\fprq1 @MS Gothic Tur;}{\f4594\fmodern\fcharset186\fprq1 @MS Gothic Baltic;}{\f4599\fswiss\fcharset0\fprq2 MS PGothic Western;}{\f4597\fswiss\fcharset238\fprq2 MS PGothic CE;}
{\f4598\fswiss\fcharset204\fprq2 MS PGothic Cyr;}{\f4600\fswiss\fcharset161\fprq2 MS PGothic Greek;}{\f4601\fswiss\fcharset162\fprq2 MS PGothic Tur;}{\f4604\fswiss\fcharset186\fprq2 MS PGothic Baltic;}{\f4609\fswiss\fcharset0\fprq2 @MS PGothic Western;}
{\f4607\fswiss\fcharset238\fprq2 @MS PGothic CE;}{\f4608\fswiss\fcharset204\fprq2 @MS PGothic Cyr;}{\f4610\fswiss\fcharset161\fprq2 @MS PGothic Greek;}{\f4611\fswiss\fcharset162\fprq2 @MS PGothic Tur;}{\f4614\fswiss\fcharset186\fprq2 @MS PGothic Baltic;}
{\f4619\fswiss\fcharset0\fprq2 MS UI Gothic Western;}{\f4617\fswiss\fcharset238\fprq2 MS UI Gothic CE;}{\f4618\fswiss\fcharset204\fprq2 MS UI Gothic Cyr;}{\f4620\fswiss\fcharset161\fprq2 MS UI Gothic Greek;}
{\f4621\fswiss\fcharset162\fprq2 MS UI Gothic Tur;}{\f4624\fswiss\fcharset186\fprq2 MS UI Gothic Baltic;}{\f4629\fswiss\fcharset0\fprq2 @MS UI Gothic Western;}{\f4627\fswiss\fcharset238\fprq2 @MS UI Gothic CE;}
{\f4628\fswiss\fcharset204\fprq2 @MS UI Gothic Cyr;}{\f4630\fswiss\fcharset161\fprq2 @MS UI Gothic Greek;}{\f4631\fswiss\fcharset162\fprq2 @MS UI Gothic Tur;}{\f4634\fswiss\fcharset186\fprq2 @MS UI Gothic Baltic;}
{\f4639\fswiss\fcharset0\fprq2 @Gulim Western;}{\f4637\fswiss\fcharset238\fprq2 @Gulim CE;}{\f4638\fswiss\fcharset204\fprq2 @Gulim Cyr;}{\f4640\fswiss\fcharset161\fprq2 @Gulim Greek;}{\f4641\fswiss\fcharset162\fprq2 @Gulim Tur;}
{\f4644\fswiss\fcharset186\fprq2 @Gulim Baltic;}{\f4649\fmodern\fcharset0\fprq1 GulimChe Western;}{\f4647\fmodern\fcharset238\fprq1 GulimChe CE;}{\f4648\fmodern\fcharset204\fprq1 GulimChe Cyr;}{\f4650\fmodern\fcharset161\fprq1 GulimChe Greek;}
{\f4651\fmodern\fcharset162\fprq1 GulimChe Tur;}{\f4654\fmodern\fcharset186\fprq1 GulimChe Baltic;}{\f4659\fmodern\fcharset0\fprq1 @GulimChe Western;}{\f4657\fmodern\fcharset238\fprq1 @GulimChe CE;}{\f4658\fmodern\fcharset204\fprq1 @GulimChe Cyr;}
{\f4660\fmodern\fcharset161\fprq1 @GulimChe Greek;}{\f4661\fmodern\fcharset162\fprq1 @GulimChe Tur;}{\f4664\fmodern\fcharset186\fprq1 @GulimChe Baltic;}{\f4669\fswiss\fcharset0\fprq2 @Dotum Western;}{\f4667\fswiss\fcharset238\fprq2 @Dotum CE;}
{\f4668\fswiss\fcharset204\fprq2 @Dotum Cyr;}{\f4670\fswiss\fcharset161\fprq2 @Dotum Greek;}{\f4671\fswiss\fcharset162\fprq2 @Dotum Tur;}{\f4674\fswiss\fcharset186\fprq2 @Dotum Baltic;}{\f4679\fmodern\fcharset0\fprq1 DotumChe Western;}
{\f4677\fmodern\fcharset238\fprq1 DotumChe CE;}{\f4678\fmodern\fcharset204\fprq1 DotumChe Cyr;}{\f4680\fmodern\fcharset161\fprq1 DotumChe Greek;}{\f4681\fmodern\fcharset162\fprq1 DotumChe Tur;}{\f4684\fmodern\fcharset186\fprq1 DotumChe Baltic;}
{\f4689\fmodern\fcharset0\fprq1 @DotumChe Western;}{\f4687\fmodern\fcharset238\fprq1 @DotumChe CE;}{\f4688\fmodern\fcharset204\fprq1 @DotumChe Cyr;}{\f4690\fmodern\fcharset161\fprq1 @DotumChe Greek;}{\f4691\fmodern\fcharset162\fprq1 @DotumChe Tur;}
{\f4694\fmodern\fcharset186\fprq1 @DotumChe Baltic;}{\f4699\froman\fcharset0\fprq2 @Batang Western;}{\f4697\froman\fcharset238\fprq2 @Batang CE;}{\f4698\froman\fcharset204\fprq2 @Batang Cyr;}{\f4700\froman\fcharset161\fprq2 @Batang Greek;}
{\f4701\froman\fcharset162\fprq2 @Batang Tur;}{\f4704\froman\fcharset186\fprq2 @Batang Baltic;}{\f4709\fmodern\fcharset0\fprq1 BatangChe Western;}{\f4707\fmodern\fcharset238\fprq1 BatangChe CE;}{\f4708\fmodern\fcharset204\fprq1 BatangChe Cyr;}
{\f4710\fmodern\fcharset161\fprq1 BatangChe Greek;}{\f4711\fmodern\fcharset162\fprq1 BatangChe Tur;}{\f4714\fmodern\fcharset186\fprq1 BatangChe Baltic;}{\f4719\fmodern\fcharset0\fprq1 @BatangChe Western;}{\f4717\fmodern\fcharset238\fprq1 @BatangChe CE;}
{\f4718\fmodern\fcharset204\fprq1 @BatangChe Cyr;}{\f4720\fmodern\fcharset161\fprq1 @BatangChe Greek;}{\f4721\fmodern\fcharset162\fprq1 @BatangChe Tur;}{\f4724\fmodern\fcharset186\fprq1 @BatangChe Baltic;}{\f4729\froman\fcharset0\fprq2 Gungsuh Western;}
{\f4727\froman\fcharset238\fprq2 Gungsuh CE;}{\f4728\froman\fcharset204\fprq2 Gungsuh Cyr;}{\f4730\froman\fcharset161\fprq2 Gungsuh Greek;}{\f4731\froman\fcharset162\fprq2 Gungsuh Tur;}{\f4734\froman\fcharset186\fprq2 Gungsuh Baltic;}
{\f4739\froman\fcharset0\fprq2 @Gungsuh Western;}{\f4737\froman\fcharset238\fprq2 @Gungsuh CE;}{\f4738\froman\fcharset204\fprq2 @Gungsuh Cyr;}{\f4740\froman\fcharset161\fprq2 @Gungsuh Greek;}{\f4741\froman\fcharset162\fprq2 @Gungsuh Tur;}
{\f4744\froman\fcharset186\fprq2 @Gungsuh Baltic;}{\f4749\fmodern\fcharset0\fprq1 GungsuhChe Western;}{\f4747\fmodern\fcharset238\fprq1 GungsuhChe CE;}{\f4748\fmodern\fcharset204\fprq1 GungsuhChe Cyr;}{\f4750\fmodern\fcharset161\fprq1 GungsuhChe Greek;}
{\f4751\fmodern\fcharset162\fprq1 GungsuhChe Tur;}{\f4754\fmodern\fcharset186\fprq1 GungsuhChe Baltic;}{\f4759\fmodern\fcharset0\fprq1 @GungsuhChe Western;}{\f4757\fmodern\fcharset238\fprq1 @GungsuhChe CE;}
{\f4758\fmodern\fcharset204\fprq1 @GungsuhChe Cyr;}{\f4760\fmodern\fcharset161\fprq1 @GungsuhChe Greek;}{\f4761\fmodern\fcharset162\fprq1 @GungsuhChe Tur;}{\f4764\fmodern\fcharset186\fprq1 @GungsuhChe Baltic;}{\f4769\fnil\fcharset0\fprq2 @SimSun Western;}
{\f4779\fmodern\fcharset0\fprq1 NSimSun Western;}{\f4789\fmodern\fcharset0\fprq1 @NSimSun Western;}{\f4809\fmodern\fcharset0\fprq1 @MingLiU Western;}{\f4819\froman\fcharset0\fprq2 @PMingLiU Western;}{\f4860\fnil\fcharset161\fprq2 Basketcase Greek;}
{\f4870\fnil\fcharset161\fprq2 Bleed Greek;}{\f4990\fnil\fcharset161\fprq2 Halloween Greek;}{\f4997\fnil\fcharset238\fprq2 Horror CE;}{\f5000\fnil\fcharset161\fprq2 Horror Greek;}{\f5001\fnil\fcharset162\fprq2 Horror Tur;}
{\f5027\fnil\fcharset238\fprq2 PostCrypt CE;}{\f5030\fnil\fcharset161\fprq2 PostCrypt Greek;}{\f5031\fnil\fcharset162\fprq2 PostCrypt Tur;}{\f5050\fnil\fcharset161\fprq2 ROCKY Greek;}{\f5067\fswiss\fcharset238\fprq2 Shlop CE;}
{\f5070\fswiss\fcharset161\fprq2 Shlop Greek;}{\f5071\fswiss\fcharset162\fprq2 Shlop Tur;}}{\colortbl;\red0\green0\blue0;\red0\green0\blue255;\red0\green255\blue255;\red0\green255\blue0;\red255\green0\blue255;\red255\green0\blue0;\red255\green255\blue0;
\red255\green255\blue255;\red0\green0\blue128;\red0\green128\blue128;\red0\green128\blue0;\red128\green0\blue128;\red128\green0\blue0;\red128\green128\blue0;\red128\green128\blue128;\red192\green192\blue192;}{\stylesheet{
\ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \fs24\lang3081\langfe1033\cgrid\langnp3081\langfenp1033 \snext0 Normal;}{\s1\ql \li0\ri0\sb240\sa60\keepn\widctlpar\aspalpha\aspnum\faauto\outlinelevel0\adjustright\rin0\lin0\itap0 
\b\f1\fs32\lang3081\langfe1033\kerning32\cgrid\langnp3081\langfenp1033 \sbasedon0 \snext0 \styrsid12010334 heading 1;}{\s2\ql \li0\ri0\sb240\sa60\keepn\widctlpar\aspalpha\aspnum\faauto\outlinelevel1\adjustright\rin0\lin0\itap0 
\b\i\f1\fs28\lang3081\langfe1033\cgrid\langnp3081\langfenp1033 \sbasedon0 \snext0 \styrsid1604366 heading 2;}{\s3\ql \li0\ri0\sb240\sa60\keepn\widctlpar\aspalpha\aspnum\faauto\outlinelevel2\adjustright\rin0\lin0\itap0 
\b\f1\fs26\lang3081\langfe1033\cgrid\langnp3081\langfenp1033 \sbasedon0 \snext0 \styrsid6360730 heading 3;}{\*\cs10 \additive \ssemihidden Default Paragraph Font;}{\*
\ts11\tsrowd\trftsWidthB3\trpaddl108\trpaddr108\trpaddfl3\trpaddft3\trpaddfb3\trpaddfr3\trcbpat1\trcfpat1\tscellwidthfts0\tsvertalt\tsbrdrt\tsbrdrl\tsbrdrb\tsbrdrr\tsbrdrdgl\tsbrdrdgr\tsbrdrh\tsbrdrv 
\ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1024\langfe1024\cgrid\langnp1024\langfenp1024 \snext11 \ssemihidden Normal Table;}{\*\cs15 \additive \ul\cf2 \sbasedon10 \styrsid4926635 Hyperlink;}{
\s16\qc \li0\ri0\sb360\sa360\widctlpar\tqr\tx8303\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \b\caps\fs22\ul\lang3081\langfe1033\cgrid\langnp3081\langfenp1033 \sbasedon0 \snext0 \sautoupd \ssemihidden \styrsid5865126 toc 1;}{
\s17\qc \li0\ri0\widctlpar\tqr\tx8303\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \b\scaps\fs22\lang3081\langfe1033\cgrid\langnp3081\langfenp1033 \sbasedon0 \snext0 \sautoupd \ssemihidden \styrsid5865126 toc 2;}{
\s18\ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \scaps\fs22\lang3081\langfe1033\cgrid\langnp3081\langfenp1033 \sbasedon0 \snext0 \sautoupd \ssemihidden \styrsid1983755 toc 3;}{
\s19\ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \fs22\lang3081\langfe1033\cgrid\langnp3081\langfenp1033 \sbasedon0 \snext0 \sautoupd \ssemihidden \styrsid1983755 toc 4;}{
\s20\ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \fs22\lang3081\langfe1033\cgrid\langnp3081\langfenp1033 \sbasedon0 \snext0 \sautoupd \ssemihidden \styrsid1983755 toc 5;}{
\s21\ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \fs22\lang3081\langfe1033\cgrid\langnp3081\langfenp1033 \sbasedon0 \snext0 \sautoupd \ssemihidden \styrsid1983755 toc 6;}{
\s22\ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \fs22\lang3081\langfe1033\cgrid\langnp3081\langfenp1033 \sbasedon0 \snext0 \sautoupd \ssemihidden \styrsid1983755 toc 7;}{
\s23\ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \fs22\lang3081\langfe1033\cgrid\langnp3081\langfenp1033 \sbasedon0 \snext0 \sautoupd \ssemihidden \styrsid1983755 toc 8;}{
\s24\ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \fs22\lang3081\langfe1033\cgrid\langnp3081\langfenp1033 \sbasedon0 \snext0 \sautoupd \ssemihidden \styrsid1983755 toc 9;}{\s25\ql \li0\ri0\widctlpar
\tqc\tx4320\tqr\tx8640\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \fs24\lang3081\langfe1033\cgrid\langnp3081\langfenp1033 \sbasedon0 \snext25 \styrsid2049854 footer;}{\*\cs26 \additive \sbasedon10 \styrsid2049854 page number;}}{\*\listtable
{\list\listtemplateid-2095910606\listhybrid{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\leveltext\leveltemplateid67698703\'02\'00.;}{\levelnumbers\'01;}\fi-360\li720\jclisttab\tx720\lin720 }
{\listlevel\levelnfc4\levelnfcn4\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\leveltext\leveltemplateid67698713\'02\'01.;}{\levelnumbers\'01;}\fi-360\li1440\jclisttab\tx1440\lin1440 }{\listlevel\levelnfc2\levelnfcn2\leveljc2
\leveljcn2\levelfollow0\levelstartat1\levelspace360\levelindent0{\leveltext\leveltemplateid67698715\'02\'02.;}{\levelnumbers\'01;}\fi-180\li2160\jclisttab\tx2160\lin2160 }{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1
\levelspace360\levelindent0{\leveltext\leveltemplateid67698703\'02\'03.;}{\levelnumbers\'01;}\fi-360\li2880\jclisttab\tx2880\lin2880 }{\listlevel\levelnfc4\levelnfcn4\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\leveltext
\leveltemplateid67698713\'02\'04.;}{\levelnumbers\'01;}\fi-360\li3600\jclisttab\tx3600\lin3600 }{\listlevel\levelnfc2\levelnfcn2\leveljc2\leveljcn2\levelfollow0\levelstartat1\levelspace360\levelindent0{\leveltext\leveltemplateid67698715
\'02\'05.;}{\levelnumbers\'01;}\fi-180\li4320\jclisttab\tx4320\lin4320 }{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\leveltext\leveltemplateid67698703\'02\'06.;}{\levelnumbers\'01;}
\fi-360\li5040\jclisttab\tx5040\lin5040 }{\listlevel\levelnfc4\levelnfcn4\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\leveltext\leveltemplateid67698713\'02\'07.;}{\levelnumbers\'01;}\fi-360\li5760\jclisttab\tx5760\lin5760 }
{\listlevel\levelnfc2\levelnfcn2\leveljc2\leveljcn2\levelfollow0\levelstartat1\levelspace360\levelindent0{\leveltext\leveltemplateid67698715\'02\'08.;}{\levelnumbers\'01;}\fi-180\li6480\jclisttab\tx6480\lin6480 }{\listname ;}\listid289944503}
{\list\listtemplateid49730866\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\leveltext\leveltemplateid67698689\'01\u-3913 ?;}{\levelnumbers;}\f3\fbias0 \fi-360\li720
\jclisttab\tx720\lin720 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\leveltext\leveltemplateid67698691\'01o;}{\levelnumbers;}\f2\fbias0 \fi-360\li1440\jclisttab\tx1440\lin1440 }{\listlevel
\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\leveltext\leveltemplateid67698693\'01\u-3929 ?;}{\levelnumbers;}\f10\fbias0 \fi-360\li2160\jclisttab\tx2160\lin2160 }{\listlevel\levelnfc23\levelnfcn23
\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\leveltext\leveltemplateid67698689\'01\u-3913 ?;}{\levelnumbers;}\f3\fbias0 \fi-360\li2880\jclisttab\tx2880\lin2880 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0
\levelfollow0\levelstartat1\levelspace360\levelindent0{\leveltext\leveltemplateid67698691\'01o;}{\levelnumbers;}\f2\fbias0 \fi-360\li3600\jclisttab\tx3600\lin3600 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1
\levelspace360\levelindent0{\leveltext\leveltemplateid67698693\'01\u-3929 ?;}{\levelnumbers;}\f10\fbias0 \fi-360\li4320\jclisttab\tx4320\lin4320 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0
{\leveltext\leveltemplateid67698689\'01\u-3913 ?;}{\levelnumbers;}\f3\fbias0 \fi-360\li5040\jclisttab\tx5040\lin5040 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\leveltext
\leveltemplateid67698691\'01o;}{\levelnumbers;}\f2\fbias0 \fi-360\li5760\jclisttab\tx5760\lin5760 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\leveltext\leveltemplateid67698693
\'01\u-3929 ?;}{\levelnumbers;}\f10\fbias0 \fi-360\li6480\jclisttab\tx6480\lin6480 }{\listname ;}\listid1230532028}}{\*\listoverridetable{\listoverride\listid1230532028\listoverridecount0\ls1}{\listoverride\listid289944503\listoverridecount0\ls2}}{\*\revtbl {Unknown;}}
{\*\rsidtbl \rsid96524\rsid148429\rsid152544\rsid203509\rsid223426\rsid281599\rsid285219\rsid336356\rsid353053\rsid403405\rsid467261\rsid477651\rsid622247\rsid721398\rsid727225\rsid738360\rsid860613\rsid934633\rsid935787\rsid1136376\rsid1331161
\rsid1447344\rsid1527529\rsid1530045\rsid1595637\rsid1604366\rsid1730733\rsid1853914\rsid1983755\rsid2049854\rsid2061501\rsid2106830\rsid2173800\rsid2302009\rsid2360435\rsid2426436\rsid2503973\rsid2644779\rsid2773025\rsid2778173\rsid2830245\rsid2846394
\rsid3027867\rsid3102386\rsid3112173\rsid3220567\rsid3294694\rsid3363284\rsid3367089\rsid3540885\rsid3553509\rsid3636861\rsid3880321\rsid4081528\rsid4152096\rsid4156345\rsid4354912\rsid4356586\rsid4523222\rsid4797246\rsid4856871\rsid4869462\rsid4926635
\rsid4998239\rsid5122824\rsid5180709\rsid5181768\rsid5463831\rsid5526621\rsid5653980\rsid5667402\rsid5865126\rsid5965402\rsid6099543\rsid6233452\rsid6255399\rsid6360730\rsid6434367\rsid6572936\rsid6898166\rsid7026797\rsid7105692\rsid7172758\rsid7226931
\rsid7353286\rsid7365065\rsid7433640\rsid7628774\rsid7801339\rsid7885733\rsid8087607\rsid8144473\rsid8204422\rsid8261370\rsid8411714\rsid8473020\rsid8519705\rsid8599737\rsid8602720\rsid8615196\rsid8734553\rsid8801260\rsid8810871\rsid8924119\rsid8928437
\rsid8995982\rsid9053514\rsid9114211\rsid9175199\rsid9189977\rsid9205223\rsid9312423\rsid9458590\rsid9582688\rsid9845013\rsid10111954\rsid10179789\rsid10308617\rsid10427906\rsid10564066\rsid10647622\rsid10698787\rsid10758058\rsid10816170\rsid10843544
\rsid11149598\rsid11217177\rsid11274579\rsid11274612\rsid11607387\rsid11739209\rsid11822458\rsid12002879\rsid12010334\rsid12013081\rsid12134953\rsid12206336\rsid12265351\rsid12483605\rsid12650684\rsid12661911\rsid12730882\rsid12740339\rsid12745068
\rsid12803364\rsid12932360\rsid13043907\rsid13137566\rsid13173557\rsid13267684\rsid13307535\rsid13373289\rsid13395556\rsid13568773\rsid13571256\rsid13584488\rsid13590556\rsid13706231\rsid13709112\rsid14027689\rsid14042496\rsid14120939\rsid14165351
\rsid14176006\rsid14295034\rsid14371540\rsid14506655\rsid14555290\rsid14632155\rsid14822985\rsid14898071\rsid14901482\rsid14955642\rsid14963874\rsid15077622\rsid15083971\rsid15145772\rsid15235155\rsid15553161\rsid15555354\rsid15561222\rsid15628828
\rsid15629807\rsid15742361\rsid15930272\rsid15953647\rsid16189989\rsid16269137\rsid16274356\rsid16319789\rsid16391730\rsid16392086\rsid16415098\rsid16454628\rsid16470200\rsid16663892\rsid16730358}{\*\generator Microsoft Word 10.0.3416;}{\info
{\title GlovePIE GUI}{\author Kenner}{\operator Kenner}{\creatim\yr2006\mo10\dy6\hr18\min40}{\revtim\yr2006\mo12\dy5\hr20\min38}{\version4}{\edmins65}{\nofpages75}{\nofwords20791}{\nofchars118514}{\nofcharsws139027}{\vern16453}}
\paperw11907\paperh16834\margl1134\margr1134\margt1134\margb1701 \widowctrl\ftnbj\aenddoc\noxlattoyen\expshrtn\noultrlspc\dntblnsbdb\nospaceforul\hyphcaps0\formshade\horzdoc\dgmargin\dghspace120\dgvspace163\dghorigin1134\dgvorigin1134\dghshow0\dgvshow2
\jexpand\viewkind1\viewscale100\pgbrdrhead\pgbrdrfoot\splytwnine\ftnlytwnine\htmautsp\nolnhtadjtbl\useltbaln\alntblind\lytcalctblwd\lyttblrtgr\lnbrkrule\nobrkwrptbl\snaptogridincell\allowfieldendsel\ApplyBrkRules\wrppunct\asianbrkrule\rsidroot5965402 
\fet0\sectd \linex0\footery964\colsx708\endnhere\sectlinegrid326\sectdefaultcl\sectrsid5865126\sftnbj {\footer \pard\plain \s25\ql \li0\ri0\widctlpar
\tqc\tx4320\tqr\tx8640\pvpara\phmrg\posxr\posy0\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid2049854 \fs24\lang3081\langfe1033\cgrid\langnp3081\langfenp1033 {\field{\*\fldinst {\cs26\insrsid223426 PAGE  }}{\fldrslt {
\cs26\lang1024\langfe1024\noproof\insrsid12661911 63}}}{\cs26\insrsid223426 
\par }\pard \s25\ql \li0\ri360\widctlpar\tqc\tx4320\tqr\tx8640\aspalpha\aspnum\faauto\adjustright\rin360\lin0\itap0\pararsid2049854 {\insrsid223426 
\par }}{\*\pnseclvl1\pnucrm\pnstart1\pnindent720\pnhang {\pntxta .}}{\*\pnseclvl2\pnucltr\pnstart1\pnindent720\pnhang {\pntxta .}}{\*\pnseclvl3\pndec\pnstart1\pnindent720\pnhang {\pntxta .}}{\*\pnseclvl4\pnlcltr\pnstart1\pnindent720\pnhang {\pntxta )}}
{\*\pnseclvl5\pndec\pnstart1\pnindent720\pnhang {\pntxtb (}{\pntxta )}}{\*\pnseclvl6\pnlcltr\pnstart1\pnindent720\pnhang {\pntxtb (}{\pntxta )}}{\*\pnseclvl7\pnlcrm\pnstart1\pnindent720\pnhang {\pntxtb (}{\pntxta )}}{\*\pnseclvl8
\pnlcltr\pnstart1\pnindent720\pnhang {\pntxtb (}{\pntxta )}}{\*\pnseclvl9\pnlcrm\pnstart1\pnindent720\pnhang {\pntxtb (}{\pntxta )}}\pard\plain \qc \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid2049854 
\fs24\lang3081\langfe1033\cgrid\langnp3081\langfenp1033 {\f1\fs32\insrsid2049854\charrsid2049854 GlovePIE }{\f1\fs32\insrsid223426 0.23}{\f1\fs32\insrsid2049854  }{\f1\fs32\insrsid2049854\charrsid2049854 Documentation}{\f1\fs32\insrsid2049854 
\par }\pard \qc \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid2049854 {\f1\fs32\insrsid16470200 
\par ! UNDER CONSTRUCTION !
\par }\pard \qc \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid2049854 {\f1\fs32\insrsid2049854\charrsid2049854 
\par }\pard\plain \s16\qc \li0\ri0\sb360\sa360\widctlpar\tqr\tx8303\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \b\caps\fs22\ul\lang3081\langfe1033\cgrid\langnp3081\langfenp1033 {\field\fldedit{\*\fldinst {\insrsid1983755  TOC \\o "1-2" \\h \\z \\u }
}{\fldrslt {\field\fldedit{\*\fldinst {\cs15\cf2\lang1024\langfe1024\noproof\insrsid16470200\charrsid16269137  }{\lang1024\langfe1024\noproof\insrsid16470200 HYPERLINK \\l "_Toc152895947"}{
\cs15\cf2\lang1024\langfe1024\noproof\insrsid16470200\charrsid16269137  }{\cf2\lang1024\langfe1024\noproof\insrsid8473020\charrsid16269137 {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f006300310035003200380039003500390034003700000000}}}{\fldrslt {\cs15\cf2\lang1024\langfe1024\noproof\insrsid16470200\charrsid16269137 GlovePIE Scripts}{
\lang1024\langfe1024\noproof\webhidden\insrsid16470200 \tab }{\field{\*\fldinst {\lang1024\langfe1024\noproof\webhidden\insrsid16470200  PAGEREF _Toc152895947 \\h }{\lang1024\langfe1024\noproof\insrsid8473020 {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f006300310035003200380039003500390034003700000000}}}{\fldrslt {\lang1024\langfe1024\noproof\webhidden\insrsid16470200 4}}}}}{
\b0\caps0\fs24\ulnone\lang1024\langfe1024\dbch\af11\noproof\langnp1033\langfenp1041\insrsid16470200 
\par }\pard\plain \s17\qc \li0\ri0\widctlpar\tqr\tx8303\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \b\scaps\fs22\lang3081\langfe1033\cgrid\langnp3081\langfenp1033 {\field\fldedit{\*\fldinst {
\cs15\ul\cf2\lang1024\langfe1024\noproof\insrsid16470200\charrsid16269137  }{\lang1024\langfe1024\noproof\insrsid16470200 HYPERLINK \\l "_Toc152895948"}{\cs15\ul\cf2\lang1024\langfe1024\noproof\insrsid16470200\charrsid16269137  }{
\ul\cf2\lang1024\langfe1024\noproof\insrsid8473020\charrsid16269137 {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f006300310035003200380039003500390034003800000000}}}{\fldrslt {
\cs15\ul\cf2\lang1024\langfe1024\noproof\insrsid16470200\charrsid16269137 Commands and other Statements}{\lang1024\langfe1024\noproof\webhidden\insrsid16470200 \tab }{\field{\*\fldinst {\lang1024\langfe1024\noproof\webhidden\insrsid16470200 
 PAGEREF _Toc152895948 \\h }{\lang1024\langfe1024\noproof\insrsid8473020 {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f006300310035003200380039003500390034003800000000}}}{\fldrslt {
\lang1024\langfe1024\noproof\webhidden\insrsid16470200 4}}}}}{\b0\scaps0\fs24\lang1024\langfe1024\dbch\af11\noproof\langnp1033\langfenp1041\insrsid16470200 
\par }{\field\fldedit{\*\fldinst {\cs15\ul\cf2\lang1024\langfe1024\noproof\insrsid16470200\charrsid16269137  }{\lang1024\langfe1024\noproof\insrsid16470200 HYPERLINK \\l "_Toc152895949"}{
\cs15\ul\cf2\lang1024\langfe1024\noproof\insrsid16470200\charrsid16269137  }{\ul\cf2\lang1024\langfe1024\noproof\insrsid8473020\charrsid16269137 {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f006300310035003200380039003500390034003900000000}}}{\fldrslt {\cs15\ul\cf2\lang1024\langfe1024\noproof\insrsid16470200\charrsid16269137 Functions}{
\lang1024\langfe1024\noproof\webhidden\insrsid16470200 \tab }{\field{\*\fldinst {\lang1024\langfe1024\noproof\webhidden\insrsid16470200  PAGEREF _Toc152895949 \\h }{\lang1024\langfe1024\noproof\insrsid8473020 {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f006300310035003200380039003500390034003900000000}}}{\fldrslt {\lang1024\langfe1024\noproof\webhidden\insrsid16470200 8}}}}}{
\b0\scaps0\fs24\lang1024\langfe1024\dbch\af11\noproof\langnp1033\langfenp1041\insrsid16470200 
\par }{\field\fldedit{\*\fldinst {\cs15\ul\cf2\lang1024\langfe1024\noproof\insrsid16470200\charrsid16269137  }{\lang1024\langfe1024\noproof\insrsid16470200 HYPERLINK \\l "_Toc152895950"}{
\cs15\ul\cf2\lang1024\langfe1024\noproof\insrsid16470200\charrsid16269137  }{\ul\cf2\lang1024\langfe1024\noproof\insrsid8473020\charrsid16269137 {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f006300310035003200380039003500390035003000000001}}}{\fldrslt {\cs15\ul\cf2\lang1024\langfe1024\noproof\insrsid16470200\charrsid16269137 Operators}{
\lang1024\langfe1024\noproof\webhidden\insrsid16470200 \tab }{\field{\*\fldinst {\lang1024\langfe1024\noproof\webhidden\insrsid16470200  PAGEREF _Toc152895950 \\h }{\lang1024\langfe1024\noproof\insrsid8473020 {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f006300310035003200380039003500390035003000000000}}}{\fldrslt {\lang1024\langfe1024\noproof\webhidden\insrsid16470200 10}}}}}{
\b0\scaps0\fs24\lang1024\langfe1024\dbch\af11\noproof\langnp1033\langfenp1041\insrsid16470200 
\par }\pard\plain \s16\qc \li0\ri0\sb360\sa360\widctlpar\tqr\tx8303\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \b\caps\fs22\ul\lang3081\langfe1033\cgrid\langnp3081\langfenp1033 {\field\fldedit{\*\fldinst {
\cs15\cf2\lang1024\langfe1024\noproof\insrsid16470200\charrsid16269137  }{\lang1024\langfe1024\noproof\insrsid16470200 HYPERLINK \\l "_Toc152895951"}{\cs15\cf2\lang1024\langfe1024\noproof\insrsid16470200\charrsid16269137  }{
\cf2\lang1024\langfe1024\noproof\insrsid8473020\charrsid16269137 {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f006300310035003200380039003500390035003100000000}}}{\fldrslt {
\cs15\cf2\lang1024\langfe1024\noproof\insrsid16470200\charrsid16269137 GlovePIE GUI}{\lang1024\langfe1024\noproof\webhidden\insrsid16470200 \tab }{\field{\*\fldinst {\lang1024\langfe1024\noproof\webhidden\insrsid16470200  PAGEREF _Toc152895951 \\h }{
\lang1024\langfe1024\noproof\insrsid8473020 {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f006300310035003200380039003500390035003100000000}}}{\fldrslt {\lang1024\langfe1024\noproof\webhidden\insrsid16470200 15}}}}}{
\b0\caps0\fs24\ulnone\lang1024\langfe1024\dbch\af11\noproof\langnp1033\langfenp1041\insrsid16470200 
\par }\pard\plain \s17\qc \li0\ri0\widctlpar\tqr\tx8303\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \b\scaps\fs22\lang3081\langfe1033\cgrid\langnp3081\langfenp1033 {\field\fldedit{\*\fldinst {
\cs15\ul\cf2\lang1024\langfe1024\noproof\insrsid16470200\charrsid16269137  }{\lang1024\langfe1024\noproof\insrsid16470200 HYPERLINK \\l "_Toc152895952"}{\cs15\ul\cf2\lang1024\langfe1024\noproof\insrsid16470200\charrsid16269137  }{
\ul\cf2\lang1024\langfe1024\noproof\insrsid8473020\charrsid16269137 {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f006300310035003200380039003500390035003200000000}}}{\fldrslt {
\cs15\ul\cf2\lang1024\langfe1024\noproof\insrsid16470200\charrsid16269137 Overview}{\lang1024\langfe1024\noproof\webhidden\insrsid16470200 \tab }{\field{\*\fldinst {\lang1024\langfe1024\noproof\webhidden\insrsid16470200  PAGEREF _Toc152895952 \\h }{
\lang1024\langfe1024\noproof\insrsid8473020 {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f006300310035003200380039003500390035003200000000}}}{\fldrslt {\lang1024\langfe1024\noproof\webhidden\insrsid16470200 15}}}}}{
\b0\scaps0\fs24\lang1024\langfe1024\dbch\af11\noproof\langnp1033\langfenp1041\insrsid16470200 
\par }{\field\fldedit{\*\fldinst {\cs15\ul\cf2\lang1024\langfe1024\noproof\insrsid16470200\charrsid16269137  }{\lang1024\langfe1024\noproof\insrsid16470200 HYPERLINK \\l "_Toc152895953"}{
\cs15\ul\cf2\lang1024\langfe1024\noproof\insrsid16470200\charrsid16269137  }{\ul\cf2\lang1024\langfe1024\noproof\insrsid8473020\charrsid16269137 {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f006300310035003200380039003500390035003300000000}}}{\fldrslt {\cs15\ul\cf2\lang1024\langfe1024\noproof\insrsid16470200\charrsid16269137 Output Device}{
\lang1024\langfe1024\noproof\webhidden\insrsid16470200 \tab }{\field{\*\fldinst {\lang1024\langfe1024\noproof\webhidden\insrsid16470200  PAGEREF _Toc152895953 \\h }{\lang1024\langfe1024\noproof\insrsid8473020 {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f006300310035003200380039003500390035003300000000}}}{\fldrslt {\lang1024\langfe1024\noproof\webhidden\insrsid16470200 15}}}}}{
\b0\scaps0\fs24\lang1024\langfe1024\dbch\af11\noproof\langnp1033\langfenp1041\insrsid16470200 
\par }{\field\fldedit{\*\fldinst {\cs15\ul\cf2\lang1024\langfe1024\noproof\insrsid16470200\charrsid16269137  }{\lang1024\langfe1024\noproof\insrsid16470200 HYPERLINK \\l "_Toc152895954"}{
\cs15\ul\cf2\lang1024\langfe1024\noproof\insrsid16470200\charrsid16269137  }{\ul\cf2\lang1024\langfe1024\noproof\insrsid8473020\charrsid16269137 {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f006300310035003200380039003500390035003400000000}}}{\fldrslt {\cs15\ul\cf2\lang1024\langfe1024\noproof\insrsid16470200\charrsid16269137 Channel Box}{
\lang1024\langfe1024\noproof\webhidden\insrsid16470200 \tab }{\field{\*\fldinst {\lang1024\langfe1024\noproof\webhidden\insrsid16470200  PAGEREF _Toc152895954 \\h }{\lang1024\langfe1024\noproof\insrsid8473020 {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f006300310035003200380039003500390035003400000000}}}{\fldrslt {\lang1024\langfe1024\noproof\webhidden\insrsid16470200 16}}}}}{
\b0\scaps0\fs24\lang1024\langfe1024\dbch\af11\noproof\langnp1033\langfenp1041\insrsid16470200 
\par }{\field\fldedit{\*\fldinst {\cs15\ul\cf2\lang1024\langfe1024\noproof\insrsid16470200\charrsid16269137  }{\lang1024\langfe1024\noproof\insrsid16470200 HYPERLINK \\l "_Toc152895955"}{
\cs15\ul\cf2\lang1024\langfe1024\noproof\insrsid16470200\charrsid16269137  }{\ul\cf2\lang1024\langfe1024\noproof\insrsid8473020\charrsid16269137 {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f006300310035003200380039003500390035003500000000}}}{\fldrslt {\cs15\ul\cf2\lang1024\langfe1024\noproof\insrsid16470200\charrsid16269137 Category Box}{
\lang1024\langfe1024\noproof\webhidden\insrsid16470200 \tab }{\field{\*\fldinst {\lang1024\langfe1024\noproof\webhidden\insrsid16470200  PAGEREF _Toc152895955 \\h }{\lang1024\langfe1024\noproof\insrsid8473020 {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f006300310035003200380039003500390035003500000000}}}{\fldrslt {\lang1024\langfe1024\noproof\webhidden\insrsid16470200 16}}}}}{
\b0\scaps0\fs24\lang1024\langfe1024\dbch\af11\noproof\langnp1033\langfenp1041\insrsid16470200 
\par }{\field\fldedit{\*\fldinst {\cs15\ul\cf2\lang1024\langfe1024\noproof\insrsid16470200\charrsid16269137  }{\lang1024\langfe1024\noproof\insrsid16470200 HYPERLINK \\l "_Toc152895956"}{
\cs15\ul\cf2\lang1024\langfe1024\noproof\insrsid16470200\charrsid16269137  }{\ul\cf2\lang1024\langfe1024\noproof\insrsid8473020\charrsid16269137 {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f006300310035003200380039003500390035003600000000}}}{\fldrslt {\cs15\ul\cf2\lang1024\langfe1024\noproof\insrsid16470200\charrsid16269137 The Item List}{
\lang1024\langfe1024\noproof\webhidden\insrsid16470200 \tab }{\field{\*\fldinst {\lang1024\langfe1024\noproof\webhidden\insrsid16470200  PAGEREF _Toc152895956 \\h }{\lang1024\langfe1024\noproof\insrsid8473020 {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f006300310035003200380039003500390035003600000000}}}{\fldrslt {\lang1024\langfe1024\noproof\webhidden\insrsid16470200 18}}}}}{
\b0\scaps0\fs24\lang1024\langfe1024\dbch\af11\noproof\langnp1033\langfenp1041\insrsid16470200 
\par }{\field\fldedit{\*\fldinst {\cs15\ul\cf2\lang1024\langfe1024\noproof\insrsid16470200\charrsid16269137  }{\lang1024\langfe1024\noproof\insrsid16470200 HYPERLINK \\l "_Toc152895957"}{
\cs15\ul\cf2\lang1024\langfe1024\noproof\insrsid16470200\charrsid16269137  }{\ul\cf2\lang1024\langfe1024\noproof\insrsid8473020\charrsid16269137 {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f006300310035003200380039003500390035003700000000}}}{\fldrslt {\cs15\ul\cf2\lang1024\langfe1024\noproof\insrsid16470200\charrsid16269137 The Format Box}{
\lang1024\langfe1024\noproof\webhidden\insrsid16470200 \tab }{\field{\*\fldinst {\lang1024\langfe1024\noproof\webhidden\insrsid16470200  PAGEREF _Toc152895957 \\h }{\lang1024\langfe1024\noproof\insrsid8473020 {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f006300310035003200380039003500390035003700000000}}}{\fldrslt {\lang1024\langfe1024\noproof\webhidden\insrsid16470200 18}}}}}{
\b0\scaps0\fs24\lang1024\langfe1024\dbch\af11\noproof\langnp1033\langfenp1041\insrsid16470200 
\par }{\field\fldedit{\*\fldinst {\cs15\ul\cf2\lang1024\langfe1024\noproof\insrsid16470200\charrsid16269137  }{\lang1024\langfe1024\noproof\insrsid16470200 HYPERLINK \\l "_Toc152895958"}{
\cs15\ul\cf2\lang1024\langfe1024\noproof\insrsid16470200\charrsid16269137  }{\ul\cf2\lang1024\langfe1024\noproof\insrsid8473020\charrsid16269137 {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f006300310035003200380039003500390035003800000000}}}{\fldrslt {\cs15\ul\cf2\lang1024\langfe1024\noproof\insrsid16470200\charrsid16269137 Limit Output To Range}{
\lang1024\langfe1024\noproof\webhidden\insrsid16470200 \tab }{\field{\*\fldinst {\lang1024\langfe1024\noproof\webhidden\insrsid16470200  PAGEREF _Toc152895958 \\h }{\lang1024\langfe1024\noproof\insrsid8473020 {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f006300310035003200380039003500390035003800000000}}}{\fldrslt {\lang1024\langfe1024\noproof\webhidden\insrsid16470200 19}}}}}{
\b0\scaps0\fs24\lang1024\langfe1024\dbch\af11\noproof\langnp1033\langfenp1041\insrsid16470200 
\par }{\field\fldedit{\*\fldinst {\cs15\ul\cf2\lang1024\langfe1024\noproof\insrsid16470200\charrsid16269137  }{\lang1024\langfe1024\noproof\insrsid16470200 HYPERLINK \\l "_Toc152895959"}{
\cs15\ul\cf2\lang1024\langfe1024\noproof\insrsid16470200\charrsid16269137  }{\ul\cf2\lang1024\langfe1024\noproof\insrsid8473020\charrsid16269137 {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f006300310035003200380039003500390035003900000059}}}{\fldrslt {\cs15\ul\cf2\lang1024\langfe1024\noproof\insrsid16470200\charrsid16269137 Input Source}{
\lang1024\langfe1024\noproof\webhidden\insrsid16470200 \tab }{\field{\*\fldinst {\lang1024\langfe1024\noproof\webhidden\insrsid16470200  PAGEREF _Toc152895959 \\h }{\lang1024\langfe1024\noproof\insrsid8473020 {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f006300310035003200380039003500390035003900000001}}}{\fldrslt {\lang1024\langfe1024\noproof\webhidden\insrsid16470200 19}}}}}{
\b0\scaps0\fs24\lang1024\langfe1024\dbch\af11\noproof\langnp1033\langfenp1041\insrsid16470200 
\par }{\field\fldedit{\*\fldinst {\cs15\ul\cf2\lang1024\langfe1024\noproof\insrsid16470200\charrsid16269137  }{\lang1024\langfe1024\noproof\insrsid16470200 HYPERLINK \\l "_Toc152895960"}{
\cs15\ul\cf2\lang1024\langfe1024\noproof\insrsid16470200\charrsid16269137  }{\ul\cf2\lang1024\langfe1024\noproof\insrsid8473020\charrsid16269137 {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f00630031003500320038003900350039003600300000006c}}}{\fldrslt {\cs15\ul\cf2\lang1024\langfe1024\noproof\insrsid16470200\charrsid16269137 More\'85 Button}{
\lang1024\langfe1024\noproof\webhidden\insrsid16470200 \tab }{\field{\*\fldinst {\lang1024\langfe1024\noproof\webhidden\insrsid16470200  PAGEREF _Toc152895960 \\h }{\lang1024\langfe1024\noproof\insrsid8473020 {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f006300310035003200380039003500390036003000000000}}}{\fldrslt {\lang1024\langfe1024\noproof\webhidden\insrsid16470200 20}}}}}{
\b0\scaps0\fs24\lang1024\langfe1024\dbch\af11\noproof\langnp1033\langfenp1041\insrsid16470200 
\par }{\field\fldedit{\*\fldinst {\cs15\ul\cf2\lang1024\langfe1024\noproof\insrsid16470200\charrsid16269137  }{\lang1024\langfe1024\noproof\insrsid16470200 HYPERLINK \\l "_Toc152895961"}{
\cs15\ul\cf2\lang1024\langfe1024\noproof\insrsid16470200\charrsid16269137  }{\ul\cf2\lang1024\langfe1024\noproof\insrsid8473020\charrsid16269137 {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f006300310035003200380039003500390036003100000000}}}{\fldrslt {\cs15\ul\cf2\lang1024\langfe1024\noproof\insrsid16470200\charrsid16269137 Apply Button}{
\lang1024\langfe1024\noproof\webhidden\insrsid16470200 \tab }{\field{\*\fldinst {\lang1024\langfe1024\noproof\webhidden\insrsid16470200  PAGEREF _Toc152895961 \\h }{\lang1024\langfe1024\noproof\insrsid8473020 {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f006300310035003200380039003500390036003100000000}}}{\fldrslt {\lang1024\langfe1024\noproof\webhidden\insrsid16470200 22}}}}}{
\b0\scaps0\fs24\lang1024\langfe1024\dbch\af11\noproof\langnp1033\langfenp1041\insrsid16470200 
\par }{\field\fldedit{\*\fldinst {\cs15\ul\cf2\lang1024\langfe1024\noproof\insrsid16470200\charrsid16269137  }{\lang1024\langfe1024\noproof\insrsid16470200 HYPERLINK \\l "_Toc152895962"}{
\cs15\ul\cf2\lang1024\langfe1024\noproof\insrsid16470200\charrsid16269137  }{\ul\cf2\lang1024\langfe1024\noproof\insrsid8473020\charrsid16269137 {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f006300310035003200380039003500390036003200000000}}}{\fldrslt {\cs15\ul\cf2\lang1024\langfe1024\noproof\insrsid16470200\charrsid16269137 Delete Button}{
\lang1024\langfe1024\noproof\webhidden\insrsid16470200 \tab }{\field{\*\fldinst {\lang1024\langfe1024\noproof\webhidden\insrsid16470200  PAGEREF _Toc152895962 \\h }{\lang1024\langfe1024\noproof\insrsid8473020 {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f006300310035003200380039003500390036003200000000}}}{\fldrslt {\lang1024\langfe1024\noproof\webhidden\insrsid16470200 22}}}}}{
\b0\scaps0\fs24\lang1024\langfe1024\dbch\af11\noproof\langnp1033\langfenp1041\insrsid16470200 
\par }{\field\fldedit{\*\fldinst {\cs15\ul\cf2\lang1024\langfe1024\noproof\insrsid16470200\charrsid16269137  }{\lang1024\langfe1024\noproof\insrsid16470200 HYPERLINK \\l "_Toc152895963"}{
\cs15\ul\cf2\lang1024\langfe1024\noproof\insrsid16470200\charrsid16269137  }{\ul\cf2\lang1024\langfe1024\noproof\insrsid8473020\charrsid16269137 {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f006300310035003200380039003500390036003300000000}}}{\fldrslt {\cs15\ul\cf2\lang1024\langfe1024\noproof\insrsid16470200\charrsid16269137 How to use the GUI with other features}{
\lang1024\langfe1024\noproof\webhidden\insrsid16470200 \tab }{\field{\*\fldinst {\lang1024\langfe1024\noproof\webhidden\insrsid16470200  PAGEREF _Toc152895963 \\h }{\lang1024\langfe1024\noproof\insrsid8473020 {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f006300310035003200380039003500390036003300000000}}}{\fldrslt {\lang1024\langfe1024\noproof\webhidden\insrsid16470200 22}}}}}{
\b0\scaps0\fs24\lang1024\langfe1024\dbch\af11\noproof\langnp1033\langfenp1041\insrsid16470200 
\par }\pard\plain \s16\qc \li0\ri0\sb360\sa360\widctlpar\tqr\tx8303\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \b\caps\fs22\ul\lang3081\langfe1033\cgrid\langnp3081\langfenp1033 {\field\fldedit{\*\fldinst {
\cs15\cf2\lang1024\langfe1024\noproof\insrsid16470200\charrsid16269137  }{\lang1024\langfe1024\noproof\insrsid16470200 HYPERLINK \\l "_Toc152895964"}{\cs15\cf2\lang1024\langfe1024\noproof\insrsid16470200\charrsid16269137  }{
\cf2\lang1024\langfe1024\noproof\insrsid8473020\charrsid16269137 {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f006300310035003200380039003500390036003400000000}}}{\fldrslt {
\cs15\cf2\lang1024\langfe1024\noproof\insrsid16470200\charrsid16269137 GlovePIE OSC (Open Sound Control)}{\lang1024\langfe1024\noproof\webhidden\insrsid16470200 \tab }{\field{\*\fldinst {\lang1024\langfe1024\noproof\webhidden\insrsid16470200 
 PAGEREF _Toc152895964 \\h }{\lang1024\langfe1024\noproof\insrsid8473020 {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f006300310035003200380039003500390036003400000000}}}{\fldrslt {
\lang1024\langfe1024\noproof\webhidden\insrsid16470200 23}}}}}{\b0\caps0\fs24\ulnone\lang1024\langfe1024\dbch\af11\noproof\langnp1033\langfenp1041\insrsid16470200 
\par }\pard\plain \s17\qc \li0\ri0\widctlpar\tqr\tx8303\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \b\scaps\fs22\lang3081\langfe1033\cgrid\langnp3081\langfenp1033 {\field\fldedit{\*\fldinst {
\cs15\ul\cf2\lang1024\langfe1024\noproof\insrsid16470200\charrsid16269137  }{\lang1024\langfe1024\noproof\insrsid16470200 HYPERLINK \\l "_Toc152895965"}{\cs15\ul\cf2\lang1024\langfe1024\noproof\insrsid16470200\charrsid16269137  }{
\ul\cf2\lang1024\langfe1024\noproof\insrsid8473020\charrsid16269137 {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f006300310035003200380039003500390036003500000000}}}{\fldrslt {
\cs15\ul\cf2\lang1024\langfe1024\noproof\insrsid16470200\charrsid16269137 Using the SendOsc and BroadcastOsc functions}{\lang1024\langfe1024\noproof\webhidden\insrsid16470200 \tab }{\field{\*\fldinst {
\lang1024\langfe1024\noproof\webhidden\insrsid16470200  PAGEREF _Toc152895965 \\h }{\lang1024\langfe1024\noproof\insrsid8473020 {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f006300310035003200380039003500390036003500000000}}}{\fldrslt {\lang1024\langfe1024\noproof\webhidden\insrsid16470200 23}}}}}{
\b0\scaps0\fs24\lang1024\langfe1024\dbch\af11\noproof\langnp1033\langfenp1041\insrsid16470200 
\par }{\field\fldedit{\*\fldinst {\cs15\ul\cf2\lang1024\langfe1024\noproof\insrsid16470200\charrsid16269137  }{\lang1024\langfe1024\noproof\insrsid16470200 HYPERLINK \\l "_Toc152895966"}{
\cs15\ul\cf2\lang1024\langfe1024\noproof\insrsid16470200\charrsid16269137  }{\ul\cf2\lang1024\langfe1024\noproof\insrsid8473020\charrsid16269137 {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003100350032003800390035003900360036000000ff}}}{\fldrslt {\cs15\ul\cf2\lang1024\langfe1024\noproof\insrsid16470200\charrsid16269137 Using the OSC objects}{
\lang1024\langfe1024\noproof\webhidden\insrsid16470200 \tab }{\field{\*\fldinst {\lang1024\langfe1024\noproof\webhidden\insrsid16470200  PAGEREF _Toc152895966 \\h }{\lang1024\langfe1024\noproof\insrsid8473020 {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f006300310035003200380039003500390036003600000009}}}{\fldrslt {\lang1024\langfe1024\noproof\webhidden\insrsid16470200 23}}}}}{
\b0\scaps0\fs24\lang1024\langfe1024\dbch\af11\noproof\langnp1033\langfenp1041\insrsid16470200 
\par }{\field\fldedit{\*\fldinst {\cs15\ul\cf2\lang1024\langfe1024\noproof\insrsid16470200\charrsid16269137  }{\lang1024\langfe1024\noproof\insrsid16470200 HYPERLINK \\l "_Toc152895967"}{
\cs15\ul\cf2\lang1024\langfe1024\noproof\insrsid16470200\charrsid16269137  }{\ul\cf2\lang1024\langfe1024\noproof\insrsid8473020\charrsid16269137 {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f006300310035003200380039003500390036003700000000}}}{\fldrslt {\cs15\ul\cf2\lang1024\langfe1024\noproof\insrsid16470200\charrsid16269137 Receiving OSC Messages}{
\lang1024\langfe1024\noproof\webhidden\insrsid16470200 \tab }{\field{\*\fldinst {\lang1024\langfe1024\noproof\webhidden\insrsid16470200  PAGEREF _Toc152895967 \\h }{\lang1024\langfe1024\noproof\insrsid8473020 {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f006300310035003200380039003500390036003700000000}}}{\fldrslt {\lang1024\langfe1024\noproof\webhidden\insrsid16470200 25}}}}}{
\b0\scaps0\fs24\lang1024\langfe1024\dbch\af11\noproof\langnp1033\langfenp1041\insrsid16470200 
\par }\pard\plain \s16\qc \li0\ri0\sb360\sa360\widctlpar\tqr\tx8303\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \b\caps\fs22\ul\lang3081\langfe1033\cgrid\langnp3081\langfenp1033 {\field\fldedit{\*\fldinst {
\cs15\cf2\lang1024\langfe1024\noproof\insrsid16470200\charrsid16269137  }{\lang1024\langfe1024\noproof\insrsid16470200 HYPERLINK \\l "_Toc152895968"}{\cs15\cf2\lang1024\langfe1024\noproof\insrsid16470200\charrsid16269137  }{
\cf2\lang1024\langfe1024\noproof\insrsid8473020\charrsid16269137 {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f006300310035003200380039003500390036003800000000}}}{\fldrslt {
\cs15\cf2\lang1024\langfe1024\noproof\insrsid16470200\charrsid16269137 Mouse}{\lang1024\langfe1024\noproof\webhidden\insrsid16470200 \tab }{\field{\*\fldinst {\lang1024\langfe1024\noproof\webhidden\insrsid16470200  PAGEREF _Toc152895968 \\h }{
\lang1024\langfe1024\noproof\insrsid8473020 {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f006300310035003200380039003500390036003800000000}}}{\fldrslt {\lang1024\langfe1024\noproof\webhidden\insrsid16470200 26}}}}}{
\b0\caps0\fs24\ulnone\lang1024\langfe1024\dbch\af11\noproof\langnp1033\langfenp1041\insrsid16470200 
\par }\pard\plain \s17\qc \li0\ri0\widctlpar\tqr\tx8303\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \b\scaps\fs22\lang3081\langfe1033\cgrid\langnp3081\langfenp1033 {\field\fldedit{\*\fldinst {
\cs15\ul\cf2\lang1024\langfe1024\noproof\insrsid16470200\charrsid16269137  }{\lang1024\langfe1024\noproof\insrsid16470200 HYPERLINK \\l "_Toc152895969"}{\cs15\ul\cf2\lang1024\langfe1024\noproof\insrsid16470200\charrsid16269137  }{
\ul\cf2\lang1024\langfe1024\noproof\insrsid8473020\charrsid16269137 {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f006300310035003200380039003500390036003900000000}}}{\fldrslt {
\cs15\ul\cf2\lang1024\langfe1024\noproof\insrsid16470200\charrsid16269137 Mouse.DirectInputX and Mouse.DirectInputY}{\lang1024\langfe1024\noproof\webhidden\insrsid16470200 \tab }{\field{\*\fldinst {\lang1024\langfe1024\noproof\webhidden\insrsid16470200 
 PAGEREF _Toc152895969 \\h }{\lang1024\langfe1024\noproof\insrsid8473020 {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f006300310035003200380039003500390036003900000000}}}{\fldrslt {
\lang1024\langfe1024\noproof\webhidden\insrsid16470200 26}}}}}{\b0\scaps0\fs24\lang1024\langfe1024\dbch\af11\noproof\langnp1033\langfenp1041\insrsid16470200 
\par }{\field\fldedit{\*\fldinst {\cs15\ul\cf2\lang1024\langfe1024\noproof\insrsid16470200\charrsid16269137  }{\lang1024\langfe1024\noproof\insrsid16470200 HYPERLINK \\l "_Toc152895970"}{
\cs15\ul\cf2\lang1024\langfe1024\noproof\insrsid16470200\charrsid16269137  }{\ul\cf2\lang1024\langfe1024\noproof\insrsid8473020\charrsid16269137 {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f006300310035003200380039003500390037003000000000}}}{\fldrslt {\cs15\ul\cf2\lang1024\langfe1024\noproof\insrsid16470200\charrsid16269137 Mouse.DirectInput2D}{
\lang1024\langfe1024\noproof\webhidden\insrsid16470200 \tab }{\field{\*\fldinst {\lang1024\langfe1024\noproof\webhidden\insrsid16470200  PAGEREF _Toc152895970 \\h }{\lang1024\langfe1024\noproof\insrsid8473020 {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f006300310035003200380039003500390037003000000000}}}{\fldrslt {\lang1024\langfe1024\noproof\webhidden\insrsid16470200 27}}}}}{
\b0\scaps0\fs24\lang1024\langfe1024\dbch\af11\noproof\langnp1033\langfenp1041\insrsid16470200 
\par }{\field\fldedit{\*\fldinst {\cs15\ul\cf2\lang1024\langfe1024\noproof\insrsid16470200\charrsid16269137  }{\lang1024\langfe1024\noproof\insrsid16470200 HYPERLINK \\l "_Toc152895971"}{
\cs15\ul\cf2\lang1024\langfe1024\noproof\insrsid16470200\charrsid16269137  }{\ul\cf2\lang1024\langfe1024\noproof\insrsid8473020\charrsid16269137 {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f006300310035003200380039003500390037003100000000}}}{\fldrslt {\cs15\ul\cf2\lang1024\langfe1024\noproof\insrsid16470200\charrsid16269137 The Scroll Wheel}{
\lang1024\langfe1024\noproof\webhidden\insrsid16470200 \tab }{\field{\*\fldinst {\lang1024\langfe1024\noproof\webhidden\insrsid16470200  PAGEREF _Toc152895971 \\h }{\lang1024\langfe1024\noproof\insrsid8473020 {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f006300310035003200380039003500390037003100000000}}}{\fldrslt {\lang1024\langfe1024\noproof\webhidden\insrsid16470200 28}}}}}{
\b0\scaps0\fs24\lang1024\langfe1024\dbch\af11\noproof\langnp1033\langfenp1041\insrsid16470200 
\par }{\field\fldedit{\*\fldinst {\cs15\ul\cf2\lang1024\langfe1024\noproof\insrsid16470200\charrsid16269137  }{\lang1024\langfe1024\noproof\insrsid16470200 HYPERLINK \\l "_Toc152895972"}{
\cs15\ul\cf2\lang1024\langfe1024\noproof\insrsid16470200\charrsid16269137  }{\ul\cf2\lang1024\langfe1024\noproof\insrsid8473020\charrsid16269137 {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f006300310035003200380039003500390037003200000000}}}{\fldrslt {\cs15\ul\cf2\lang1024\langfe1024\noproof\insrsid16470200\charrsid16269137 Mouse.CursorPosX and Mouse.CursorPosY}{
\lang1024\langfe1024\noproof\webhidden\insrsid16470200 \tab }{\field{\*\fldinst {\lang1024\langfe1024\noproof\webhidden\insrsid16470200  PAGEREF _Toc152895972 \\h }{\lang1024\langfe1024\noproof\insrsid8473020 {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f006300310035003200380039003500390037003200000000}}}{\fldrslt {\lang1024\langfe1024\noproof\webhidden\insrsid16470200 29}}}}}{
\b0\scaps0\fs24\lang1024\langfe1024\dbch\af11\noproof\langnp1033\langfenp1041\insrsid16470200 
\par }{\field\fldedit{\*\fldinst {\cs15\ul\cf2\lang1024\langfe1024\noproof\insrsid16470200\charrsid16269137  }{\lang1024\langfe1024\noproof\insrsid16470200 HYPERLINK \\l "_Toc152895973"}{
\cs15\ul\cf2\lang1024\langfe1024\noproof\insrsid16470200\charrsid16269137  }{\ul\cf2\lang1024\langfe1024\noproof\insrsid8473020\charrsid16269137 {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f006300310035003200380039003500390037003300000000}}}{\fldrslt {\cs15\ul\cf2\lang1024\langfe1024\noproof\insrsid16470200\charrsid16269137 Mouse.CursorPos}{
\lang1024\langfe1024\noproof\webhidden\insrsid16470200 \tab }{\field{\*\fldinst {\lang1024\langfe1024\noproof\webhidden\insrsid16470200  PAGEREF _Toc152895973 \\h }{\lang1024\langfe1024\noproof\insrsid8473020 {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f006300310035003200380039003500390037003300000001}}}{\fldrslt {\lang1024\langfe1024\noproof\webhidden\insrsid16470200 30}}}}}{
\b0\scaps0\fs24\lang1024\langfe1024\dbch\af11\noproof\langnp1033\langfenp1041\insrsid16470200 
\par }{\field\fldedit{\*\fldinst {\cs15\ul\cf2\lang1024\langfe1024\noproof\insrsid16470200\charrsid16269137  }{\lang1024\langfe1024\noproof\insrsid16470200 HYPERLINK \\l "_Toc152895974"}{
\cs15\ul\cf2\lang1024\langfe1024\noproof\insrsid16470200\charrsid16269137  }{\ul\cf2\lang1024\langfe1024\noproof\insrsid8473020\charrsid16269137 {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f006300310035003200380039003500390037003400000000}}}{\fldrslt {\cs15\ul\cf2\lang1024\langfe1024\noproof\insrsid16470200\charrsid16269137 Mouse.X and Mouse.Y}{
\lang1024\langfe1024\noproof\webhidden\insrsid16470200 \tab }{\field{\*\fldinst {\lang1024\langfe1024\noproof\webhidden\insrsid16470200  PAGEREF _Toc152895974 \\h }{\lang1024\langfe1024\noproof\insrsid8473020 {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f006300310035003200380039003500390037003400000000}}}{\fldrslt {\lang1024\langfe1024\noproof\webhidden\insrsid16470200 31}}}}}{
\b0\scaps0\fs24\lang1024\langfe1024\dbch\af11\noproof\langnp1033\langfenp1041\insrsid16470200 
\par }{\field\fldedit{\*\fldinst {\cs15\ul\cf2\lang1024\langfe1024\noproof\insrsid16470200\charrsid16269137  }{\lang1024\langfe1024\noproof\insrsid16470200 HYPERLINK \\l "_Toc152895975"}{
\cs15\ul\cf2\lang1024\langfe1024\noproof\insrsid16470200\charrsid16269137  }{\ul\cf2\lang1024\langfe1024\noproof\insrsid8473020\charrsid16269137 {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f006300310035003200380039003500390037003500000000}}}{\fldrslt {\cs15\ul\cf2\lang1024\langfe1024\noproof\insrsid16470200\charrsid16269137 Mouse.ScreenFraction}{
\lang1024\langfe1024\noproof\webhidden\insrsid16470200 \tab }{\field{\*\fldinst {\lang1024\langfe1024\noproof\webhidden\insrsid16470200  PAGEREF _Toc152895975 \\h }{\lang1024\langfe1024\noproof\insrsid8473020 {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f006300310035003200380039003500390037003500000000}}}{\fldrslt {\lang1024\langfe1024\noproof\webhidden\insrsid16470200 31}}}}}{
\b0\scaps0\fs24\lang1024\langfe1024\dbch\af11\noproof\langnp1033\langfenp1041\insrsid16470200 
\par }{\field\fldedit{\*\fldinst {\cs15\ul\cf2\lang1024\langfe1024\noproof\insrsid16470200\charrsid16269137  }{\lang1024\langfe1024\noproof\insrsid16470200 HYPERLINK \\l "_Toc152895976"}{
\cs15\ul\cf2\lang1024\langfe1024\noproof\insrsid16470200\charrsid16269137  }{\ul\cf2\lang1024\langfe1024\noproof\insrsid8473020\charrsid16269137 {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f006300310035003200380039003500390037003600000076}}}{\fldrslt {\cs15\ul\cf2\lang1024\langfe1024\noproof\insrsid16470200\charrsid16269137 Mouse.VirtualDesktopX and Mouse.VirtualDesktopY}{
\lang1024\langfe1024\noproof\webhidden\insrsid16470200 \tab }{\field{\*\fldinst {\lang1024\langfe1024\noproof\webhidden\insrsid16470200  PAGEREF _Toc152895976 \\h }{\lang1024\langfe1024\noproof\insrsid8473020 {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f006300310035003200380039003500390037003600000000}}}{\fldrslt {\lang1024\langfe1024\noproof\webhidden\insrsid16470200 31}}}}}{
\b0\scaps0\fs24\lang1024\langfe1024\dbch\af11\noproof\langnp1033\langfenp1041\insrsid16470200 
\par }{\field\fldedit{\*\fldinst {\cs15\ul\cf2\lang1024\langfe1024\noproof\insrsid16470200\charrsid16269137  }{\lang1024\langfe1024\noproof\insrsid16470200 HYPERLINK \\l "_Toc152895977"}{
\cs15\ul\cf2\lang1024\langfe1024\noproof\insrsid16470200\charrsid16269137  }{\ul\cf2\lang1024\langfe1024\noproof\insrsid8473020\charrsid16269137 {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f006300310035003200380039003500390037003700000000}}}{\fldrslt {\cs15\ul\cf2\lang1024\langfe1024\noproof\insrsid16470200\charrsid16269137 Mouse.DesktopFraction}{
\lang1024\langfe1024\noproof\webhidden\insrsid16470200 \tab }{\field{\*\fldinst {\lang1024\langfe1024\noproof\webhidden\insrsid16470200  PAGEREF _Toc152895977 \\h }{\lang1024\langfe1024\noproof\insrsid8473020 {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f006300310035003200380039003500390037003700000000}}}{\fldrslt {\lang1024\langfe1024\noproof\webhidden\insrsid16470200 32}}}}}{
\b0\scaps0\fs24\lang1024\langfe1024\dbch\af11\noproof\langnp1033\langfenp1041\insrsid16470200 
\par }{\field\fldedit{\*\fldinst {\cs15\ul\cf2\lang1024\langfe1024\noproof\insrsid16470200\charrsid16269137  }{\lang1024\langfe1024\noproof\insrsid16470200 HYPERLINK \\l "_Toc152895978"}{
\cs15\ul\cf2\lang1024\langfe1024\noproof\insrsid16470200\charrsid16269137  }{\ul\cf2\lang1024\langfe1024\noproof\insrsid8473020\charrsid16269137 {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f006300310035003200380039003500390037003800000000}}}{\fldrslt {\cs15\ul\cf2\lang1024\langfe1024\noproof\insrsid16470200\charrsid16269137 Mouse Buttons}{
\lang1024\langfe1024\noproof\webhidden\insrsid16470200 \tab }{\field{\*\fldinst {\lang1024\langfe1024\noproof\webhidden\insrsid16470200  PAGEREF _Toc152895978 \\h }{\lang1024\langfe1024\noproof\insrsid8473020 {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f006300310035003200380039003500390037003800000000}}}{\fldrslt {\lang1024\langfe1024\noproof\webhidden\insrsid16470200 32}}}}}{
\b0\scaps0\fs24\lang1024\langfe1024\dbch\af11\noproof\langnp1033\langfenp1041\insrsid16470200 
\par }{\field\fldedit{\*\fldinst {\cs15\ul\cf2\lang1024\langfe1024\noproof\insrsid16470200\charrsid16269137  }{\lang1024\langfe1024\noproof\insrsid16470200 HYPERLINK \\l "_Toc152895979"}{
\cs15\ul\cf2\lang1024\langfe1024\noproof\insrsid16470200\charrsid16269137  }{\ul\cf2\lang1024\langfe1024\noproof\insrsid8473020\charrsid16269137 {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f006300310035003200380039003500390037003900000000}}}{\fldrslt {\cs15\ul\cf2\lang1024\langfe1024\noproof\insrsid16470200\charrsid16269137 Mouse.DoubleClickTime}{
\lang1024\langfe1024\noproof\webhidden\insrsid16470200 \tab }{\field{\*\fldinst {\lang1024\langfe1024\noproof\webhidden\insrsid16470200  PAGEREF _Toc152895979 \\h }{\lang1024\langfe1024\noproof\insrsid8473020 {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f006300310035003200380039003500390037003900000000}}}{\fldrslt {\lang1024\langfe1024\noproof\webhidden\insrsid16470200 32}}}}}{
\b0\scaps0\fs24\lang1024\langfe1024\dbch\af11\noproof\langnp1033\langfenp1041\insrsid16470200 
\par }{\field\fldedit{\*\fldinst {\cs15\ul\cf2\lang1024\langfe1024\noproof\insrsid16470200\charrsid16269137  }{\lang1024\langfe1024\noproof\insrsid16470200 HYPERLINK \\l "_Toc152895980"}{
\cs15\ul\cf2\lang1024\langfe1024\noproof\insrsid16470200\charrsid16269137  }{\ul\cf2\lang1024\langfe1024\noproof\insrsid8473020\charrsid16269137 {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f00630031003500320038003900350039003800300000007a}}}{\fldrslt {\cs15\ul\cf2\lang1024\langfe1024\noproof\insrsid16470200\charrsid16269137 Mouse.IsDragging}{
\lang1024\langfe1024\noproof\webhidden\insrsid16470200 \tab }{\field{\*\fldinst {\lang1024\langfe1024\noproof\webhidden\insrsid16470200  PAGEREF _Toc152895980 \\h }{\lang1024\langfe1024\noproof\insrsid8473020 {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f006300310035003200380039003500390038003000000000}}}{\fldrslt {\lang1024\langfe1024\noproof\webhidden\insrsid16470200 33}}}}}{
\b0\scaps0\fs24\lang1024\langfe1024\dbch\af11\noproof\langnp1033\langfenp1041\insrsid16470200 
\par }{\field\fldedit{\*\fldinst {\cs15\ul\cf2\lang1024\langfe1024\noproof\insrsid16470200\charrsid16269137  }{\lang1024\langfe1024\noproof\insrsid16470200 HYPERLINK \\l "_Toc152895981"}{
\cs15\ul\cf2\lang1024\langfe1024\noproof\insrsid16470200\charrsid16269137  }{\ul\cf2\lang1024\langfe1024\noproof\insrsid8473020\charrsid16269137 {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f006300310035003200380039003500390038003100000000}}}{\fldrslt {\cs15\ul\cf2\lang1024\langfe1024\noproof\insrsid16470200\charrsid16269137 Mouse.Count}{
\lang1024\langfe1024\noproof\webhidden\insrsid16470200 \tab }{\field{\*\fldinst {\lang1024\langfe1024\noproof\webhidden\insrsid16470200  PAGEREF _Toc152895981 \\h }{\lang1024\langfe1024\noproof\insrsid8473020 {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f006300310035003200380039003500390038003100000000}}}{\fldrslt {\lang1024\langfe1024\noproof\webhidden\insrsid16470200 33}}}}}{
\b0\scaps0\fs24\lang1024\langfe1024\dbch\af11\noproof\langnp1033\langfenp1041\insrsid16470200 
\par }{\field\fldedit{\*\fldinst {\cs15\ul\cf2\lang1024\langfe1024\noproof\insrsid16470200\charrsid16269137  }{\lang1024\langfe1024\noproof\insrsid16470200 HYPERLINK \\l "_Toc152895982"}{
\cs15\ul\cf2\lang1024\langfe1024\noproof\insrsid16470200\charrsid16269137  }{\ul\cf2\lang1024\langfe1024\noproof\insrsid8473020\charrsid16269137 {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f006300310035003200380039003500390038003200000000}}}{\fldrslt {\cs15\ul\cf2\lang1024\langfe1024\noproof\insrsid16470200\charrsid16269137 Mouse.CursorVisible}{
\lang1024\langfe1024\noproof\webhidden\insrsid16470200 \tab }{\field{\*\fldinst {\lang1024\langfe1024\noproof\webhidden\insrsid16470200  PAGEREF _Toc152895982 \\h }{\lang1024\langfe1024\noproof\insrsid8473020 {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f006300310035003200380039003500390038003200000000}}}{\fldrslt {\lang1024\langfe1024\noproof\webhidden\insrsid16470200 33}}}}}{
\b0\scaps0\fs24\lang1024\langfe1024\dbch\af11\noproof\langnp1033\langfenp1041\insrsid16470200 
\par }{\field\fldedit{\*\fldinst {\cs15\ul\cf2\lang1024\langfe1024\noproof\insrsid16470200\charrsid16269137  }{\lang1024\langfe1024\noproof\insrsid16470200 HYPERLINK \\l "_Toc152895983"}{
\cs15\ul\cf2\lang1024\langfe1024\noproof\insrsid16470200\charrsid16269137  }{\ul\cf2\lang1024\langfe1024\noproof\insrsid8473020\charrsid16269137 {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f006300310035003200380039003500390038003300000000}}}{\fldrslt {\cs15\ul\cf2\lang1024\langfe1024\noproof\insrsid16470200\charrsid16269137 Mouse.Cursor}{
\lang1024\langfe1024\noproof\webhidden\insrsid16470200 \tab }{\field{\*\fldinst {\lang1024\langfe1024\noproof\webhidden\insrsid16470200  PAGEREF _Toc152895983 \\h }{\lang1024\langfe1024\noproof\insrsid8473020 {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f006300310035003200380039003500390038003300000000}}}{\fldrslt {\lang1024\langfe1024\noproof\webhidden\insrsid16470200 33}}}}}{
\b0\scaps0\fs24\lang1024\langfe1024\dbch\af11\noproof\langnp1033\langfenp1041\insrsid16470200 
\par }{\field\fldedit{\*\fldinst {\cs15\ul\cf2\lang1024\langfe1024\noproof\insrsid16470200\charrsid16269137  }{\lang1024\langfe1024\noproof\insrsid16470200 HYPERLINK \\l "_Toc152895984"}{
\cs15\ul\cf2\lang1024\langfe1024\noproof\insrsid16470200\charrsid16269137  }{\ul\cf2\lang1024\langfe1024\noproof\insrsid8473020\charrsid16269137 {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f006300310035003200380039003500390038003400000000}}}{\fldrslt {\cs15\ul\cf2\lang1024\langfe1024\noproof\insrsid16470200\charrsid16269137 Mouse.PermanentCursor}{
\lang1024\langfe1024\noproof\webhidden\insrsid16470200 \tab }{\field{\*\fldinst {\lang1024\langfe1024\noproof\webhidden\insrsid16470200  PAGEREF _Toc152895984 \\h }{\lang1024\langfe1024\noproof\insrsid8473020 {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f006300310035003200380039003500390038003400000000}}}{\fldrslt {\lang1024\langfe1024\noproof\webhidden\insrsid16470200 34}}}}}{
\b0\scaps0\fs24\lang1024\langfe1024\dbch\af11\noproof\langnp1033\langfenp1041\insrsid16470200 
\par }{\field\fldedit{\*\fldinst {\cs15\ul\cf2\lang1024\langfe1024\noproof\insrsid16470200\charrsid16269137  }{\lang1024\langfe1024\noproof\insrsid16470200 HYPERLINK \\l "_Toc152895985"}{
\cs15\ul\cf2\lang1024\langfe1024\noproof\insrsid16470200\charrsid16269137  }{\ul\cf2\lang1024\langfe1024\noproof\insrsid8473020\charrsid16269137 {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f006300310035003200380039003500390038003500000000}}}{\fldrslt {\cs15\ul\cf2\lang1024\langfe1024\noproof\insrsid16470200\charrsid16269137 Swallowing the Mouse}{
\lang1024\langfe1024\noproof\webhidden\insrsid16470200 \tab }{\field{\*\fldinst {\lang1024\langfe1024\noproof\webhidden\insrsid16470200  PAGEREF _Toc152895985 \\h }{\lang1024\langfe1024\noproof\insrsid8473020 {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f006300310035003200380039003500390038003500000000}}}{\fldrslt {\lang1024\langfe1024\noproof\webhidden\insrsid16470200 34}}}}}{
\b0\scaps0\fs24\lang1024\langfe1024\dbch\af11\noproof\langnp1033\langfenp1041\insrsid16470200 
\par }{\field\fldedit{\*\fldinst {\cs15\ul\cf2\lang1024\langfe1024\noproof\insrsid16470200\charrsid16269137  }{\lang1024\langfe1024\noproof\insrsid16470200 HYPERLINK \\l "_Toc152895986"}{
\cs15\ul\cf2\lang1024\langfe1024\noproof\insrsid16470200\charrsid16269137  }{\ul\cf2\lang1024\langfe1024\noproof\insrsid8473020\charrsid16269137 {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f006300310035003200380039003500390038003600000034}}}{\fldrslt {\cs15\ul\cf2\lang1024\langfe1024\noproof\insrsid16470200\charrsid16269137 Mouse.Present}{
\lang1024\langfe1024\noproof\webhidden\insrsid16470200 \tab }{\field{\*\fldinst {\lang1024\langfe1024\noproof\webhidden\insrsid16470200  PAGEREF _Toc152895986 \\h }{\lang1024\langfe1024\noproof\insrsid8473020 {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f006300310035003200380039003500390038003600000000}}}{\fldrslt {\lang1024\langfe1024\noproof\webhidden\insrsid16470200 35}}}}}{
\b0\scaps0\fs24\lang1024\langfe1024\dbch\af11\noproof\langnp1033\langfenp1041\insrsid16470200 
\par }\pard\plain \s16\qc \li0\ri0\sb360\sa360\widctlpar\tqr\tx8303\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \b\caps\fs22\ul\lang3081\langfe1033\cgrid\langnp3081\langfenp1033 {\field\fldedit{\*\fldinst {
\cs15\cf2\lang1024\langfe1024\noproof\insrsid16470200\charrsid16269137  }{\lang1024\langfe1024\noproof\insrsid16470200 HYPERLINK \\l "_Toc152895987"}{\cs15\cf2\lang1024\langfe1024\noproof\insrsid16470200\charrsid16269137  }{
\cf2\lang1024\langfe1024\noproof\insrsid8473020\charrsid16269137 {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f006300310035003200380039003500390038003700000000}}}{\fldrslt {
\cs15\cf2\lang1024\langfe1024\noproof\insrsid16470200\charrsid16269137 Fake Cursors}{\lang1024\langfe1024\noproof\webhidden\insrsid16470200 \tab }{\field{\*\fldinst {\lang1024\langfe1024\noproof\webhidden\insrsid16470200  PAGEREF _Toc152895987 \\h }{
\lang1024\langfe1024\noproof\insrsid8473020 {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f006300310035003200380039003500390038003700000000}}}{\fldrslt {\lang1024\langfe1024\noproof\webhidden\insrsid16470200 36}}}}}{
\b0\caps0\fs24\ulnone\lang1024\langfe1024\dbch\af11\noproof\langnp1033\langfenp1041\insrsid16470200 
\par }\pard\plain \s17\qc \li0\ri0\widctlpar\tqr\tx8303\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \b\scaps\fs22\lang3081\langfe1033\cgrid\langnp3081\langfenp1033 {\field\fldedit{\*\fldinst {
\cs15\ul\cf2\lang1024\langfe1024\noproof\insrsid16470200\charrsid16269137  }{\lang1024\langfe1024\noproof\insrsid16470200 HYPERLINK \\l "_Toc152895988"}{\cs15\ul\cf2\lang1024\langfe1024\noproof\insrsid16470200\charrsid16269137  }{
\ul\cf2\lang1024\langfe1024\noproof\insrsid8473020\charrsid16269137 {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f006300310035003200380039003500390038003800000000}}}{\fldrslt {
\cs15\ul\cf2\lang1024\langfe1024\noproof\insrsid16470200\charrsid16269137 Cursor2.visible}{\lang1024\langfe1024\noproof\webhidden\insrsid16470200 \tab }{\field{\*\fldinst {\lang1024\langfe1024\noproof\webhidden\insrsid16470200  PAGEREF _Toc152895988 \\h }
{\lang1024\langfe1024\noproof\insrsid8473020 {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f006300310035003200380039003500390038003800000000}}}{\fldrslt {\lang1024\langfe1024\noproof\webhidden\insrsid16470200 36}}}}}{
\b0\scaps0\fs24\lang1024\langfe1024\dbch\af11\noproof\langnp1033\langfenp1041\insrsid16470200 
\par }{\field\fldedit{\*\fldinst {\cs15\ul\cf2\lang1024\langfe1024\noproof\insrsid16470200\charrsid16269137  }{\lang1024\langfe1024\noproof\insrsid16470200 HYPERLINK \\l "_Toc152895989"}{
\cs15\ul\cf2\lang1024\langfe1024\noproof\insrsid16470200\charrsid16269137  }{\ul\cf2\lang1024\langfe1024\noproof\insrsid8473020\charrsid16269137 {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f006300310035003200380039003500390038003900000000}}}{\fldrslt {\cs15\ul\cf2\lang1024\langfe1024\noproof\insrsid16470200\charrsid16269137 Cursor2.Shift and Cursor2.Ctrl}{
\lang1024\langfe1024\noproof\webhidden\insrsid16470200 \tab }{\field{\*\fldinst {\lang1024\langfe1024\noproof\webhidden\insrsid16470200  PAGEREF _Toc152895989 \\h }{\lang1024\langfe1024\noproof\insrsid8473020 {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f006300310035003200380039003500390038003900000000}}}{\fldrslt {\lang1024\langfe1024\noproof\webhidden\insrsid16470200 36}}}}}{
\b0\scaps0\fs24\lang1024\langfe1024\dbch\af11\noproof\langnp1033\langfenp1041\insrsid16470200 
\par }\pard\plain \s16\qc \li0\ri0\sb360\sa360\widctlpar\tqr\tx8303\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \b\caps\fs22\ul\lang3081\langfe1033\cgrid\langnp3081\langfenp1033 {\field\fldedit{\*\fldinst {
\cs15\cf2\lang1024\langfe1024\noproof\insrsid16470200\charrsid16269137  }{\lang1024\langfe1024\noproof\insrsid16470200 HYPERLINK \\l "_Toc152895990"}{\cs15\cf2\lang1024\langfe1024\noproof\insrsid16470200\charrsid16269137  }{
\cf2\lang1024\langfe1024\noproof\insrsid8473020\charrsid16269137 {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f006300310035003200380039003500390039003000000008}}}{\fldrslt {
\cs15\cf2\lang1024\langfe1024\noproof\insrsid16470200\charrsid16269137 Keyboard}{\lang1024\langfe1024\noproof\webhidden\insrsid16470200 \tab }{\field{\*\fldinst {\lang1024\langfe1024\noproof\webhidden\insrsid16470200  PAGEREF _Toc152895990 \\h }{
\lang1024\langfe1024\noproof\insrsid8473020 {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f006300310035003200380039003500390039003000000002}}}{\fldrslt {\lang1024\langfe1024\noproof\webhidden\insrsid16470200 38}}}}}{
\b0\caps0\fs24\ulnone\lang1024\langfe1024\dbch\af11\noproof\langnp1033\langfenp1041\insrsid16470200 
\par }\pard\plain \s17\qc \li0\ri0\widctlpar\tqr\tx8303\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \b\scaps\fs22\lang3081\langfe1033\cgrid\langnp3081\langfenp1033 {\field\fldedit{\*\fldinst {
\cs15\ul\cf2\lang1024\langfe1024\noproof\insrsid16470200\charrsid16269137  }{\lang1024\langfe1024\noproof\insrsid16470200 HYPERLINK \\l "_Toc152895991"}{\cs15\ul\cf2\lang1024\langfe1024\noproof\insrsid16470200\charrsid16269137  }{
\ul\cf2\lang1024\langfe1024\noproof\insrsid8473020\charrsid16269137 {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f006300310035003200380039003500390039003100000000}}}{\fldrslt {
\cs15\ul\cf2\lang1024\langfe1024\noproof\insrsid16470200\charrsid16269137 Special Keyboard Fields}{\lang1024\langfe1024\noproof\webhidden\insrsid16470200 \tab }{\field{\*\fldinst {\lang1024\langfe1024\noproof\webhidden\insrsid16470200 
 PAGEREF _Toc152895991 \\h }{\lang1024\langfe1024\noproof\insrsid8473020 {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f006300310035003200380039003500390039003100000000}}}{\fldrslt {
\lang1024\langfe1024\noproof\webhidden\insrsid16470200 38}}}}}{\b0\scaps0\fs24\lang1024\langfe1024\dbch\af11\noproof\langnp1033\langfenp1041\insrsid16470200 
\par }{\field\fldedit{\*\fldinst {\cs15\ul\cf2\lang1024\langfe1024\noproof\insrsid16470200\charrsid16269137  }{\lang1024\langfe1024\noproof\insrsid16470200 HYPERLINK \\l "_Toc152895992"}{
\cs15\ul\cf2\lang1024\langfe1024\noproof\insrsid16470200\charrsid16269137  }{\ul\cf2\lang1024\langfe1024\noproof\insrsid8473020\charrsid16269137 {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f006300310035003200380039003500390039003200000000}}}{\fldrslt {\cs15\ul\cf2\lang1024\langfe1024\noproof\insrsid16470200\charrsid16269137 Multiple Keyboards}{
\lang1024\langfe1024\noproof\webhidden\insrsid16470200 \tab }{\field{\*\fldinst {\lang1024\langfe1024\noproof\webhidden\insrsid16470200  PAGEREF _Toc152895992 \\h }{\lang1024\langfe1024\noproof\insrsid8473020 {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f006300310035003200380039003500390039003200000000}}}{\fldrslt {\lang1024\langfe1024\noproof\webhidden\insrsid16470200 39}}}}}{
\b0\scaps0\fs24\lang1024\langfe1024\dbch\af11\noproof\langnp1033\langfenp1041\insrsid16470200 
\par }{\field\fldedit{\*\fldinst {\cs15\ul\cf2\lang1024\langfe1024\noproof\insrsid16470200\charrsid16269137  }{\lang1024\langfe1024\noproof\insrsid16470200 HYPERLINK \\l "_Toc152895993"}{
\cs15\ul\cf2\lang1024\langfe1024\noproof\insrsid16470200\charrsid16269137  }{\ul\cf2\lang1024\langfe1024\noproof\insrsid8473020\charrsid16269137 {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f006300310035003200380039003500390039003300000000}}}{\fldrslt {\cs15\ul\cf2\lang1024\langfe1024\noproof\insrsid16470200\charrsid16269137 Keys that can\rquote t be used}{
\lang1024\langfe1024\noproof\webhidden\insrsid16470200 \tab }{\field{\*\fldinst {\lang1024\langfe1024\noproof\webhidden\insrsid16470200  PAGEREF _Toc152895993 \\h }{\lang1024\langfe1024\noproof\insrsid8473020 {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f006300310035003200380039003500390039003300000000}}}{\fldrslt {\lang1024\langfe1024\noproof\webhidden\insrsid16470200 39}}}}}{
\b0\scaps0\fs24\lang1024\langfe1024\dbch\af11\noproof\langnp1033\langfenp1041\insrsid16470200 
\par }{\field\fldedit{\*\fldinst {\cs15\ul\cf2\lang1024\langfe1024\noproof\insrsid16470200\charrsid16269137  }{\lang1024\langfe1024\noproof\insrsid16470200 HYPERLINK \\l "_Toc152895994"}{
\cs15\ul\cf2\lang1024\langfe1024\noproof\insrsid16470200\charrsid16269137  }{\ul\cf2\lang1024\langfe1024\noproof\insrsid8473020\charrsid16269137 {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f006300310035003200380039003500390039003400000000}}}{\fldrslt {\cs15\ul\cf2\lang1024\langfe1024\noproof\insrsid16470200\charrsid16269137 Keys that sort of work}{
\lang1024\langfe1024\noproof\webhidden\insrsid16470200 \tab }{\field{\*\fldinst {\lang1024\langfe1024\noproof\webhidden\insrsid16470200  PAGEREF _Toc152895994 \\h }{\lang1024\langfe1024\noproof\insrsid8473020 {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f006300310035003200380039003500390039003400000000}}}{\fldrslt {\lang1024\langfe1024\noproof\webhidden\insrsid16470200 39}}}}}{
\b0\scaps0\fs24\lang1024\langfe1024\dbch\af11\noproof\langnp1033\langfenp1041\insrsid16470200 
\par }{\field\fldedit{\*\fldinst {\cs15\ul\cf2\lang1024\langfe1024\noproof\insrsid16470200\charrsid16269137  }{\lang1024\langfe1024\noproof\insrsid16470200 HYPERLINK \\l "_Toc152895995"}{
\cs15\ul\cf2\lang1024\langfe1024\noproof\insrsid16470200\charrsid16269137  }{\ul\cf2\lang1024\langfe1024\noproof\insrsid8473020\charrsid16269137 {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f006300310035003200380039003500390039003500000000}}}{\fldrslt {\cs15\ul\cf2\lang1024\langfe1024\noproof\insrsid16470200\charrsid16269137 Unicode Characters}{
\lang1024\langfe1024\noproof\webhidden\insrsid16470200 \tab }{\field{\*\fldinst {\lang1024\langfe1024\noproof\webhidden\insrsid16470200  PAGEREF _Toc152895995 \\h }{\lang1024\langfe1024\noproof\insrsid8473020 {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f006300310035003200380039003500390039003500000000}}}{\fldrslt {\lang1024\langfe1024\noproof\webhidden\insrsid16470200 39}}}}}{
\b0\scaps0\fs24\lang1024\langfe1024\dbch\af11\noproof\langnp1033\langfenp1041\insrsid16470200 
\par }{\field\fldedit{\*\fldinst {\cs15\ul\cf2\lang1024\langfe1024\noproof\insrsid16470200\charrsid16269137  }{\lang1024\langfe1024\noproof\insrsid16470200 HYPERLINK \\l "_Toc152895996"}{
\cs15\ul\cf2\lang1024\langfe1024\noproof\insrsid16470200\charrsid16269137  }{\ul\cf2\lang1024\langfe1024\noproof\insrsid8473020\charrsid16269137 {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f00630031003500320038003900350039003900360000004b}}}{\fldrslt {\cs15\ul\cf2\lang1024\langfe1024\noproof\insrsid16470200\charrsid16269137 Number Keys}{
\lang1024\langfe1024\noproof\webhidden\insrsid16470200 \tab }{\field{\*\fldinst {\lang1024\langfe1024\noproof\webhidden\insrsid16470200  PAGEREF _Toc152895996 \\h }{\lang1024\langfe1024\noproof\insrsid8473020 {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f006300310035003200380039003500390039003600000000}}}{\fldrslt {\lang1024\langfe1024\noproof\webhidden\insrsid16470200 40}}}}}{
\b0\scaps0\fs24\lang1024\langfe1024\dbch\af11\noproof\langnp1033\langfenp1041\insrsid16470200 
\par }{\field\fldedit{\*\fldinst {\cs15\ul\cf2\lang1024\langfe1024\noproof\insrsid16470200\charrsid16269137  }{\lang1024\langfe1024\noproof\insrsid16470200 HYPERLINK \\l "_Toc152895997"}{
\cs15\ul\cf2\lang1024\langfe1024\noproof\insrsid16470200\charrsid16269137  }{\ul\cf2\lang1024\langfe1024\noproof\insrsid8473020\charrsid16269137 {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f006300310035003200380039003500390039003700000000}}}{\fldrslt {\cs15\ul\cf2\lang1024\langfe1024\noproof\insrsid16470200\charrsid16269137 Top Row}{
\lang1024\langfe1024\noproof\webhidden\insrsid16470200 \tab }{\field{\*\fldinst {\lang1024\langfe1024\noproof\webhidden\insrsid16470200  PAGEREF _Toc152895997 \\h }{\lang1024\langfe1024\noproof\insrsid8473020 {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f006300310035003200380039003500390039003700000000}}}{\fldrslt {\lang1024\langfe1024\noproof\webhidden\insrsid16470200 40}}}}}{
\b0\scaps0\fs24\lang1024\langfe1024\dbch\af11\noproof\langnp1033\langfenp1041\insrsid16470200 
\par }{\field\fldedit{\*\fldinst {\cs15\ul\cf2\lang1024\langfe1024\noproof\insrsid16470200\charrsid16269137  }{\lang1024\langfe1024\noproof\insrsid16470200 HYPERLINK \\l "_Toc152895998"}{
\cs15\ul\cf2\lang1024\langfe1024\noproof\insrsid16470200\charrsid16269137  }{\ul\cf2\lang1024\langfe1024\noproof\insrsid8473020\charrsid16269137 {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f006300310035003200380039003500390039003800000000}}}{\fldrslt {\cs15\ul\cf2\lang1024\langfe1024\noproof\insrsid16470200\charrsid16269137 Number Row}{
\lang1024\langfe1024\noproof\webhidden\insrsid16470200 \tab }{\field{\*\fldinst {\lang1024\langfe1024\noproof\webhidden\insrsid16470200  PAGEREF _Toc152895998 \\h }{\lang1024\langfe1024\noproof\insrsid8473020 {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f006300310035003200380039003500390039003800000000}}}{\fldrslt {\lang1024\langfe1024\noproof\webhidden\insrsid16470200 40}}}}}{
\b0\scaps0\fs24\lang1024\langfe1024\dbch\af11\noproof\langnp1033\langfenp1041\insrsid16470200 
\par }{\field\fldedit{\*\fldinst {\cs15\ul\cf2\lang1024\langfe1024\noproof\insrsid16470200\charrsid16269137  }{\lang1024\langfe1024\noproof\insrsid16470200 HYPERLINK \\l "_Toc152895999"}{
\cs15\ul\cf2\lang1024\langfe1024\noproof\insrsid16470200\charrsid16269137  }{\ul\cf2\lang1024\langfe1024\noproof\insrsid8473020\charrsid16269137 {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f006300310035003200380039003500390039003900000000}}}{\fldrslt {\cs15\ul\cf2\lang1024\langfe1024\noproof\insrsid16470200\charrsid16269137 Qwerty Row}{
\lang1024\langfe1024\noproof\webhidden\insrsid16470200 \tab }{\field{\*\fldinst {\lang1024\langfe1024\noproof\webhidden\insrsid16470200  PAGEREF _Toc152895999 \\h }{\lang1024\langfe1024\noproof\insrsid8473020 {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f006300310035003200380039003500390039003900000000}}}{\fldrslt {\lang1024\langfe1024\noproof\webhidden\insrsid16470200 40}}}}}{
\b0\scaps0\fs24\lang1024\langfe1024\dbch\af11\noproof\langnp1033\langfenp1041\insrsid16470200 
\par }{\field\fldedit{\*\fldinst {\cs15\ul\cf2\lang1024\langfe1024\noproof\insrsid16470200\charrsid16269137  }{\lang1024\langfe1024\noproof\insrsid16470200 HYPERLINK \\l "_Toc152896000"}{
\cs15\ul\cf2\lang1024\langfe1024\noproof\insrsid16470200\charrsid16269137  }{\ul\cf2\lang1024\langfe1024\noproof\insrsid8473020\charrsid16269137 {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f006300310035003200380039003600300030003000000000}}}{\fldrslt {\cs15\ul\cf2\lang1024\langfe1024\noproof\insrsid16470200\charrsid16269137 Next Row}{
\lang1024\langfe1024\noproof\webhidden\insrsid16470200 \tab }{\field{\*\fldinst {\lang1024\langfe1024\noproof\webhidden\insrsid16470200  PAGEREF _Toc152896000 \\h }{\lang1024\langfe1024\noproof\insrsid8473020 {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f006300310035003200380039003600300030003000000000}}}{\fldrslt {\lang1024\langfe1024\noproof\webhidden\insrsid16470200 40}}}}}{
\b0\scaps0\fs24\lang1024\langfe1024\dbch\af11\noproof\langnp1033\langfenp1041\insrsid16470200 
\par }{\field\fldedit{\*\fldinst {\cs15\ul\cf2\lang1024\langfe1024\noproof\insrsid16470200\charrsid16269137  }{\lang1024\langfe1024\noproof\insrsid16470200 HYPERLINK \\l "_Toc152896001"}{
\cs15\ul\cf2\lang1024\langfe1024\noproof\insrsid16470200\charrsid16269137  }{\ul\cf2\lang1024\langfe1024\noproof\insrsid8473020\charrsid16269137 {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f006300310035003200380039003600300030003100000000}}}{\fldrslt {\cs15\ul\cf2\lang1024\langfe1024\noproof\insrsid16470200\charrsid16269137 Next Row}{
\lang1024\langfe1024\noproof\webhidden\insrsid16470200 \tab }{\field{\*\fldinst {\lang1024\langfe1024\noproof\webhidden\insrsid16470200  PAGEREF _Toc152896001 \\h }{\lang1024\langfe1024\noproof\insrsid8473020 {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f006300310035003200380039003600300030003100000000}}}{\fldrslt {\lang1024\langfe1024\noproof\webhidden\insrsid16470200 41}}}}}{
\b0\scaps0\fs24\lang1024\langfe1024\dbch\af11\noproof\langnp1033\langfenp1041\insrsid16470200 
\par }{\field\fldedit{\*\fldinst {\cs15\ul\cf2\lang1024\langfe1024\noproof\insrsid16470200\charrsid16269137  }{\lang1024\langfe1024\noproof\insrsid16470200 HYPERLINK \\l "_Toc152896002"}{
\cs15\ul\cf2\lang1024\langfe1024\noproof\insrsid16470200\charrsid16269137  }{\ul\cf2\lang1024\langfe1024\noproof\insrsid8473020\charrsid16269137 {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f006300310035003200380039003600300030003200000000}}}{\fldrslt {\cs15\ul\cf2\lang1024\langfe1024\noproof\insrsid16470200\charrsid16269137 Space Bar Row}{
\lang1024\langfe1024\noproof\webhidden\insrsid16470200 \tab }{\field{\*\fldinst {\lang1024\langfe1024\noproof\webhidden\insrsid16470200  PAGEREF _Toc152896002 \\h }{\lang1024\langfe1024\noproof\insrsid8473020 {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f006300310035003200380039003600300030003200000000}}}{\fldrslt {\lang1024\langfe1024\noproof\webhidden\insrsid16470200 41}}}}}{
\b0\scaps0\fs24\lang1024\langfe1024\dbch\af11\noproof\langnp1033\langfenp1041\insrsid16470200 
\par }{\field\fldedit{\*\fldinst {\cs15\ul\cf2\lang1024\langfe1024\noproof\insrsid16470200\charrsid16269137  }{\lang1024\langfe1024\noproof\insrsid16470200 HYPERLINK \\l "_Toc152896003"}{
\cs15\ul\cf2\lang1024\langfe1024\noproof\insrsid16470200\charrsid16269137  }{\ul\cf2\lang1024\langfe1024\noproof\insrsid8473020\charrsid16269137 {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f006300310035003200380039003600300030003300000000}}}{\fldrslt {\cs15\ul\cf2\lang1024\langfe1024\noproof\insrsid16470200\charrsid16269137 Cursor Pad}{
\lang1024\langfe1024\noproof\webhidden\insrsid16470200 \tab }{\field{\*\fldinst {\lang1024\langfe1024\noproof\webhidden\insrsid16470200  PAGEREF _Toc152896003 \\h }{\lang1024\langfe1024\noproof\insrsid8473020 {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f006300310035003200380039003600300030003300000004}}}{\fldrslt {\lang1024\langfe1024\noproof\webhidden\insrsid16470200 41}}}}}{
\b0\scaps0\fs24\lang1024\langfe1024\dbch\af11\noproof\langnp1033\langfenp1041\insrsid16470200 
\par }{\field\fldedit{\*\fldinst {\cs15\ul\cf2\lang1024\langfe1024\noproof\insrsid16470200\charrsid16269137  }{\lang1024\langfe1024\noproof\insrsid16470200 HYPERLINK \\l "_Toc152896004"}{
\cs15\ul\cf2\lang1024\langfe1024\noproof\insrsid16470200\charrsid16269137  }{\ul\cf2\lang1024\langfe1024\noproof\insrsid8473020\charrsid16269137 {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f006300310035003200380039003600300030003400000002}}}{\fldrslt {\cs15\ul\cf2\lang1024\langfe1024\noproof\insrsid16470200\charrsid16269137 Numeric Key Pad}{
\lang1024\langfe1024\noproof\webhidden\insrsid16470200 \tab }{\field{\*\fldinst {\lang1024\langfe1024\noproof\webhidden\insrsid16470200  PAGEREF _Toc152896004 \\h }{\lang1024\langfe1024\noproof\insrsid8473020 {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f006300310035003200380039003600300030003400000000}}}{\fldrslt {\lang1024\langfe1024\noproof\webhidden\insrsid16470200 41}}}}}{
\b0\scaps0\fs24\lang1024\langfe1024\dbch\af11\noproof\langnp1033\langfenp1041\insrsid16470200 
\par }{\field\fldedit{\*\fldinst {\cs15\ul\cf2\lang1024\langfe1024\noproof\insrsid16470200\charrsid16269137  }{\lang1024\langfe1024\noproof\insrsid16470200 HYPERLINK \\l "_Toc152896005"}{
\cs15\ul\cf2\lang1024\langfe1024\noproof\insrsid16470200\charrsid16269137  }{\ul\cf2\lang1024\langfe1024\noproof\insrsid8473020\charrsid16269137 {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f006300310035003200380039003600300030003500000000}}}{\fldrslt {\cs15\ul\cf2\lang1024\langfe1024\noproof\insrsid16470200\charrsid16269137 Stupid Bloody F-Lock Function Keys}{
\lang1024\langfe1024\noproof\webhidden\insrsid16470200 \tab }{\field{\*\fldinst {\lang1024\langfe1024\noproof\webhidden\insrsid16470200  PAGEREF _Toc152896005 \\h }{\lang1024\langfe1024\noproof\insrsid8473020 {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f006300310035003200380039003600300030003500000000}}}{\fldrslt {\lang1024\langfe1024\noproof\webhidden\insrsid16470200 41}}}}}{
\b0\scaps0\fs24\lang1024\langfe1024\dbch\af11\noproof\langnp1033\langfenp1041\insrsid16470200 
\par }{\field\fldedit{\*\fldinst {\cs15\ul\cf2\lang1024\langfe1024\noproof\insrsid16470200\charrsid16269137  }{\lang1024\langfe1024\noproof\insrsid16470200 HYPERLINK \\l "_Toc152896006"}{
\cs15\ul\cf2\lang1024\langfe1024\noproof\insrsid16470200\charrsid16269137  }{\ul\cf2\lang1024\langfe1024\noproof\insrsid8473020\charrsid16269137 {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003100350032003800390036003000300036000000ad}}}{\fldrslt {\cs15\ul\cf2\lang1024\langfe1024\noproof\insrsid16470200\charrsid16269137 Multimedia Keys}{
\lang1024\langfe1024\noproof\webhidden\insrsid16470200 \tab }{\field{\*\fldinst {\lang1024\langfe1024\noproof\webhidden\insrsid16470200  PAGEREF _Toc152896006 \\h }{\lang1024\langfe1024\noproof\insrsid8473020 {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f006300310035003200380039003600300030003600000000}}}{\fldrslt {\lang1024\langfe1024\noproof\webhidden\insrsid16470200 41}}}}}{
\b0\scaps0\fs24\lang1024\langfe1024\dbch\af11\noproof\langnp1033\langfenp1041\insrsid16470200 
\par }{\field\fldedit{\*\fldinst {\cs15\ul\cf2\lang1024\langfe1024\noproof\insrsid16470200\charrsid16269137  }{\lang1024\langfe1024\noproof\insrsid16470200 HYPERLINK \\l "_Toc152896007"}{
\cs15\ul\cf2\lang1024\langfe1024\noproof\insrsid16470200\charrsid16269137  }{\ul\cf2\lang1024\langfe1024\noproof\insrsid8473020\charrsid16269137 {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f006300310035003200380039003600300030003700000001}}}{\fldrslt {\cs15\ul\cf2\lang1024\langfe1024\noproof\insrsid16470200\charrsid16269137 Other Keys}{
\lang1024\langfe1024\noproof\webhidden\insrsid16470200 \tab }{\field{\*\fldinst {\lang1024\langfe1024\noproof\webhidden\insrsid16470200  PAGEREF _Toc152896007 \\h }{\lang1024\langfe1024\noproof\insrsid8473020 {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f006300310035003200380039003600300030003700000000}}}{\fldrslt {\lang1024\langfe1024\noproof\webhidden\insrsid16470200 42}}}}}{
\b0\scaps0\fs24\lang1024\langfe1024\dbch\af11\noproof\langnp1033\langfenp1041\insrsid16470200 
\par }{\field\fldedit{\*\fldinst {\cs15\ul\cf2\lang1024\langfe1024\noproof\insrsid16470200\charrsid16269137  }{\lang1024\langfe1024\noproof\insrsid16470200 HYPERLINK \\l "_Toc152896008"}{
\cs15\ul\cf2\lang1024\langfe1024\noproof\insrsid16470200\charrsid16269137  }{\ul\cf2\lang1024\langfe1024\noproof\insrsid8473020\charrsid16269137 {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f006300310035003200380039003600300030003800000000}}}{\fldrslt {\cs15\ul\cf2\lang1024\langfe1024\noproof\insrsid16470200\charrsid16269137 Left, Right or Don\rquote t Care}{
\lang1024\langfe1024\noproof\webhidden\insrsid16470200 \tab }{\field{\*\fldinst {\lang1024\langfe1024\noproof\webhidden\insrsid16470200  PAGEREF _Toc152896008 \\h }{\lang1024\langfe1024\noproof\insrsid8473020 {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f006300310035003200380039003600300030003800000000}}}{\fldrslt {\lang1024\langfe1024\noproof\webhidden\insrsid16470200 42}}}}}{
\b0\scaps0\fs24\lang1024\langfe1024\dbch\af11\noproof\langnp1033\langfenp1041\insrsid16470200 
\par }{\field\fldedit{\*\fldinst {\cs15\ul\cf2\lang1024\langfe1024\noproof\insrsid16470200\charrsid16269137  }{\lang1024\langfe1024\noproof\insrsid16470200 HYPERLINK \\l "_Toc152896009"}{
\cs15\ul\cf2\lang1024\langfe1024\noproof\insrsid16470200\charrsid16269137  }{\ul\cf2\lang1024\langfe1024\noproof\insrsid8473020\charrsid16269137 {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f006300310035003200380039003600300030003900000000}}}{\fldrslt {\cs15\ul\cf2\lang1024\langfe1024\noproof\insrsid16470200\charrsid16269137 PPJoy}{
\lang1024\langfe1024\noproof\webhidden\insrsid16470200 \tab }{\field{\*\fldinst {\lang1024\langfe1024\noproof\webhidden\insrsid16470200  PAGEREF _Toc152896009 \\h }{\lang1024\langfe1024\noproof\insrsid8473020 {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f006300310035003200380039003600300030003900000000}}}{\fldrslt {\lang1024\langfe1024\noproof\webhidden\insrsid16470200 43}}}}}{
\b0\scaps0\fs24\lang1024\langfe1024\dbch\af11\noproof\langnp1033\langfenp1041\insrsid16470200 
\par }\pard\plain \s16\qc \li0\ri0\sb360\sa360\widctlpar\tqr\tx8303\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \b\caps\fs22\ul\lang3081\langfe1033\cgrid\langnp3081\langfenp1033 {\field\fldedit{\*\fldinst {
\cs15\cf2\lang1024\langfe1024\noproof\insrsid16470200\charrsid16269137  }{\lang1024\langfe1024\noproof\insrsid16470200 HYPERLINK \\l "_Toc152896010"}{\cs15\cf2\lang1024\langfe1024\noproof\insrsid16470200\charrsid16269137  }{
\cf2\lang1024\langfe1024\noproof\insrsid8473020\charrsid16269137 {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f006300310035003200380039003600300031003000000000}}}{\fldrslt {
\cs15\cf2\lang1024\langfe1024\noproof\insrsid16470200\charrsid16269137 Joystick}{\lang1024\langfe1024\noproof\webhidden\insrsid16470200 \tab }{\field{\*\fldinst {\lang1024\langfe1024\noproof\webhidden\insrsid16470200  PAGEREF _Toc152896010 \\h }{
\lang1024\langfe1024\noproof\insrsid8473020 {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f006300310035003200380039003600300031003000000001}}}{\fldrslt {\lang1024\langfe1024\noproof\webhidden\insrsid16470200 44}}}}}{
\b0\caps0\fs24\ulnone\lang1024\langfe1024\dbch\af11\noproof\langnp1033\langfenp1041\insrsid16470200 
\par }\pard\plain \s17\qc \li0\ri0\widctlpar\tqr\tx8303\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \b\scaps\fs22\lang3081\langfe1033\cgrid\langnp3081\langfenp1033 {\field\fldedit{\*\fldinst {
\cs15\ul\cf2\lang1024\langfe1024\noproof\insrsid16470200\charrsid16269137  }{\lang1024\langfe1024\noproof\insrsid16470200 HYPERLINK \\l "_Toc152896011"}{\cs15\ul\cf2\lang1024\langfe1024\noproof\insrsid16470200\charrsid16269137  }{
\ul\cf2\lang1024\langfe1024\noproof\insrsid8473020\charrsid16269137 {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f006300310035003200380039003600300031003100000000}}}{\fldrslt {
\cs15\ul\cf2\lang1024\langfe1024\noproof\insrsid16470200\charrsid16269137 Force Feedback}{\lang1024\langfe1024\noproof\webhidden\insrsid16470200 \tab }{\field{\*\fldinst {\lang1024\langfe1024\noproof\webhidden\insrsid16470200  PAGEREF _Toc152896011 \\h }{
\lang1024\langfe1024\noproof\insrsid8473020 {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f006300310035003200380039003600300031003100000000}}}{\fldrslt {\lang1024\langfe1024\noproof\webhidden\insrsid16470200 44}}}}}{
\b0\scaps0\fs24\lang1024\langfe1024\dbch\af11\noproof\langnp1033\langfenp1041\insrsid16470200 
\par }{\field\fldedit{\*\fldinst {\cs15\ul\cf2\lang1024\langfe1024\noproof\insrsid16470200\charrsid16269137  }{\lang1024\langfe1024\noproof\insrsid16470200 HYPERLINK \\l "_Toc152896012"}{
\cs15\ul\cf2\lang1024\langfe1024\noproof\insrsid16470200\charrsid16269137  }{\ul\cf2\lang1024\langfe1024\noproof\insrsid8473020\charrsid16269137 {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f006300310035003200380039003600300031003200000000}}}{\fldrslt {\cs15\ul\cf2\lang1024\langfe1024\noproof\insrsid16470200\charrsid16269137 Buttons}{
\lang1024\langfe1024\noproof\webhidden\insrsid16470200 \tab }{\field{\*\fldinst {\lang1024\langfe1024\noproof\webhidden\insrsid16470200  PAGEREF _Toc152896012 \\h }{\lang1024\langfe1024\noproof\insrsid8473020 {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f006300310035003200380039003600300031003200000000}}}{\fldrslt {\lang1024\langfe1024\noproof\webhidden\insrsid16470200 44}}}}}{
\b0\scaps0\fs24\lang1024\langfe1024\dbch\af11\noproof\langnp1033\langfenp1041\insrsid16470200 
\par }{\field\fldedit{\*\fldinst {\cs15\ul\cf2\lang1024\langfe1024\noproof\insrsid16470200\charrsid16269137  }{\lang1024\langfe1024\noproof\insrsid16470200 HYPERLINK \\l "_Toc152896013"}{
\cs15\ul\cf2\lang1024\langfe1024\noproof\insrsid16470200\charrsid16269137  }{\ul\cf2\lang1024\langfe1024\noproof\insrsid8473020\charrsid16269137 {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f006300310035003200380039003600300031003300000000}}}{\fldrslt {\cs15\ul\cf2\lang1024\langfe1024\noproof\insrsid16470200\charrsid16269137 Axes}{
\lang1024\langfe1024\noproof\webhidden\insrsid16470200 \tab }{\field{\*\fldinst {\lang1024\langfe1024\noproof\webhidden\insrsid16470200  PAGEREF _Toc152896013 \\h }{\lang1024\langfe1024\noproof\insrsid8473020 {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f006300310035003200380039003600300031003300000000}}}{\fldrslt {\lang1024\langfe1024\noproof\webhidden\insrsid16470200 44}}}}}{
\b0\scaps0\fs24\lang1024\langfe1024\dbch\af11\noproof\langnp1033\langfenp1041\insrsid16470200 
\par }{\field\fldedit{\*\fldinst {\cs15\ul\cf2\lang1024\langfe1024\noproof\insrsid16470200\charrsid16269137  }{\lang1024\langfe1024\noproof\insrsid16470200 HYPERLINK \\l "_Toc152896014"}{
\cs15\ul\cf2\lang1024\langfe1024\noproof\insrsid16470200\charrsid16269137  }{\ul\cf2\lang1024\langfe1024\noproof\insrsid8473020\charrsid16269137 {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f006300310035003200380039003600300031003400000000}}}{\fldrslt {\cs15\ul\cf2\lang1024\langfe1024\noproof\insrsid16470200\charrsid16269137 POV Hats}{
\lang1024\langfe1024\noproof\webhidden\insrsid16470200 \tab }{\field{\*\fldinst {\lang1024\langfe1024\noproof\webhidden\insrsid16470200  PAGEREF _Toc152896014 \\h }{\lang1024\langfe1024\noproof\insrsid8473020 {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f006300310035003200380039003600300031003400000000}}}{\fldrslt {\lang1024\langfe1024\noproof\webhidden\insrsid16470200 45}}}}}{
\b0\scaps0\fs24\lang1024\langfe1024\dbch\af11\noproof\langnp1033\langfenp1041\insrsid16470200 
\par }{\field\fldedit{\*\fldinst {\cs15\ul\cf2\lang1024\langfe1024\noproof\insrsid16470200\charrsid16269137  }{\lang1024\langfe1024\noproof\insrsid16470200 HYPERLINK \\l "_Toc152896015"}{
\cs15\ul\cf2\lang1024\langfe1024\noproof\insrsid16470200\charrsid16269137  }{\ul\cf2\lang1024\langfe1024\noproof\insrsid8473020\charrsid16269137 {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f006300310035003200380039003600300031003500000000}}}{\fldrslt {\cs15\ul\cf2\lang1024\langfe1024\noproof\insrsid16470200\charrsid16269137 Joystick Information}{
\lang1024\langfe1024\noproof\webhidden\insrsid16470200 \tab }{\field{\*\fldinst {\lang1024\langfe1024\noproof\webhidden\insrsid16470200  PAGEREF _Toc152896015 \\h }{\lang1024\langfe1024\noproof\insrsid8473020 {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f006300310035003200380039003600300031003500000000}}}{\fldrslt {\lang1024\langfe1024\noproof\webhidden\insrsid16470200 45}}}}}{
\b0\scaps0\fs24\lang1024\langfe1024\dbch\af11\noproof\langnp1033\langfenp1041\insrsid16470200 
\par }{\field\fldedit{\*\fldinst {\cs15\ul\cf2\lang1024\langfe1024\noproof\insrsid16470200\charrsid16269137  }{\lang1024\langfe1024\noproof\insrsid16470200 HYPERLINK \\l "_Toc152896016"}{
\cs15\ul\cf2\lang1024\langfe1024\noproof\insrsid16470200\charrsid16269137  }{\ul\cf2\lang1024\langfe1024\noproof\insrsid8473020\charrsid16269137 {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f006300310035003200380039003600300031003600000000}}}{\fldrslt {\cs15\ul\cf2\lang1024\langfe1024\noproof\insrsid16470200\charrsid16269137 Multiple Joysticks}{
\lang1024\langfe1024\noproof\webhidden\insrsid16470200 \tab }{\field{\*\fldinst {\lang1024\langfe1024\noproof\webhidden\insrsid16470200  PAGEREF _Toc152896016 \\h }{\lang1024\langfe1024\noproof\insrsid8473020 {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f006300310035003200380039003600300031003600000000}}}{\fldrslt {\lang1024\langfe1024\noproof\webhidden\insrsid16470200 46}}}}}{
\b0\scaps0\fs24\lang1024\langfe1024\dbch\af11\noproof\langnp1033\langfenp1041\insrsid16470200 
\par }\pard\plain \s16\qc \li0\ri0\sb360\sa360\widctlpar\tqr\tx8303\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \b\caps\fs22\ul\lang3081\langfe1033\cgrid\langnp3081\langfenp1033 {\field\fldedit{\*\fldinst {
\cs15\cf2\lang1024\langfe1024\noproof\insrsid16470200\charrsid16269137  }{\lang1024\langfe1024\noproof\insrsid16470200 HYPERLINK \\l "_Toc152896017"}{\cs15\cf2\lang1024\langfe1024\noproof\insrsid16470200\charrsid16269137  }{
\cf2\lang1024\langfe1024\noproof\insrsid8473020\charrsid16269137 {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f006300310035003200380039003600300031003700000000}}}{\fldrslt {
\cs15\cf2\lang1024\langfe1024\noproof\insrsid16470200\charrsid16269137 P5 Glove}{\lang1024\langfe1024\noproof\webhidden\insrsid16470200 \tab }{\field{\*\fldinst {\lang1024\langfe1024\noproof\webhidden\insrsid16470200  PAGEREF _Toc152896017 \\h }{
\lang1024\langfe1024\noproof\insrsid8473020 {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f006300310035003200380039003600300031003700000000}}}{\fldrslt {\lang1024\langfe1024\noproof\webhidden\insrsid16470200 48}}}}}{
\b0\caps0\fs24\ulnone\lang1024\langfe1024\dbch\af11\noproof\langnp1033\langfenp1041\insrsid16470200 
\par }\pard\plain \s17\qc \li0\ri0\widctlpar\tqr\tx8303\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \b\scaps\fs22\lang3081\langfe1033\cgrid\langnp3081\langfenp1033 {\field\fldedit{\*\fldinst {
\cs15\ul\cf2\lang1024\langfe1024\noproof\insrsid16470200\charrsid16269137  }{\lang1024\langfe1024\noproof\insrsid16470200 HYPERLINK \\l "_Toc152896018"}{\cs15\ul\cf2\lang1024\langfe1024\noproof\insrsid16470200\charrsid16269137  }{
\ul\cf2\lang1024\langfe1024\noproof\insrsid8473020\charrsid16269137 {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f006300310035003200380039003600300031003800000000}}}{\fldrslt {
\cs15\ul\cf2\lang1024\langfe1024\noproof\insrsid16470200\charrsid16269137 Buttons}{\lang1024\langfe1024\noproof\webhidden\insrsid16470200 \tab }{\field{\*\fldinst {\lang1024\langfe1024\noproof\webhidden\insrsid16470200  PAGEREF _Toc152896018 \\h }{
\lang1024\langfe1024\noproof\insrsid8473020 {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f006300310035003200380039003600300031003800000000}}}{\fldrslt {\lang1024\langfe1024\noproof\webhidden\insrsid16470200 48}}}}}{
\b0\scaps0\fs24\lang1024\langfe1024\dbch\af11\noproof\langnp1033\langfenp1041\insrsid16470200 
\par }{\field\fldedit{\*\fldinst {\cs15\ul\cf2\lang1024\langfe1024\noproof\insrsid16470200\charrsid16269137  }{\lang1024\langfe1024\noproof\insrsid16470200 HYPERLINK \\l "_Toc152896019"}{
\cs15\ul\cf2\lang1024\langfe1024\noproof\insrsid16470200\charrsid16269137  }{\ul\cf2\lang1024\langfe1024\noproof\insrsid8473020\charrsid16269137 {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f006300310035003200380039003600300031003900000000}}}{\fldrslt {\cs15\ul\cf2\lang1024\langfe1024\noproof\insrsid16470200\charrsid16269137 Fingers}{
\lang1024\langfe1024\noproof\webhidden\insrsid16470200 \tab }{\field{\*\fldinst {\lang1024\langfe1024\noproof\webhidden\insrsid16470200  PAGEREF _Toc152896019 \\h }{\lang1024\langfe1024\noproof\insrsid8473020 {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f006300310035003200380039003600300031003900000000}}}{\fldrslt {\lang1024\langfe1024\noproof\webhidden\insrsid16470200 48}}}}}{
\b0\scaps0\fs24\lang1024\langfe1024\dbch\af11\noproof\langnp1033\langfenp1041\insrsid16470200 
\par }{\field\fldedit{\*\fldinst {\cs15\ul\cf2\lang1024\langfe1024\noproof\insrsid16470200\charrsid16269137  }{\lang1024\langfe1024\noproof\insrsid16470200 HYPERLINK \\l "_Toc152896020"}{
\cs15\ul\cf2\lang1024\langfe1024\noproof\insrsid16470200\charrsid16269137  }{\ul\cf2\lang1024\langfe1024\noproof\insrsid8473020\charrsid16269137 {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f006300310035003200380039003600300032003000000002}}}{\fldrslt {\cs15\ul\cf2\lang1024\langfe1024\noproof\insrsid16470200\charrsid16269137 Location}{
\lang1024\langfe1024\noproof\webhidden\insrsid16470200 \tab }{\field{\*\fldinst {\lang1024\langfe1024\noproof\webhidden\insrsid16470200  PAGEREF _Toc152896020 \\h }{\lang1024\langfe1024\noproof\insrsid8473020 {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f00630031003500320038003900360030003200300000006c}}}{\fldrslt {\lang1024\langfe1024\noproof\webhidden\insrsid16470200 50}}}}}{
\b0\scaps0\fs24\lang1024\langfe1024\dbch\af11\noproof\langnp1033\langfenp1041\insrsid16470200 
\par }{\field\fldedit{\*\fldinst {\cs15\ul\cf2\lang1024\langfe1024\noproof\insrsid16470200\charrsid16269137  }{\lang1024\langfe1024\noproof\insrsid16470200 HYPERLINK \\l "_Toc152896021"}{
\cs15\ul\cf2\lang1024\langfe1024\noproof\insrsid16470200\charrsid16269137  }{\ul\cf2\lang1024\langfe1024\noproof\insrsid8473020\charrsid16269137 {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f006300310035003200380039003600300032003100000000}}}{\fldrslt {\cs15\ul\cf2\lang1024\langfe1024\noproof\insrsid16470200\charrsid16269137 Rotation}{
\lang1024\langfe1024\noproof\webhidden\insrsid16470200 \tab }{\field{\*\fldinst {\lang1024\langfe1024\noproof\webhidden\insrsid16470200  PAGEREF _Toc152896021 \\h }{\lang1024\langfe1024\noproof\insrsid8473020 {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f006300310035003200380039003600300032003100000000}}}{\fldrslt {\lang1024\langfe1024\noproof\webhidden\insrsid16470200 53}}}}}{
\b0\scaps0\fs24\lang1024\langfe1024\dbch\af11\noproof\langnp1033\langfenp1041\insrsid16470200 
\par }\pard\plain \s16\qc \li0\ri0\sb360\sa360\widctlpar\tqr\tx8303\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \b\caps\fs22\ul\lang3081\langfe1033\cgrid\langnp3081\langfenp1033 {\field\fldedit{\*\fldinst {
\cs15\cf2\lang1024\langfe1024\noproof\insrsid16470200\charrsid16269137  }{\lang1024\langfe1024\noproof\insrsid16470200 HYPERLINK \\l "_Toc152896022"}{\cs15\cf2\lang1024\langfe1024\noproof\insrsid16470200\charrsid16269137  }{
\cf2\lang1024\langfe1024\noproof\insrsid8473020\charrsid16269137 {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f006300310035003200380039003600300032003200000000}}}{\fldrslt {
\cs15\cf2\lang1024\langfe1024\noproof\insrsid16470200\charrsid16269137 Wiimote (Nintendo Wii Remote)}{\lang1024\langfe1024\noproof\webhidden\insrsid16470200 \tab }{\field{\*\fldinst {\lang1024\langfe1024\noproof\webhidden\insrsid16470200 
 PAGEREF _Toc152896022 \\h }{\lang1024\langfe1024\noproof\insrsid8473020 {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f006300310035003200380039003600300032003200000000}}}{\fldrslt {
\lang1024\langfe1024\noproof\webhidden\insrsid16470200 59}}}}}{\b0\caps0\fs24\ulnone\lang1024\langfe1024\dbch\af11\noproof\langnp1033\langfenp1041\insrsid16470200 
\par }\pard\plain \s17\qc \li0\ri0\widctlpar\tqr\tx8303\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \b\scaps\fs22\lang3081\langfe1033\cgrid\langnp3081\langfenp1033 {\field\fldedit{\*\fldinst {
\cs15\ul\cf2\lang1024\langfe1024\noproof\insrsid16470200\charrsid16269137  }{\lang1024\langfe1024\noproof\insrsid16470200 HYPERLINK \\l "_Toc152896023"}{\cs15\ul\cf2\lang1024\langfe1024\noproof\insrsid16470200\charrsid16269137  }{
\ul\cf2\lang1024\langfe1024\noproof\insrsid8473020\charrsid16269137 {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f006300310035003200380039003600300032003300000000}}}{\fldrslt {
\cs15\ul\cf2\lang1024\langfe1024\noproof\insrsid16470200\charrsid16269137 MIDI Ports}{\lang1024\langfe1024\noproof\webhidden\insrsid16470200 \tab }{\field{\*\fldinst {\lang1024\langfe1024\noproof\webhidden\insrsid16470200  PAGEREF _Toc152896023 \\h }{
\lang1024\langfe1024\noproof\insrsid8473020 {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f006300310035003200380039003600300032003300000000}}}{\fldrslt {\lang1024\langfe1024\noproof\webhidden\insrsid16470200 60}}}}}{
\b0\scaps0\fs24\lang1024\langfe1024\dbch\af11\noproof\langnp1033\langfenp1041\insrsid16470200 
\par }{\field\fldedit{\*\fldinst {\cs15\ul\cf2\lang1024\langfe1024\noproof\insrsid16470200\charrsid16269137  }{\lang1024\langfe1024\noproof\insrsid16470200 HYPERLINK \\l "_Toc152896024"}{
\cs15\ul\cf2\lang1024\langfe1024\noproof\insrsid16470200\charrsid16269137  }{\ul\cf2\lang1024\langfe1024\noproof\insrsid8473020\charrsid16269137 {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f006300310035003200380039003600300032003400000000}}}{\fldrslt {\cs15\ul\cf2\lang1024\langfe1024\noproof\insrsid16470200\charrsid16269137 MIDI Channels}{
\lang1024\langfe1024\noproof\webhidden\insrsid16470200 \tab }{\field{\*\fldinst {\lang1024\langfe1024\noproof\webhidden\insrsid16470200  PAGEREF _Toc152896024 \\h }{\lang1024\langfe1024\noproof\insrsid8473020 {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f006300310035003200380039003600300032003400000000}}}{\fldrslt {\lang1024\langfe1024\noproof\webhidden\insrsid16470200 61}}}}}{
\b0\scaps0\fs24\lang1024\langfe1024\dbch\af11\noproof\langnp1033\langfenp1041\insrsid16470200 
\par }{\field\fldedit{\*\fldinst {\cs15\ul\cf2\lang1024\langfe1024\noproof\insrsid16470200\charrsid16269137  }{\lang1024\langfe1024\noproof\insrsid16470200 HYPERLINK \\l "_Toc152896025"}{
\cs15\ul\cf2\lang1024\langfe1024\noproof\insrsid16470200\charrsid16269137  }{\ul\cf2\lang1024\langfe1024\noproof\insrsid8473020\charrsid16269137 {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f006300310035003200380039003600300032003500000000}}}{\fldrslt {\cs15\ul\cf2\lang1024\langfe1024\noproof\insrsid16470200\charrsid16269137 Playing notes}{
\lang1024\langfe1024\noproof\webhidden\insrsid16470200 \tab }{\field{\*\fldinst {\lang1024\langfe1024\noproof\webhidden\insrsid16470200  PAGEREF _Toc152896025 \\h }{\lang1024\langfe1024\noproof\insrsid8473020 {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f006300310035003200380039003600300032003500000000}}}{\fldrslt {\lang1024\langfe1024\noproof\webhidden\insrsid16470200 62}}}}}{
\b0\scaps0\fs24\lang1024\langfe1024\dbch\af11\noproof\langnp1033\langfenp1041\insrsid16470200 
\par }{\field\fldedit{\*\fldinst {\cs15\ul\cf2\lang1024\langfe1024\noproof\insrsid16470200\charrsid16269137  }{\lang1024\langfe1024\noproof\insrsid16470200 HYPERLINK \\l "_Toc152896026"}{
\cs15\ul\cf2\lang1024\langfe1024\noproof\insrsid16470200\charrsid16269137  }{\ul\cf2\lang1024\langfe1024\noproof\insrsid8473020\charrsid16269137 {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f006300310035003200380039003600300032003600000000}}}{\fldrslt {\cs15\ul\cf2\lang1024\langfe1024\noproof\insrsid16470200\charrsid16269137 Playing Percussion}{
\lang1024\langfe1024\noproof\webhidden\insrsid16470200 \tab }{\field{\*\fldinst {\lang1024\langfe1024\noproof\webhidden\insrsid16470200  PAGEREF _Toc152896026 \\h }{\lang1024\langfe1024\noproof\insrsid8473020 {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003100350032003800390036003000320036000000ff}}}{\fldrslt {\lang1024\langfe1024\noproof\webhidden\insrsid16470200 63}}}}}{
\b0\scaps0\fs24\lang1024\langfe1024\dbch\af11\noproof\langnp1033\langfenp1041\insrsid16470200 
\par }{\field\fldedit{\*\fldinst {\cs15\ul\cf2\lang1024\langfe1024\noproof\insrsid16470200\charrsid16269137  }{\lang1024\langfe1024\noproof\insrsid16470200 HYPERLINK \\l "_Toc152896027"}{
\cs15\ul\cf2\lang1024\langfe1024\noproof\insrsid16470200\charrsid16269137  }{\ul\cf2\lang1024\langfe1024\noproof\insrsid8473020\charrsid16269137 {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f006300310035003200380039003600300032003700000009}}}{\fldrslt {\cs15\ul\cf2\lang1024\langfe1024\noproof\insrsid16470200\charrsid16269137 Reading Notes}{
\lang1024\langfe1024\noproof\webhidden\insrsid16470200 \tab }{\field{\*\fldinst {\lang1024\langfe1024\noproof\webhidden\insrsid16470200  PAGEREF _Toc152896027 \\h }{\lang1024\langfe1024\noproof\insrsid8473020 {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f006300310035003200380039003600300032003700000000}}}{\fldrslt {\lang1024\langfe1024\noproof\webhidden\insrsid16470200 63}}}}}{
\b0\scaps0\fs24\lang1024\langfe1024\dbch\af11\noproof\langnp1033\langfenp1041\insrsid16470200 
\par }{\field\fldedit{\*\fldinst {\cs15\ul\cf2\lang1024\langfe1024\noproof\insrsid16470200\charrsid16269137  }{\lang1024\langfe1024\noproof\insrsid16470200 HYPERLINK \\l "_Toc152896028"}{
\cs15\ul\cf2\lang1024\langfe1024\noproof\insrsid16470200\charrsid16269137  }{\ul\cf2\lang1024\langfe1024\noproof\insrsid8473020\charrsid16269137 {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f006300310035003200380039003600300032003800000000}}}{\fldrslt {\cs15\ul\cf2\lang1024\langfe1024\noproof\insrsid16470200\charrsid16269137 Setting the instrument}{
\lang1024\langfe1024\noproof\webhidden\insrsid16470200 \tab }{\field{\*\fldinst {\lang1024\langfe1024\noproof\webhidden\insrsid16470200  PAGEREF _Toc152896028 \\h }{\lang1024\langfe1024\noproof\insrsid8473020 {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f006300310035003200380039003600300032003800000000}}}{\fldrslt {\lang1024\langfe1024\noproof\webhidden\insrsid16470200 64}}}}}{
\b0\scaps0\fs24\lang1024\langfe1024\dbch\af11\noproof\langnp1033\langfenp1041\insrsid16470200 
\par }{\field\fldedit{\*\fldinst {\cs15\ul\cf2\lang1024\langfe1024\noproof\insrsid16470200\charrsid16269137  }{\lang1024\langfe1024\noproof\insrsid16470200 HYPERLINK \\l "_Toc152896029"}{
\cs15\ul\cf2\lang1024\langfe1024\noproof\insrsid16470200\charrsid16269137  }{\ul\cf2\lang1024\langfe1024\noproof\insrsid8473020\charrsid16269137 {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f006300310035003200380039003600300032003900000000}}}{\fldrslt {\cs15\ul\cf2\lang1024\langfe1024\noproof\insrsid16470200\charrsid16269137 Pitch Wheel}{
\lang1024\langfe1024\noproof\webhidden\insrsid16470200 \tab }{\field{\*\fldinst {\lang1024\langfe1024\noproof\webhidden\insrsid16470200  PAGEREF _Toc152896029 \\h }{\lang1024\langfe1024\noproof\insrsid8473020 {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f006300310035003200380039003600300032003900000000}}}{\fldrslt {\lang1024\langfe1024\noproof\webhidden\insrsid16470200 64}}}}}{
\b0\scaps0\fs24\lang1024\langfe1024\dbch\af11\noproof\langnp1033\langfenp1041\insrsid16470200 
\par }{\field\fldedit{\*\fldinst {\cs15\ul\cf2\lang1024\langfe1024\noproof\insrsid16470200\charrsid16269137  }{\lang1024\langfe1024\noproof\insrsid16470200 HYPERLINK \\l "_Toc152896030"}{
\cs15\ul\cf2\lang1024\langfe1024\noproof\insrsid16470200\charrsid16269137  }{\ul\cf2\lang1024\langfe1024\noproof\insrsid8473020\charrsid16269137 {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f006300310035003200380039003600300033003000000000}}}{\fldrslt {\cs15\ul\cf2\lang1024\langfe1024\noproof\insrsid16470200\charrsid16269137 Controls and Change Control messages}{
\lang1024\langfe1024\noproof\webhidden\insrsid16470200 \tab }{\field{\*\fldinst {\lang1024\langfe1024\noproof\webhidden\insrsid16470200  PAGEREF _Toc152896030 \\h }{\lang1024\langfe1024\noproof\insrsid8473020 {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f006300310035003200380039003600300033003000000000}}}{\fldrslt {\lang1024\langfe1024\noproof\webhidden\insrsid16470200 65}}}}}{
\b0\scaps0\fs24\lang1024\langfe1024\dbch\af11\noproof\langnp1033\langfenp1041\insrsid16470200 
\par }{\field\fldedit{\*\fldinst {\cs15\ul\cf2\lang1024\langfe1024\noproof\insrsid16470200\charrsid16269137  }{\lang1024\langfe1024\noproof\insrsid16470200 HYPERLINK \\l "_Toc152896031"}{
\cs15\ul\cf2\lang1024\langfe1024\noproof\insrsid16470200\charrsid16269137  }{\ul\cf2\lang1024\langfe1024\noproof\insrsid8473020\charrsid16269137 {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f006300310035003200380039003600300033003100000000}}}{\fldrslt {\cs15\ul\cf2\lang1024\langfe1024\noproof\insrsid16470200\charrsid16269137 RPN (Registered Parameter Numbers)}{
\lang1024\langfe1024\noproof\webhidden\insrsid16470200 \tab }{\field{\*\fldinst {\lang1024\langfe1024\noproof\webhidden\insrsid16470200  PAGEREF _Toc152896031 \\h }{\lang1024\langfe1024\noproof\insrsid8473020 {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f006300310035003200380039003600300033003100000000}}}{\fldrslt {\lang1024\langfe1024\noproof\webhidden\insrsid16470200 65}}}}}{
\b0\scaps0\fs24\lang1024\langfe1024\dbch\af11\noproof\langnp1033\langfenp1041\insrsid16470200 
\par }{\field\fldedit{\*\fldinst {\cs15\ul\cf2\lang1024\langfe1024\noproof\insrsid16470200\charrsid16269137  }{\lang1024\langfe1024\noproof\insrsid16470200 HYPERLINK \\l "_Toc152896032"}{
\cs15\ul\cf2\lang1024\langfe1024\noproof\insrsid16470200\charrsid16269137  }{\ul\cf2\lang1024\langfe1024\noproof\insrsid8473020\charrsid16269137 {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f006300310035003200380039003600300033003200000000}}}{\fldrslt {\cs15\ul\cf2\lang1024\langfe1024\noproof\insrsid16470200\charrsid16269137 NRPN (Non Registered Parameter Numbers)}{
\lang1024\langfe1024\noproof\webhidden\insrsid16470200 \tab }{\field{\*\fldinst {\lang1024\langfe1024\noproof\webhidden\insrsid16470200  PAGEREF _Toc152896032 \\h }{\lang1024\langfe1024\noproof\insrsid8473020 {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f006300310035003200380039003600300033003200000000}}}{\fldrslt {\lang1024\langfe1024\noproof\webhidden\insrsid16470200 66}}}}}{
\b0\scaps0\fs24\lang1024\langfe1024\dbch\af11\noproof\langnp1033\langfenp1041\insrsid16470200 
\par }{\field\fldedit{\*\fldinst {\cs15\ul\cf2\lang1024\langfe1024\noproof\insrsid16470200\charrsid16269137  }{\lang1024\langfe1024\noproof\insrsid16470200 HYPERLINK \\l "_Toc152896033"}{
\cs15\ul\cf2\lang1024\langfe1024\noproof\insrsid16470200\charrsid16269137  }{\ul\cf2\lang1024\langfe1024\noproof\insrsid8473020\charrsid16269137 {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f006300310035003200380039003600300033003300000000}}}{\fldrslt {\cs15\ul\cf2\lang1024\langfe1024\noproof\insrsid16470200\charrsid16269137 SysEx (System Exclusive)}{
\lang1024\langfe1024\noproof\webhidden\insrsid16470200 \tab }{\field{\*\fldinst {\lang1024\langfe1024\noproof\webhidden\insrsid16470200  PAGEREF _Toc152896033 \\h }{\lang1024\langfe1024\noproof\insrsid8473020 {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f006300310035003200380039003600300033003300000000}}}{\fldrslt {\lang1024\langfe1024\noproof\webhidden\insrsid16470200 66}}}}}{
\b0\scaps0\fs24\lang1024\langfe1024\dbch\af11\noproof\langnp1033\langfenp1041\insrsid16470200 
\par }\pard\plain \s16\qc \li0\ri0\sb360\sa360\widctlpar\tqr\tx8303\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \b\caps\fs22\ul\lang3081\langfe1033\cgrid\langnp3081\langfenp1033 {\field\fldedit{\*\fldinst {
\cs15\cf2\lang1024\langfe1024\noproof\insrsid16470200\charrsid16269137  }{\lang1024\langfe1024\noproof\insrsid16470200 HYPERLINK \\l "_Toc152896034"}{\cs15\cf2\lang1024\langfe1024\noproof\insrsid16470200\charrsid16269137  }{
\cf2\lang1024\langfe1024\noproof\insrsid8473020\charrsid16269137 {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f006300310035003200380039003600300033003400000001}}}{\fldrslt {
\cs15\cf2\lang1024\langfe1024\noproof\insrsid16470200\charrsid16269137 Speech}{\lang1024\langfe1024\noproof\webhidden\insrsid16470200 \tab }{\field{\*\fldinst {\lang1024\langfe1024\noproof\webhidden\insrsid16470200  PAGEREF _Toc152896034 \\h }{
\lang1024\langfe1024\noproof\insrsid8473020 {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f006300310035003200380039003600300033003400000000}}}{\fldrslt {\lang1024\langfe1024\noproof\webhidden\insrsid16470200 67}}}}}{
\b0\caps0\fs24\ulnone\lang1024\langfe1024\dbch\af11\noproof\langnp1033\langfenp1041\insrsid16470200 
\par }\pard\plain \s17\qc \li0\ri0\widctlpar\tqr\tx8303\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \b\scaps\fs22\lang3081\langfe1033\cgrid\langnp3081\langfenp1033 {\field\fldedit{\*\fldinst {
\cs15\ul\cf2\lang1024\langfe1024\noproof\insrsid16470200\charrsid16269137  }{\lang1024\langfe1024\noproof\insrsid16470200 HYPERLINK \\l "_Toc152896035"}{\cs15\ul\cf2\lang1024\langfe1024\noproof\insrsid16470200\charrsid16269137  }{
\ul\cf2\lang1024\langfe1024\noproof\insrsid8473020\charrsid16269137 {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f006300310035003200380039003600300033003500000000}}}{\fldrslt {
\cs15\ul\cf2\lang1024\langfe1024\noproof\insrsid16470200\charrsid16269137 Making GlovePIE talk}{\lang1024\langfe1024\noproof\webhidden\insrsid16470200 \tab }{\field{\*\fldinst {\lang1024\langfe1024\noproof\webhidden\insrsid16470200  PAGEREF _Toc152896035 
\\h }{\lang1024\langfe1024\noproof\insrsid8473020 {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f006300310035003200380039003600300033003500000000}}}{\fldrslt {\lang1024\langfe1024\noproof\webhidden\insrsid16470200 67}}}
}}{\b0\scaps0\fs24\lang1024\langfe1024\dbch\af11\noproof\langnp1033\langfenp1041\insrsid16470200 
\par }{\field\fldedit{\*\fldinst {\cs15\ul\cf2\lang1024\langfe1024\noproof\insrsid16470200\charrsid16269137  }{\lang1024\langfe1024\noproof\insrsid16470200 HYPERLINK \\l "_Toc152896036"}{
\cs15\ul\cf2\lang1024\langfe1024\noproof\insrsid16470200\charrsid16269137  }{\ul\cf2\lang1024\langfe1024\noproof\insrsid8473020\charrsid16269137 {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f006300310035003200380039003600300033003600000000}}}{\fldrslt {\cs15\ul\cf2\lang1024\langfe1024\noproof\insrsid16470200\charrsid16269137 Speech Recognition}{
\lang1024\langfe1024\noproof\webhidden\insrsid16470200 \tab }{\field{\*\fldinst {\lang1024\langfe1024\noproof\webhidden\insrsid16470200  PAGEREF _Toc152896036 \\h }{\lang1024\langfe1024\noproof\insrsid8473020 {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f006300310035003200380039003600300033003600000076}}}{\fldrslt {\lang1024\langfe1024\noproof\webhidden\insrsid16470200 68}}}}}{
\b0\scaps0\fs24\lang1024\langfe1024\dbch\af11\noproof\langnp1033\langfenp1041\insrsid16470200 
\par }{\field\fldedit{\*\fldinst {\cs15\ul\cf2\lang1024\langfe1024\noproof\insrsid16470200\charrsid16269137  }{\lang1024\langfe1024\noproof\insrsid16470200 HYPERLINK \\l "_Toc152896037"}{
\cs15\ul\cf2\lang1024\langfe1024\noproof\insrsid16470200\charrsid16269137  }{\ul\cf2\lang1024\langfe1024\noproof\insrsid8473020\charrsid16269137 {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f006300310035003200380039003600300033003700000000}}}{\fldrslt {\cs15\ul\cf2\lang1024\langfe1024\noproof\insrsid16470200\charrsid16269137 Push-to-talk}{
\lang1024\langfe1024\noproof\webhidden\insrsid16470200 \tab }{\field{\*\fldinst {\lang1024\langfe1024\noproof\webhidden\insrsid16470200  PAGEREF _Toc152896037 \\h }{\lang1024\langfe1024\noproof\insrsid8473020 {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f006300310035003200380039003600300033003700000000}}}{\fldrslt {\lang1024\langfe1024\noproof\webhidden\insrsid16470200 69}}}}}{
\b0\scaps0\fs24\lang1024\langfe1024\dbch\af11\noproof\langnp1033\langfenp1041\insrsid16470200 
\par }{\field\fldedit{\*\fldinst {\cs15\ul\cf2\lang1024\langfe1024\noproof\insrsid16470200\charrsid16269137  }{\lang1024\langfe1024\noproof\insrsid16470200 HYPERLINK \\l "_Toc152896038"}{
\cs15\ul\cf2\lang1024\langfe1024\noproof\insrsid16470200\charrsid16269137  }{\ul\cf2\lang1024\langfe1024\noproof\insrsid8473020\charrsid16269137 {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f006300310035003200380039003600300033003800000000}}}{\fldrslt {\cs15\ul\cf2\lang1024\langfe1024\noproof\insrsid16470200\charrsid16269137 Other Microphone Stuff}{
\lang1024\langfe1024\noproof\webhidden\insrsid16470200 \tab }{\field{\*\fldinst {\lang1024\langfe1024\noproof\webhidden\insrsid16470200  PAGEREF _Toc152896038 \\h }{\lang1024\langfe1024\noproof\insrsid8473020 {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f006300310035003200380039003600300033003800000000}}}{\fldrslt {\lang1024\langfe1024\noproof\webhidden\insrsid16470200 70}}}}}{
\b0\scaps0\fs24\lang1024\langfe1024\dbch\af11\noproof\langnp1033\langfenp1041\insrsid16470200 
\par }\pard\plain \s16\qc \li0\ri0\sb360\sa360\widctlpar\tqr\tx8303\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \b\caps\fs22\ul\lang3081\langfe1033\cgrid\langnp3081\langfenp1033 {\field\fldedit{\*\fldinst {
\cs15\cf2\lang1024\langfe1024\noproof\insrsid16470200\charrsid16269137  }{\lang1024\langfe1024\noproof\insrsid16470200 HYPERLINK \\l "_Toc152896039"}{\cs15\cf2\lang1024\langfe1024\noproof\insrsid16470200\charrsid16269137  }{
\cf2\lang1024\langfe1024\noproof\insrsid8473020\charrsid16269137 {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f006300310035003200380039003600300033003900000000}}}{\fldrslt {
\cs15\cf2\lang1024\langfe1024\noproof\insrsid16470200\charrsid16269137 Screen}{\lang1024\langfe1024\noproof\webhidden\insrsid16470200 \tab }{\field{\*\fldinst {\lang1024\langfe1024\noproof\webhidden\insrsid16470200  PAGEREF _Toc152896039 \\h }{
\lang1024\langfe1024\noproof\insrsid8473020 {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f006300310035003200380039003600300033003900000000}}}{\fldrslt {\lang1024\langfe1024\noproof\webhidden\insrsid16470200 71}}}}}{
\b0\caps0\fs24\ulnone\lang1024\langfe1024\dbch\af11\noproof\langnp1033\langfenp1041\insrsid16470200 
\par }\pard\plain \s17\qc \li0\ri0\widctlpar\tqr\tx8303\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \b\scaps\fs22\lang3081\langfe1033\cgrid\langnp3081\langfenp1033 {\field\fldedit{\*\fldinst {
\cs15\ul\cf2\lang1024\langfe1024\noproof\insrsid16470200\charrsid16269137  }{\lang1024\langfe1024\noproof\insrsid16470200 HYPERLINK \\l "_Toc152896040"}{\cs15\ul\cf2\lang1024\langfe1024\noproof\insrsid16470200\charrsid16269137  }{
\ul\cf2\lang1024\langfe1024\noproof\insrsid8473020\charrsid16269137 {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f006300310035003200380039003600300034003000000000}}}{\fldrslt {
\cs15\ul\cf2\lang1024\langfe1024\noproof\insrsid16470200\charrsid16269137 Size}{\lang1024\langfe1024\noproof\webhidden\insrsid16470200 \tab }{\field{\*\fldinst {\lang1024\langfe1024\noproof\webhidden\insrsid16470200  PAGEREF _Toc152896040 \\h }{
\lang1024\langfe1024\noproof\insrsid8473020 {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f00630031003500320038003900360030003400300000000a}}}{\fldrslt {\lang1024\langfe1024\noproof\webhidden\insrsid16470200 71}}}}}{
\b0\scaps0\fs24\lang1024\langfe1024\dbch\af11\noproof\langnp1033\langfenp1041\insrsid16470200 
\par }{\field\fldedit{\*\fldinst {\cs15\ul\cf2\lang1024\langfe1024\noproof\insrsid16470200\charrsid16269137  }{\lang1024\langfe1024\noproof\insrsid16470200 HYPERLINK \\l "_Toc152896041"}{
\cs15\ul\cf2\lang1024\langfe1024\noproof\insrsid16470200\charrsid16269137  }{\ul\cf2\lang1024\langfe1024\noproof\insrsid8473020\charrsid16269137 {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f006300310035003200380039003600300034003100000000}}}{\fldrslt {\cs15\ul\cf2\lang1024\langfe1024\noproof\insrsid16470200\charrsid16269137 Position}{
\lang1024\langfe1024\noproof\webhidden\insrsid16470200 \tab }{\field{\*\fldinst {\lang1024\langfe1024\noproof\webhidden\insrsid16470200  PAGEREF _Toc152896041 \\h }{\lang1024\langfe1024\noproof\insrsid8473020 {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f006300310035003200380039003600300034003100000000}}}{\fldrslt {\lang1024\langfe1024\noproof\webhidden\insrsid16470200 71}}}}}{
\b0\scaps0\fs24\lang1024\langfe1024\dbch\af11\noproof\langnp1033\langfenp1041\insrsid16470200 
\par }{\field\fldedit{\*\fldinst {\cs15\ul\cf2\lang1024\langfe1024\noproof\insrsid16470200\charrsid16269137  }{\lang1024\langfe1024\noproof\insrsid16470200 HYPERLINK \\l "_Toc152896042"}{
\cs15\ul\cf2\lang1024\langfe1024\noproof\insrsid16470200\charrsid16269137  }{\ul\cf2\lang1024\langfe1024\noproof\insrsid8473020\charrsid16269137 {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f006300310035003200380039003600300034003200000000}}}{\fldrslt {\cs15\ul\cf2\lang1024\langfe1024\noproof\insrsid16470200\charrsid16269137 Plug & Play Monitor Stuff}{
\lang1024\langfe1024\noproof\webhidden\insrsid16470200 \tab }{\field{\*\fldinst {\lang1024\langfe1024\noproof\webhidden\insrsid16470200  PAGEREF _Toc152896042 \\h }{\lang1024\langfe1024\noproof\insrsid8473020 {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f006300310035003200380039003600300034003200000000}}}{\fldrslt {\lang1024\langfe1024\noproof\webhidden\insrsid16470200 72}}}}}{
\b0\scaps0\fs24\lang1024\langfe1024\dbch\af11\noproof\langnp1033\langfenp1041\insrsid16470200 
\par }{\field\fldedit{\*\fldinst {\cs15\ul\cf2\lang1024\langfe1024\noproof\insrsid16470200\charrsid16269137  }{\lang1024\langfe1024\noproof\insrsid16470200 HYPERLINK \\l "_Toc152896043"}{
\cs15\ul\cf2\lang1024\langfe1024\noproof\insrsid16470200\charrsid16269137  }{\ul\cf2\lang1024\langfe1024\noproof\insrsid8473020\charrsid16269137 {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f006300310035003200380039003600300034003300000000}}}{\fldrslt {\cs15\ul\cf2\lang1024\langfe1024\noproof\insrsid16470200\charrsid16269137 ScreenSaver stuff}{
\lang1024\langfe1024\noproof\webhidden\insrsid16470200 \tab }{\field{\*\fldinst {\lang1024\langfe1024\noproof\webhidden\insrsid16470200  PAGEREF _Toc152896043 \\h }{\lang1024\langfe1024\noproof\insrsid8473020 {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f006300310035003200380039003600300034003300000000}}}{\fldrslt {\lang1024\langfe1024\noproof\webhidden\insrsid16470200 72}}}}}{
\b0\scaps0\fs24\lang1024\langfe1024\dbch\af11\noproof\langnp1033\langfenp1041\insrsid16470200 
\par }{\field\fldedit{\*\fldinst {\cs15\ul\cf2\lang1024\langfe1024\noproof\insrsid16470200\charrsid16269137  }{\lang1024\langfe1024\noproof\insrsid16470200 HYPERLINK \\l "_Toc152896044"}{
\cs15\ul\cf2\lang1024\langfe1024\noproof\insrsid16470200\charrsid16269137  }{\ul\cf2\lang1024\langfe1024\noproof\insrsid8473020\charrsid16269137 {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f006300310035003200380039003600300034003400000000}}}{\fldrslt {\cs15\ul\cf2\lang1024\langfe1024\noproof\insrsid16470200\charrsid16269137 GlovePIE stuff}{
\lang1024\langfe1024\noproof\webhidden\insrsid16470200 \tab }{\field{\*\fldinst {\lang1024\langfe1024\noproof\webhidden\insrsid16470200  PAGEREF _Toc152896044 \\h }{\lang1024\langfe1024\noproof\insrsid8473020 {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f006300310035003200380039003600300034003400000000}}}{\fldrslt {\lang1024\langfe1024\noproof\webhidden\insrsid16470200 72}}}}}{
\b0\scaps0\fs24\lang1024\langfe1024\dbch\af11\noproof\langnp1033\langfenp1041\insrsid16470200 
\par }{\field\fldedit{\*\fldinst {\cs15\ul\cf2\lang1024\langfe1024\noproof\insrsid16470200\charrsid16269137  }{\lang1024\langfe1024\noproof\insrsid16470200 HYPERLINK \\l "_Toc152896045"}{
\cs15\ul\cf2\lang1024\langfe1024\noproof\insrsid16470200\charrsid16269137  }{\ul\cf2\lang1024\langfe1024\noproof\insrsid8473020\charrsid16269137 {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f006300310035003200380039003600300034003500000000}}}{\fldrslt {\cs15\ul\cf2\lang1024\langfe1024\noproof\insrsid16470200\charrsid16269137 Other Stuff}{
\lang1024\langfe1024\noproof\webhidden\insrsid16470200 \tab }{\field{\*\fldinst {\lang1024\langfe1024\noproof\webhidden\insrsid16470200  PAGEREF _Toc152896045 \\h }{\lang1024\langfe1024\noproof\insrsid8473020 {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f006300310035003200380039003600300034003500000000}}}{\fldrslt {\lang1024\langfe1024\noproof\webhidden\insrsid16470200 72}}}}}{
\b0\scaps0\fs24\lang1024\langfe1024\dbch\af11\noproof\langnp1033\langfenp1041\insrsid16470200 
\par }\pard\plain \s1\ql \li0\ri0\sb240\sa60\keepn\widctlpar\aspalpha\aspnum\faauto\outlinelevel0\adjustright\rin0\lin0\itap0\pararsid12010334 \b\f1\fs32\lang3081\langfe1033\kerning32\cgrid\langnp3081\langfenp1033 }}\pard\plain 
\s1\ql \li0\ri0\sb240\sa60\keepn\widctlpar\aspalpha\aspnum\faauto\outlinelevel0\adjustright\rin0\lin0\itap0\pararsid12010334 \b\f1\fs32\lang3081\langfe1033\kerning32\cgrid\langnp3081\langfenp1033 {\insrsid1983755 
\par }\pard \s1\ql \li0\ri0\sb240\sa60\keepn\widctlpar\aspalpha\aspnum\faauto\outlinelevel0\adjustright\rin0\lin0\itap0\pararsid12010334 {\insrsid1983755 \page 
\par }\pard \s1\ql \li0\ri0\sb240\sa60\keepn\widctlpar\aspalpha\aspnum\faauto\outlinelevel0\adjustright\rin0\lin0\itap0\pararsid12010334 {\insrsid12002879 {\*\bkmkstart _Toc152895947}GlovePIE Scripts{\*\bkmkend _Toc152895947}
\par }\pard\plain \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid12002879 \fs24\lang3081\langfe1033\cgrid\langnp3081\langfenp1033 {\insrsid12002879 Here is the syntax for GlovePIE scripts:
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid12002879 {\insrsid12002879 
\par }\pard\plain \s2\ql \li0\ri0\sb240\sa60\keepn\widctlpar\aspalpha\aspnum\faauto\outlinelevel1\adjustright\rin0\lin0\itap0\pararsid12002879 \b\i\f1\fs28\lang3081\langfe1033\cgrid\langnp3081\langfenp1033 {\insrsid12002879 {\*\bkmkstart _Toc152895948}
Commands and other Statements{\*\bkmkend _Toc152895948}
\par }\pard\plain \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid12002879 \fs24\lang3081\langfe1033\cgrid\langnp3081\langfenp1033 {\insrsid12002879 
\par }\pard \ql \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0\pararsid12002879 {\b\f1\fs20\insrsid12002879 Comments}{\f1\fs20\insrsid12002879 
\par }\pard \ql \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0\pararsid12002879 {\f1\fs20\insrsid12002879 
\par }\pard \ql \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0\pararsid12002879 {\f1\fs20\insrsid12002879 Comments are text which does nothing. They only help the human who is trying to read your script (usually you).
\par }\pard \ql \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0\pararsid12002879 {\f1\fs20\insrsid12002879 The computer ignores them.
\par 
\par Comments can have the following syntax:
\par 
\par }\pard \ql \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0\pararsid12002879 {\b\f2\fs20\insrsid12002879 //}{\f2\fs20\insrsid12002879  }{\i\f2\fs20\insrsid12002879 This is a comment}{\f2\fs20\insrsid12002879 
\par 
\par }{\b\f2\fs20\insrsid12002879 /*}{\f2\fs20\insrsid12002879  }{\i\f2\fs20\insrsid12002879 This is a multi-line comment
\par    It goes over multiple lines
\par    like this}{\f2\fs20\insrsid12002879   }{\b\f2\fs20\insrsid12002879 */
\par 
\par \rquote  }{\i\f2\fs20\insrsid12002879 This is a BASIC style comment
\par }{\b\i\f2\fs20\insrsid12002879\charrsid5667402 REM}{\i\f2\fs20\insrsid12002879  This is also a BASIC style comment
\par 
\par }{\b\i\f2\fs20\insrsid12002879\charrsid5667402 %}{\i\f2\fs20\insrsid12002879  This is a MATLAB style comment}{\i\f2\fs20\insrsid12002879\charrsid5667402 
\par }\pard \ql \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0\pararsid12002879 {\f1\fs20\insrsid12002879 
\par }{\b\f1\fs20\insrsid12002879 Assignment statements}{\f1\fs20\insrsid12002879 
\par 
\par The most common kind of statement in GlovePIE is the assignment statement. 
\par 
\par It has one of the following forward syntaxes:
\par 
\par }\pard \ql \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0\pararsid12002879 {\i\f2\fs20\insrsid12002879 LValue }{\f2\fs20\insrsid12002879  }{\b\f2\fs20\insrsid12002879 =}{\f2\fs20\insrsid12002879   }{\i\f2\fs20\insrsid12002879 expression }{
\f2\fs20\insrsid12002879 [ }{\b\f2\fs20\insrsid12002879 ; }{\f2\fs20\insrsid12002879 ]}{\i\f2\fs20\insrsid12002879 
\par 
\par LValue }{\b\f2\fs20\insrsid12002879 :=}{\i\f2\fs20\insrsid12002879  expression }{\f2\fs20\insrsid12002879 [ }{\b\f2\fs20\insrsid12002879 ; }{\f2\fs20\insrsid12002879 ]}{\i\f2\fs20\insrsid12002879 
\par }\pard \ql \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0\pararsid12002879 {\f1\fs20\insrsid12002879 
\par or the following backwards syntax:
\par 
\par }\pard \ql \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0\pararsid12002879 {\i\f2\fs20\insrsid12002879 expression}{\f2\fs20\insrsid12002879  }{\b\f2\fs20\insrsid12002879 => }{\i\f2\fs20\insrsid12002879 LValue }{\f2\fs20\insrsid12002879 [ }{
\b\f2\fs20\insrsid12002879 ; }{\f2\fs20\insrsid12002879 ]
\par }\pard \ql \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0\pararsid12002879 {\f1\fs20\insrsid12002879 
\par 
\par These statements all set the LValue to the value of the expression.
\par If it is inside an IF statement then it will always set the value.
\par If it is not inside an IF statement then it will ONLY set the LValue when the expression changes.
\par This means you can set a variable, such as a key, several times:
\par 
\par Ctrl = var.a
\par Ctrl = var.b
\par 
\par Which has a similar effect to:  Ctrl = var.a or var.b
\par 
\par }{\b\f1\fs20\insrsid12002879 IF statements
\par }{\f1\fs20\insrsid12002879 
\par Sometimes you will want to only do a set of commands when some condition is true.
\par 
\par You can do that with IF statements.
\par 
\par If statements can have one of the following syntaxes:
\par 
\par }\pard \ql \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0\pararsid12002879 {\b\f2\fs20\insrsid12002879 if}{\f2\fs20\insrsid12002879  }{\i\f2\fs20\insrsid12002879 condition}{\f2\fs20\insrsid12002879  }{\b\f2\fs20\insrsid12002879 then}{
\f2\fs20\insrsid12002879  }{\i\f2\fs20\insrsid12002879 statement}{\f2\fs20\insrsid12002879  [ }{\b\f2\fs20\insrsid12002879 ; }{\f2\fs20\insrsid12002879 ]
\par 
\par }{\b\f2\fs20\insrsid12002879 if}{\f2\fs20\insrsid12002879  }{\b\f2\fs20\insrsid12002879 ( }{\i\f2\fs20\insrsid12002879 condition }{\b\f2\fs20\insrsid12002879 )}{\f2\fs20\insrsid12002879  [}{\b\f2\fs20\insrsid12002879 then}{\f2\fs20\insrsid12002879 ]}{
\b\f2\fs20\insrsid12002879  }{\i\f2\fs20\insrsid12002879 statement }{\f2\fs20\insrsid12002879 [ }{\b\f2\fs20\insrsid12002879 ; }{\f2\fs20\insrsid12002879 ]
\par 
\par }{\b\f2\fs20\insrsid12002879 if}{\f2\fs20\insrsid12002879  }{\i\f2\fs20\insrsid12002879 condition}{\f2\fs20\insrsid12002879  [}{\b\f2\fs20\insrsid12002879 then}{\f2\fs20\insrsid12002879 ] [}{\b\f2\fs20\insrsid12002879 begin}{\f2\fs20\insrsid12002879 ] [}{
\b\f2\fs20\insrsid12002879  \{ }{\f2\fs20\insrsid12002879 ]}{\b\f2\fs20\insrsid12002879 
\par }{\f2\fs20\insrsid12002879   }{\i\f2\fs20\insrsid12002879 statement }{\f2\fs20\insrsid12002879 [ }{\b\f2\fs20\insrsid12002879 ; }{\f2\fs20\insrsid12002879 ]}{\i\f2\fs20\insrsid12002879 
\par   statement }{\f2\fs20\insrsid12002879 [ }{\b\f2\fs20\insrsid12002879 ; }{\f2\fs20\insrsid12002879 ]}{\i\f2\fs20\insrsid12002879 
\par }\pard \ql \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0\pararsid12002879 {\i\f2\fs20\insrsid12002879   ...}{\f2\fs20\insrsid12002879 
\par }\pard \ql \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0\pararsid12002879 {\f2\fs20\insrsid12002879 [}{\b\f2\fs20\insrsid12002879  \} }{\f2\fs20\insrsid12002879 ] [}{\b\f2\fs20\insrsid12002879 end }{\f2\fs20\insrsid12002879 [}{\b\f2\fs20\insrsid12002879 if}
{\f2\fs20\insrsid12002879 ]] [ }{\b\f2\fs20\insrsid12002879 ; }{\f2\fs20\insrsid12002879 ]
\par }\pard \ql \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0\pararsid12002879 {\f1\fs20\insrsid12002879 
\par }\pard \ql \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0\pararsid12002879 {\b\f2\fs20\insrsid12002879 if}{\f2\fs20\insrsid12002879  }{\i\f2\fs20\insrsid12002879 condition}{\f2\fs20\insrsid12002879  [}{\b\f2\fs20\insrsid12002879 then}{
\f2\fs20\insrsid12002879 ] [}{\b\f2\fs20\insrsid12002879 begin}{\f2\fs20\insrsid12002879 ] [}{\b\f2\fs20\insrsid12002879  \{ }{\f2\fs20\insrsid12002879 ]}{\b\f2\fs20\insrsid12002879 
\par }{\f2\fs20\insrsid12002879   }{\i\f2\fs20\insrsid12002879 statement }{\f2\fs20\insrsid12002879 [ }{\b\f2\fs20\insrsid12002879 ; }{\f2\fs20\insrsid12002879 ]}{\i\f2\fs20\insrsid12002879 
\par   statement }{\f2\fs20\insrsid12002879 [ }{\b\f2\fs20\insrsid12002879 ; }{\f2\fs20\insrsid12002879 ]}{\i\f2\fs20\insrsid12002879 
\par   ...}{\f2\fs20\insrsid12002879 
\par [}{\b\f2\fs20\insrsid12002879  \} }{\f2\fs20\insrsid12002879 ] [}{\b\f2\fs20\insrsid12002879 end}{\f2\fs20\insrsid12002879 ] }{\b\f2\fs20\insrsid12002879 else}{\f2\fs20\insrsid12002879  [}{\b\f2\fs20\insrsid12002879 begin}{\f2\fs20\insrsid12002879 ] [ }{
\b\f2\fs20\insrsid12002879 \{}{\f2\fs20\insrsid12002879  ]
\par   }{\i\f2\fs20\insrsid12002879 statement }{\f2\fs20\insrsid12002879 [ }{\b\f2\fs20\insrsid12002879 ; }{\f2\fs20\insrsid12002879 ]}{\i\f2\fs20\insrsid12002879 
\par   statement }{\f2\fs20\insrsid12002879 [ }{\b\f2\fs20\insrsid12002879 ; }{\f2\fs20\insrsid12002879 ]}{\i\f2\fs20\insrsid12002879 
\par   ...}{\f2\fs20\insrsid12002879 
\par [}{\b\f2\fs20\insrsid12002879  \} }{\f2\fs20\insrsid12002879 ] [}{\b\f2\fs20\insrsid12002879 end }{\f2\fs20\insrsid12002879 [}{\b\f2\fs20\insrsid12002879 if}{\f2\fs20\insrsid12002879 ]] [ }{\b\f2\fs20\insrsid12002879 ; }{\f2\fs20\insrsid12002879 ]
\par }\pard \ql \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0\pararsid12002879 {\f1\fs20\insrsid12002879 
\par 
\par }\pard \ql \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0\pararsid12002879 {\b\f2\fs20\insrsid12002879 if}{\f2\fs20\insrsid12002879  }{\i\f2\fs20\insrsid12002879 condition}{\f2\fs20\insrsid12002879  [}{\b\f2\fs20\insrsid12002879 then}{
\f2\fs20\insrsid12002879 ] [}{\b\f2\fs20\insrsid12002879 begin}{\f2\fs20\insrsid12002879 ] [}{\b\f2\fs20\insrsid12002879  \{ }{\f2\fs20\insrsid12002879 ]}{\b\f2\fs20\insrsid12002879 
\par }{\f2\fs20\insrsid12002879   }{\i\f2\fs20\insrsid12002879 statement }{\f2\fs20\insrsid12002879 [ }{\b\f2\fs20\insrsid12002879 ; }{\f2\fs20\insrsid12002879 ]}{\i\f2\fs20\insrsid12002879 
\par   statement }{\f2\fs20\insrsid12002879 [ }{\b\f2\fs20\insrsid12002879 ; }{\f2\fs20\insrsid12002879 ]}{\i\f2\fs20\insrsid12002879 
\par   ...}{\f2\fs20\insrsid12002879 
\par [}{\b\f2\fs20\insrsid12002879  \} }{\f2\fs20\insrsid12002879 ] [}{\b\f2\fs20\insrsid12002879 end}{\f2\fs20\insrsid12002879 ] (}{\b\f2\fs20\insrsid12002879 else}{\f2\fs20\insrsid12002879  }{\b\f2\fs20\insrsid12002879 if}{\f2\fs20\insrsid12002879 |}{
\b\f2\fs20\insrsid12002879 elseif}{\f2\fs20\insrsid12002879 ) }{\i\f2\fs20\insrsid12002879 condition2}{\f2\fs20\insrsid12002879  [}{\b\f2\fs20\insrsid12002879 then}{\f2\fs20\insrsid12002879 ] [}{\b\f2\fs20\insrsid12002879 begin}{\f2\fs20\insrsid12002879 
] [ }{\b\f2\fs20\insrsid12002879 \{}{\f2\fs20\insrsid12002879  ]
\par   }{\i\f2\fs20\insrsid12002879 statement }{\f2\fs20\insrsid12002879 [ }{\b\f2\fs20\insrsid12002879 ; }{\f2\fs20\insrsid12002879 ]}{\i\f2\fs20\insrsid12002879 
\par   statement }{\f2\fs20\insrsid12002879 [ }{\b\f2\fs20\insrsid12002879 ; }{\f2\fs20\insrsid12002879 ]}{\i\f2\fs20\insrsid12002879 
\par   ...}{\f2\fs20\insrsid12002879 
\par [}{\b\f2\fs20\insrsid12002879  \} }{\f2\fs20\insrsid12002879 ] [}{\b\f2\fs20\insrsid12002879 end}{\f2\fs20\insrsid12002879 ] (}{\b\f2\fs20\insrsid12002879 else}{\f2\fs20\insrsid12002879  }{\b\f2\fs20\insrsid12002879 if}{\f2\fs20\insrsid12002879 |}{
\b\f2\fs20\insrsid12002879 elseif}{\f2\fs20\insrsid12002879 ) }{\i\f2\fs20\insrsid12002879 condition3}{\f2\fs20\insrsid12002879  [}{\b\f2\fs20\insrsid12002879 then}{\f2\fs20\insrsid12002879 ] [}{\b\f2\fs20\insrsid12002879 begin}{\f2\fs20\insrsid12002879 
] [ }{\b\f2\fs20\insrsid12002879 \{}{\f2\fs20\insrsid12002879  ]
\par   }{\i\f2\fs20\insrsid12002879 statement }{\f2\fs20\insrsid12002879 [ }{\b\f2\fs20\insrsid12002879 ; }{\f2\fs20\insrsid12002879 ]}{\i\f2\fs20\insrsid12002879 
\par   statement }{\f2\fs20\insrsid12002879 [ }{\b\f2\fs20\insrsid12002879 ; }{\f2\fs20\insrsid12002879 ]}{\i\f2\fs20\insrsid12002879 
\par   ...}{\f2\fs20\insrsid12002879 
\par [}{\b\f2\fs20\insrsid12002879  \} }{\f2\fs20\insrsid12002879 ] [}{\b\f2\fs20\insrsid12002879 end}{\f2\fs20\insrsid12002879 ] }{\b\f2\fs20\insrsid12002879 else}{\f2\fs20\insrsid12002879  [}{\b\f2\fs20\insrsid12002879 begin}{\f2\fs20\insrsid12002879 ] [ }{
\b\f2\fs20\insrsid12002879 \{}{\f2\fs20\insrsid12002879  ]
\par   }{\i\f2\fs20\insrsid12002879 statement }{\f2\fs20\insrsid12002879 [ }{\b\f2\fs20\insrsid12002879 ; }{\f2\fs20\insrsid12002879 ]}{\i\f2\fs20\insrsid12002879 
\par }\pard \ql \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0\pararsid12002879 {\i\f2\fs20\insrsid12002879   statement }{\f2\fs20\insrsid12002879 [ }{\b\f2\fs20\insrsid12002879 ; }{\f2\fs20\insrsid12002879 ]}{\i\f2\fs20\insrsid12002879 
\par }\pard \ql \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0\pararsid12002879 {\i\f2\fs20\insrsid12002879   ...}{\f2\fs20\insrsid12002879 
\par [}{\b\f2\fs20\insrsid12002879  \} }{\f2\fs20\insrsid12002879 ] [}{\b\f2\fs20\insrsid12002879 end }{\f2\fs20\insrsid12002879 [}{\b\f2\fs20\insrsid12002879 if}{\f2\fs20\insrsid12002879 ]] [ }{\b\f2\fs20\insrsid12002879 ; }{\f2\fs20\insrsid12002879 ]
\par }\pard \ql \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0\pararsid12002879 {\f1\fs20\insrsid12002879 
\par }\pard \ql \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0\pararsid12002879 {\f2\fs20\insrsid12002879 
\par }\pard \ql \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0\pararsid12002879 {\f1\fs20\insrsid12002879 
\par }{\b\f1\fs20\insrsid12002879 WHILE loops
\par }{\f1\fs20\insrsid12002879 
\par While loops are NOT very useful in PIE because PIE is not a linear language.
\par }\pard \ql \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0\pararsid12002879 {\f1\fs20\insrsid12002879 A PIE script continuously loops through the entire script, even while IF statements are running in the background.
\par }\pard \ql \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0\pararsid12002879 {\f1\fs20\insrsid12002879 If you think you need a while loop then you are probably looking at the problem the wrong way.
\par 
\par Nevertheless, PIE does support while loops in the unlikely event that you do need them.
\par 
\par }\pard \ql \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0\pararsid12002879 {\f1\fs20\insrsid12002879 The entire while loop will be executed in one go. You can't use it to wait for some condition triggered elsewhere (yet). 
\par }\pard \ql \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0\pararsid12002879 {\f1\fs20\insrsid12002879 
\par The syntax is one of the following:
\par 
\par }\pard \ql \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0\pararsid12002879 {\b\f2\fs20\insrsid12002879 while}{\f2\fs20\insrsid12002879  }{\i\f2\fs20\insrsid12002879 condition}{\f2\fs20\insrsid12002879  }{\b\f2\fs20\insrsid12002879 do}{
\f2\fs20\insrsid12002879  }{\i\f2\fs20\insrsid12002879 statement }{\f2\fs20\insrsid12002879 [ }{\b\f2\fs20\insrsid12002879 ; }{\f2\fs20\insrsid12002879 ]
\par 
\par }{\b\f2\fs20\insrsid12002879 while}{\f2\fs20\insrsid12002879  }{\b\f2\fs20\insrsid12002879 ( }{\i\f2\fs20\insrsid12002879 condition }{\b\f2\fs20\insrsid12002879 )}{\f2\fs20\insrsid12002879  [}{\b\f2\fs20\insrsid12002879 do}{\f2\fs20\insrsid12002879 ]}{
\b\f2\fs20\insrsid12002879  }{\i\f2\fs20\insrsid12002879 statement }{\f2\fs20\insrsid12002879 [ }{\b\f2\fs20\insrsid12002879 ; }{\f2\fs20\insrsid12002879 ]
\par 
\par }{\b\f2\fs20\insrsid12002879 while}{\f2\fs20\insrsid12002879  }{\i\f2\fs20\insrsid12002879 condition}{\f2\fs20\insrsid12002879  [}{\b\f2\fs20\insrsid12002879 do}{\f2\fs20\insrsid12002879 ] [}{\b\f2\fs20\insrsid12002879 begin}{\f2\fs20\insrsid12002879 ] [}
{\b\f2\fs20\insrsid12002879  \{ }{\f2\fs20\insrsid12002879 ]}{\b\f2\fs20\insrsid12002879 
\par }{\f2\fs20\insrsid12002879   }{\i\f2\fs20\insrsid12002879 statement }{\f2\fs20\insrsid12002879 [ }{\b\f2\fs20\insrsid12002879 ; }{\f2\fs20\insrsid12002879 ]}{\i\f2\fs20\insrsid12002879 
\par   statement }{\f2\fs20\insrsid12002879 [ }{\b\f2\fs20\insrsid12002879 ; }{\f2\fs20\insrsid12002879 ]}{\i\f2\fs20\insrsid12002879 
\par   ...}{\f2\fs20\insrsid12002879 
\par [}{\b\f2\fs20\insrsid12002879  \} }{\f2\fs20\insrsid12002879 ] [}{\b\f2\fs20\insrsid12002879 end }{\f2\fs20\insrsid12002879 [}{\b\f2\fs20\insrsid12002879 while}{\f2\fs20\insrsid12002879 ]] [ }{\b\f2\fs20\insrsid12002879 ; }{\f2\fs20\insrsid12002879 ]

\par }\pard \ql \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0\pararsid12002879 {\f1\fs20\insrsid12002879 
\par }\pard \ql \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0\pararsid12002879 {\f1\fs20\insrsid12002879 If you make a mistake and create an infinite loop, then it will give up after a fifth of a second and speak "infinite loop".
\par }\pard \ql \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0\pararsid12002879 {\f1\fs20\insrsid12002879 
\par 
\par 
\par }{\b\f1\fs20\insrsid12002879 FOR loops
\par }{\f1\fs20\insrsid12002879 
\par For loops aren't as useful in PIE as they are in other languages, because PIE is not a linear language.
\par }\pard \ql \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0\pararsid12002879 {\f1\fs20\insrsid12002879 A PIE script continuously loops through the entire script, even while IF statements are running in the background.
\par }\pard \ql \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0\pararsid12002879 {\f1\fs20\insrsid12002879 If you think you need a for loop then you may be looking at the problem the wrong way.
\par 
\par }\pard \ql \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0\pararsid12002879 {\f1\fs20\insrsid12002879 The entire for loop will be executed in one go. You can't use it to wait for some condition triggered elsewhere (yet). 
\par }\pard \ql \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0\pararsid12002879 {\f1\fs20\insrsid12002879 
\par The syntax is one of the following:
\par 
\par }\pard \ql \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0\pararsid12002879 {\b\f2\fs20\insrsid12002879 for}{\f2\fs20\insrsid12002879  }{\i\f2\fs20\insrsid12002879 variable}{\f2\fs20\insrsid12002879  (}{\b\f2\fs20\insrsid12002879 =}{\f2\fs20\insrsid12002879 |
}{\b\f2\fs20\insrsid12002879 :=}{\f2\fs20\insrsid12002879 ) }{\i\f2\fs20\insrsid12002879 InitialValue }{\f2\fs20\insrsid12002879 (}{\b\f2\fs20\insrsid12002879 to}{\f2\fs20\insrsid12002879 |}{\b\f2\fs20\insrsid12002879 downto}{\f2\fs20\insrsid12002879 ) }{
\i\f2\fs20\insrsid12002879 FinalValue}{\f2\fs20\insrsid12002879  [}{\b\f2\fs20\insrsid12002879 step }{\i\f2\fs20\insrsid12002879 amount}{\f2\fs20\insrsid12002879 ] }{\b\f2\fs20\insrsid12002879 do}{\f2\fs20\insrsid12002879  }{\i\f2\fs20\insrsid12002879 
statement }{\f2\fs20\insrsid12002879 [ }{\b\f2\fs20\insrsid12002879 ; }{\f2\fs20\insrsid12002879 ]
\par }\pard \ql \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0\pararsid12002879 {\f2\fs20\insrsid12002879 
\par }\pard \ql \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0\pararsid12002879 {\b\f2\fs20\insrsid12002879 for}{\f2\fs20\insrsid12002879  }{\i\f2\fs20\insrsid12002879 variable}{\f2\fs20\insrsid12002879  (}{\b\f2\fs20\insrsid12002879 =}{\f2\fs20\insrsid12002879 |
}{\b\f2\fs20\insrsid12002879 :=}{\f2\fs20\insrsid12002879 ) }{\i\f2\fs20\insrsid12002879 InitialValue }{\f2\fs20\insrsid12002879 (}{\b\f2\fs20\insrsid12002879 to}{\f2\fs20\insrsid12002879 |}{\b\f2\fs20\insrsid12002879 downto}{\f2\fs20\insrsid12002879 ) }{
\i\f2\fs20\insrsid12002879 FinalValue}{\f2\fs20\insrsid12002879  [}{\b\f2\fs20\insrsid12002879 step }{\i\f2\fs20\insrsid12002879 amount}{\f2\fs20\insrsid12002879 ] [}{\b\f2\fs20\insrsid12002879 do}{\f2\fs20\insrsid12002879 ] [}{\b\f2\fs20\insrsid12002879 
begin}{\f2\fs20\insrsid12002879 ] [}{\b\f2\fs20\insrsid12002879  \{}{\f2\fs20\insrsid12002879  ]
\par }\pard \ql \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0\pararsid12002879 {\f2\fs20\insrsid12002879   }{\i\f2\fs20\insrsid12002879 statement }{\f2\fs20\insrsid12002879 [ }{\b\f2\fs20\insrsid12002879 ; }{\f2\fs20\insrsid12002879 ]}{
\i\f2\fs20\insrsid12002879 
\par   statement }{\f2\fs20\insrsid12002879 [ }{\b\f2\fs20\insrsid12002879 ; }{\f2\fs20\insrsid12002879 ]}{\i\f2\fs20\insrsid12002879 
\par   ...}{\f2\fs20\insrsid12002879 
\par [}{\b\f2\fs20\insrsid12002879  \} }{\f2\fs20\insrsid12002879 ] [}{\b\f2\fs20\insrsid12002879 end }{\f2\fs20\insrsid12002879 [}{\b\f2\fs20\insrsid12002879 for}{\f2\fs20\insrsid12002879 ]]
\par 
\par }{\b\f2\fs20\insrsid12002879 for}{\f2\fs20\insrsid12002879  }{\b\f2\fs20\insrsid12002879 ( }{\i\f2\fs20\insrsid12002879 initialization }{\b\f2\fs20\insrsid12002879 ; }{\i\f2\fs20\insrsid12002879 condition}{\b\f2\fs20\insrsid12002879  ;}{
\b\i\f2\fs20\insrsid12002879  }{\i\f2\fs20\insrsid12002879 increment }{\b\f2\fs20\insrsid12002879 )}{\f2\fs20\insrsid12002879  [}{\b\f2\fs20\insrsid12002879 do}{\f2\fs20\insrsid12002879 ]}{\b\f2\fs20\insrsid12002879  }{\i\f2\fs20\insrsid12002879 
statement }{\f2\fs20\insrsid12002879 [ }{\b\f2\fs20\insrsid12002879 ; }{\f2\fs20\insrsid12002879 ]
\par 
\par }{\b\f2\fs20\insrsid12002879 for}{\f2\fs20\insrsid12002879  }{\b\f2\fs20\insrsid12002879 ( }{\i\f2\fs20\insrsid12002879 initialization }{\b\f2\fs20\insrsid12002879 ; }{\i\f2\fs20\insrsid12002879 condition}{\b\f2\fs20\insrsid12002879  ;}{
\b\i\f2\fs20\insrsid12002879  }{\i\f2\fs20\insrsid12002879 increment }{\b\f2\fs20\insrsid12002879 )}{\f2\fs20\insrsid12002879  [}{\b\f2\fs20\insrsid12002879 do}{\f2\fs20\insrsid12002879 ] [}{\b\f2\fs20\insrsid12002879 begin}{\f2\fs20\insrsid12002879 ] [}{
\b\f2\fs20\insrsid12002879  \{}{\f2\fs20\insrsid12002879  ]
\par   }{\i\f2\fs20\insrsid12002879 statement }{\f2\fs20\insrsid12002879 [ }{\b\f2\fs20\insrsid12002879 ; }{\f2\fs20\insrsid12002879 ]}{\i\f2\fs20\insrsid12002879 
\par   statement }{\f2\fs20\insrsid12002879 [ }{\b\f2\fs20\insrsid12002879 ; }{\f2\fs20\insrsid12002879 ]}{\i\f2\fs20\insrsid12002879 
\par   ...}{\f2\fs20\insrsid12002879 
\par }\pard \ql \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0\pararsid12002879 {\f2\fs20\insrsid12002879 [}{\b\f2\fs20\insrsid12002879  \} }{\f2\fs20\insrsid12002879 ] [}{\b\f2\fs20\insrsid12002879 end }{\f2\fs20\insrsid12002879 [}{\b\f2\fs20\insrsid12002879 for
}{\f2\fs20\insrsid12002879 ]]
\par }\pard \ql \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0\pararsid12002879 {\f2\fs20\insrsid12002879 
\par }\pard \ql \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0\pararsid12002879 {\f1\fs20\insrsid12002879 If you make a mistake and create an infinite loop, then it will give up after a fifth of a second and speak "infinite loop".
\par }\pard \ql \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0\pararsid12002879 {\f1\fs20\insrsid12002879 
\par }{\b\f1\fs20\insrsid12002879 Wait command
\par }{\f1\fs20\insrsid12002879 
\par Wait commands are for use in macros. Everything inside an IF statement is considered a macro.
\par }\pard \ql \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0\pararsid12002879 {\f1\fs20\insrsid12002879 A wait command will pause only the macro it is inside of, while the rest of the script will keep going in the background.
\par If you have nested if statements inside each other, then it will only pause the innermost if statement.}{\f1\fs20\insrsid14955642  So don\rquote t use it inside an if statement which is already inside an if statement itself.}{\f1\fs20\insrsid12002879 

\par }\pard \ql \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0\pararsid12002879 {\f1\fs20\insrsid12002879 
\par The syntax is either:
\par 
\par }\pard \ql \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0\pararsid12002879 {\b\f1\fs20\insrsid12002879 wait}{\f1\fs20\insrsid12002879  }{\i\f1\fs20\insrsid12002879 duration }{\f2\fs20\insrsid12002879 [ }{\b\f2\fs20\insrsid12002879 ; }{
\f2\fs20\insrsid12002879 ]}{\f1\fs20\insrsid12002879 
\par }\pard \ql \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0\pararsid12002879 {\f1\fs20\insrsid12002879 
\par }\pard \ql \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0\pararsid12002879 {\b\f1\fs20\insrsid12002879 wait( }{\i\f1\fs20\insrsid12002879 duration }{\b\f1\fs20\insrsid12002879 ) }{\f2\fs20\insrsid12002879 [ }{\b\f2\fs20\insrsid12002879 ; }{
\f2\fs20\insrsid12002879 ]}{\f1\fs20\insrsid12002879 
\par }\pard \ql \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0\pararsid12002879 {\f1\fs20\insrsid12002879 
\par }\pard \ql \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0\pararsid12002879 {\f1\fs20\insrsid12002879 You should normally specify the units for the duration. Valid units are: milliseconds (ms), seconds (s), minutes, hours, days.
\par }\pard \ql \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0\pararsid12002879 {\f1\fs20\insrsid12002879 
\par eg.  
\par wait 100 ms
\par wait 1 second
\par wait(500 milliseconds);
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid12002879 {\insrsid12002879 
\par }\pard \ql \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0\pararsid12002879 {\b\f1\fs20\insrsid12002879\charrsid12002879 Increment statements}{\b\f1\fs20\insrsid12002879 
\par }\pard \ql \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0\pararsid12002879 {\b\f1\fs20\insrsid12002879 
\par }{\f1\fs20\insrsid12002879 You can add one to something using one of these syntaxes:
\par 
\par }\pard \ql \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0\pararsid12002879 {\f1\fs20\insrsid12002879 var.x++
\par }\pard \ql \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0\pararsid12002879 {\f1\fs20\insrsid12002879 ++var.x
\par Inc(var.x)
\par These are commands, not functions like in C. So you can\rquote t set something else to equal var.x++.
\par 
\par You can subtract one from something like this:
\par 
\par var.x--
\par --var.x}{\f1\fs20\insrsid12002879\charrsid12002879 
\par }{\f1\fs20\insrsid12002879 Dec(var.x)
\par 
\par }{\b\f1\fs20\insrsid12002879\charrsid12002879 SHR and SHL statements
\par }{\f1\fs20\insrsid12002879 
\par You can shift a value\rquote s bits to the left or right with the SHR and SHL commands:
\par eg.
\par 
\par shr var.x, 1
\par 
\par }{\b\f1\fs20\insrsid14955642 Say command}{\b\f1\fs20\insrsid12002879 
\par }{\b\f1\fs20\insrsid14955642 
\par }{\f1\fs20\insrsid14955642 You can use the Say command to make GlovePIE speak:
\par 
\par Say \'93hello world\'94
\par 
\par or
\par 
\par Say(\'93hello world\'94)}{\f1\fs20\insrsid14955642\charrsid14955642 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid12002879 {\insrsid12002879 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid12002879 {\b\insrsid14955642\charrsid14955642 Other Commands}{\b\insrsid14955642 
\par }{\insrsid14955642 
\par The following other commands also exist:
\par 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid14955642 {\insrsid14955642 ExitProgram, ExitPIE, 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid14955642 {\insrsid14955642 Execute}{\insrsid9053514 (filename)}{\insrsid14955642 , Chain}{\insrsid9053514 (filename)}{\insrsid14955642 ,
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid12002879 {\insrsid14955642 Display}{\insrsid9053514 (text)}{\insrsid14955642 , 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid14955642 {\insrsid14955642 AddCode}{\insrsid9053514 (text)}{\insrsid14955642 , }{\insrsid14955642\charrsid14955642 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid12002879 {\insrsid14955642 ControlPanel, ControlPanelKeyboard, ControlPanelJoystick, Control
PanelMouse, ControlPanelP5, ControlPanelPPJoy, ControlPanelSpeech, ControlPanelMidi, ControlPanelDisplay,
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid12002879 {\insrsid14955642 
\par PlaySound}{\insrsid9053514 (filename)}{\insrsid14955642 ,
\par Beep}{\insrsid9053514 ([freq, duration])}{\insrsid14955642 , BeepAsterisk, BeepExclamation, BeepHand, BeepQuestion, BeepDefault,
\par 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid12002879 {\insrsid14955642 FlashPieWindow, HidePie, ShowPie, MinimizePie, MaximizePie, RestorePie, UnMinimizePie, UnMaximizePie, 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid12002879 {\insrsid14955642 
\par Press}{\insrsid9053514 (x)}{\insrsid14955642 , Release}{\insrsid9053514 (x)}{\insrsid14955642 , Toggle}{\insrsid9053514 (x)}{\insrsid14955642 ,
\par 
\par Type}{\insrsid9053514 (text)}{\insrsid14955642 , TypeUnicode}{\insrsid9053514 (text)}{\insrsid14955642 ,
\par 
\par SendOsc}{\insrsid9053514 (ip, port, address, [p1, p2, p3\'85])}{\insrsid14955642 , BroadcastOsc}{\insrsid9053514 (port, address, [p1, p2, p3\'85])}{\insrsid14955642 
\par }{\insrsid14955642\charrsid14955642 
\par }\pard\plain \s2\ql \li0\ri0\sb240\sa60\keepn\widctlpar\aspalpha\aspnum\faauto\outlinelevel1\adjustright\rin0\lin0\itap0\pararsid12483605 \b\i\f1\fs28\lang3081\langfe1033\cgrid\langnp3081\langfenp1033 {\insrsid12483605 {\*\bkmkstart _Toc152895949}
Functions{\*\bkmkend _Toc152895949}
\par }\pard\plain \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid12483605 \fs24\lang3081\langfe1033\cgrid\langnp3081\langfenp1033 {\insrsid12483605 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid12483605 {\insrsid12483605 Here are some of the functions that exist in GlovePIE}{\insrsid12483605\charrsid12483605 
\par }\pard \ql \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0\pararsid12483605 {\f1\fs20\insrsid12483605 
\par }{\b\f1\fs20\insrsid12483605 Trigonometry Functions
\par }\pard \ql \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0\pararsid12483605 {\b\f1\fs20\insrsid12483605 
\par }{\f1\fs20\insrsid12483605 All angles are measured in degrees by default.
\par The following trigonometry functions are implemented:
\par 
\par Standard trig functions: sin, cos, tan, sec, cosec, cotan
\par Hyperbolic trig functions: SinH, CosH, TanH, SecH, CosecH, CotH
\par 
\par Inverse trig functions: aSin, aCos, aTan, aSec, aCosec, aCotan
\par Inverse Hyperbolic trig functions: aSinH, aCosH, aTanH, aSecH, aCosecH, aCotanH
\par 
\par 2D inverse tan function: atan2
\par 
\par }{\b\f1\fs20\insrsid12483605 Rounding Functions}{\f1\fs20\insrsid12483605 
\par 
\par These functions preserve the units of their parameters.
\par 
\par ceil: Rounds towards infinity
\par floor: Rounds towards negative infinity
\par trunc, int: Rounds towards zero
\par round: Rounds towards nearest integer.  .5 rounds to nearest even number (Bankers' Rounding)
\par 
\par frac: Returns signed fractional component. eg  Frac(-1.32) = -0.32
\par 
\par RoundTo(x, digits): If digits is negative, rounds to that many decimal places using Banker's Rounding
\par If digits is positive, rounds to that power of ten using Banker's Rounding.
\par 
\par }\pard \ql \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0\pararsid12483605 {\f1\fs20\insrsid12483605 SimpleRoundTo(x [, digits]): Same as RoundTo except 0.5 always rounds up. Unfortunately -1.5 rounds up to 1.
\par }\pard \ql \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0\pararsid12483605 {\f1\fs20\insrsid12483605 digits defaults to -2 (meaning 2 decimal places).
\par }\pard \ql \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0\pararsid12483605 {\f1\fs20\insrsid12483605 
\par }{\b\f1\fs20\insrsid12483605 Sign Functions}{\f1\fs20\insrsid12483605 
\par 
\par Sign: returns the sign of a number. 1 if it is positive, 0 if it is zero, -1 if it is negative
\par Abs: returns the modulus or absolute value. Removes the sign of a number. Preserves units.
\par 
\par }{\b\f1\fs20\insrsid12483605 Exponential and Square Root Functions
\par 
\par }{\f1\fs20\insrsid12483605 Raising things to the power of something:
\par }{\b\f1\fs20\insrsid12483605 
\par }{\f1\fs20\insrsid12483605 sqr(x): caculates x^2}{\b\f1\fs20\insrsid12483605 
\par }{\f1\fs20\insrsid12483605 sqrt(x): calculates the square root of x.   x^(1/2)
\par power(x,y): calculates x^y
\par intPower(x,y): calculates x^y where x and y are integers (the result is not an integer if y is negative)
\par exp(x): calculates e^x.  e is 2.71828. The derivative of e^x is e^x.
\par Ldexp(s,p): calculates s * (2^p)
\par 
\par Poly(x, a0, [a1, [a2, [a3, [a4, [a5, [a6]]]]]]): returns a0 + a1*x + a2*(x^2) + a3*(x^3) + a4*(x^4) + ...
\par 
\par 
\par Logarithms (undoing raising something to some power):
\par 
\par Log10(x): returns the number you have to raise 10 to the power of, in order to get x.  eg. Log10(1000) = 3
\par Log2(x): returns the number you have to raise 2 to the power of, in order to get x.  eg. Log2(256) = 8
\par }\pard \ql \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0\pararsid12483605 {\f1\fs20\insrsid12483605 LogN(N, x): returns the number you have to raise N to the power of, in order to get x.  eg. LogN(10, 1000) = 3
\par }\pard \ql \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0\pararsid12483605 {\f1\fs20\insrsid12483605 Ln(x): returns the number you have to raise e (2.71828) to the power of, in order to get x
\par LnXP1(x): the same as above, but for x+1 instead of x
\par }\pard \ql \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0\pararsid12483605 {\f1\fs20\insrsid12483605 
\par }\pard \ql \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0\pararsid12483605 {\b\f1\fs20\insrsid12483605 Comparison functions}{\f1\fs20\insrsid12483605 
\par 
\par IsZero(x): returns true if x is zero
\par IsInfinite(x): returns true if x is infinite
\par IsNaN(x): returns true if x is not a number
\par 
\par SameValue(a, b [, epsilon]): returns true if a and b are the same, or differ by no more than epsilon
\par InSet(x,a,b,c,d,e,f,g,...): returns true if x matches one of the values following it.
\par 
\par max(a,b): returns the maximum of two values. Preserves units.
\par min(a,b): returns the minimum of two values. Preserves units.
\par 
\par }{\b\f1\fs20\insrsid12483605 Range functions}{\f1\fs20\insrsid12483605 
\par 
\par EnsureRange(x, a, b): Returns the closest value to x which is within the range [a, b]. Preserves units.
\par InRange(x, a, b): Returns true if x is within the range [a, b].
\par 
\par }\pard \ql \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0\pararsid12483605 {\f1\fs20\insrsid12483605 MapRange(x, a, b, c, d): Returns value x converted from the ran
ge [a, b] to the range [c, d].  Values outside the original range will map to the appropriate values outside the new range.
\par }\pard \ql \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0\pararsid12483605 {\f1\fs20\insrsid12483605 
\par }\pard \ql \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0\pararsid12483605 {\f1\fs20\insrsid12483605 EnsureMapRange(x, a, b, c, d): The same as MapRange except values outside the range are mapped to the closest values inside the range.
\par }\pard \ql \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0\pararsid12483605 {\f1\fs20\insrsid12483605 
\par }{\b\f1\fs20\insrsid12483605 Random functions}{\f1\fs20\insrsid12483605 
\par 
\par Random: Returns a random fractional number between 0 and 1.
\par Random(n): Returns a random whole number between 0 and n-1.
\par RandomRange(a,b): Returns a random whole number between a and b.
\par }\pard \ql \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0\pararsid12483605 {\f1\fs20\insrsid12483605 RandG(mean, StandDev): Returns a random number from gaussian distribution around mean. Preserves units.
\par }\pard \ql \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0\pararsid12483605 {\f1\fs20\insrsid12483605 
\par }\pard \ql \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0\pararsid12483605 {\b\f1\fs20\insrsid12483605 Ordinal functions}{\f1\fs20\insrsid12483605 
\par 
\par odd(n): Returns true if n is odd
\par pred(n): Returns n-1
\par succ(n): Returns n+1
\par 
\par }{\b\f1\fs20\insrsid12483605 Date/Time functions}{\f1\fs20\insrsid12483605 
\par 
\par Now: Current time and date (in days since December 30, 1899)
\par Time: Current time (in fractions of a day)
\par Date: Current date (in days since December 30, 1899)
\par 
\par Tomorrow: Tomorrow's date (in days since December 30, 1899)
\par Yesterday: Yesterday's date (in days since December 30, 1899)
\par 
\par CurrentYear: Current year of the Gregorian calendar (in years).
\par 
\par DateOf(x): Returns the date part of the date and time in x (in days since December 30, 1899)
\par TimeOf(x): Returns the time part of the date and time in x (in fractions of a day)
\par 
\par 
\par Dayofthemonth(x), dayoftheweek(x), dayoftheyear(x), dayofweek(x), 
\par Daysbetween(x, y),
\par Daysinamonth(x, y), daysinayear(x), daysinmonth(x), daysinyear(x), DaySpan(x, y),
\par HourOfTheDay(x), HourOfTheMonth(x), HourOfTheWeek(x), HourOfTheYear(x),
\par HoursBetween(x, y), HourSpan(x, y),
\par IncDay(x, [y])
\par }\pard \ql \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0\pararsid12483605 {\f1\fs20\insrsid1983755 
\par }\pard\plain \s3\ql \li0\ri0\sb240\sa60\keepn\widctlpar\aspalpha\aspnum\faauto\outlinelevel2\adjustright\rin0\lin0\itap0\pararsid1983755 \b\f1\fs26\lang3081\langfe1033\cgrid\langnp3081\langfenp1033 {\insrsid1983755 Temporal functions
\par }\pard\plain \ql \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0\pararsid12483605 \fs24\lang3081\langfe1033\cgrid\langnp3081\langfenp1033 {\f1\fs20\insrsid1983755 
\par }\pard \ql \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0\pararsid12483605 {\b\f1\fs20\insrsid1983755\charrsid9053514 Smooth(x, [ExtraFrames, [DeadbandDistance]])
\par }{\f1\fs20\insrsid1983755 
\par }\pard \ql \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0\pararsid12483605 {\f1\fs20\insrsid1983755 Smooths out the value of x by averaging with the previous ExtraFrames frames. If it hasn\rquote t changed by more than DeadbandDistance it doesn\rquote 
t count as changed at all. By default DeadbandDistance is 0.
\par }\pard \ql \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0\pararsid12483605 {\f1\fs20\insrsid1983755 
\par }{\b\f1\fs20\insrsid1983755\charrsid9053514 Pressed(x), Clicked(x), SingleClicked(x), DoubleClicked(x)
\par }{\f1\fs20\insrsid1983755 
\par Returns true or false.
\par 
\par }{\b\f1\fs20\insrsid1983755\charrsid9053514 HeldDown(x, MinTime)
\par }{\f1\fs20\insrsid1983755 
\par Returns true if x has been held down for at least MinTime.
\par 
\par }{\b\f1\fs20\insrsid1983755\charrsid9053514 KeepDown(x, MinTime)
\par }{\f1\fs20\insrsid1983755 
\par Keeps the result being true after x has stopped being true, until MinTime is up.
\par }\pard\plain \s2\ql \li0\ri0\sb240\sa60\keepn\widctlpar\aspalpha\aspnum\faauto\outlinelevel1\adjustright\rin0\lin0\itap0\pararsid12483605 \b\i\f1\fs28\lang3081\langfe1033\cgrid\langnp3081\langfenp1033 {\insrsid12483605 {\*\bkmkstart _Toc152895950}
Operators{\*\bkmkend _Toc152895950}
\par }\pard\plain \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid12483605 \fs24\lang3081\langfe1033\cgrid\langnp3081\langfenp1033 {\insrsid12483605 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid12483605 {\insrsid12483605 T
here are lots of different operators you can use in GlovePIE. All of them allow you to mix different units together and rely on GlovePIE to automatically convert the units.
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid12483605 {\insrsid12483605 
\par }{\b\insrsid12483605\charrsid12483605 a + b}{\b\insrsid12483605 
\par }{\b\insrsid353053 a plus b
\par }{\insrsid12483605 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid12483605 {\insrsid12483605 If a and b are numbers they will be added together. If a and b are
 strings of text then they will be concatenated together. If a and b are true/false values then they must both be true for it to be true (the same as \'93and\'94)}{\insrsid13568773 . If a is a vector, but b isn\rquote 
t, it will extend the length of the vector without changing the direction (not implemented yet).}{\insrsid12483605 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid12483605 {\insrsid12483605 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid12483605 {\b\insrsid12483605\charrsid12483605 a and b}{\b\insrsid12483605 
\par }{\b\insrsid353053 a but b
\par }{\b\insrsid12483605 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid12483605 {\insrsid12483605 
Will only be true if a is true and b is also true (anything greater than 0.5 or less than -0.5 is considered true). This only does logical and. If you want to AND the binary bits together, use }{\b\insrsid12483605 &}{\insrsid12483605  instead.
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid12483605 {\insrsid13568773 
\par }{\b\insrsid12483605 a & b}{\insrsid12483605 
\par 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid12483605 {\insrsid12483605 If a and b are numbers, then it will only include in the answer the binary bits that are 1 in bot}{\insrsid353053 
h a and b for that position. If a and b are not whole numbers, they will be rounded off first. If a and b are strings, they will be concatenated.}{\insrsid12483605\charrsid12483605 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid12483605 {\insrsid12483605 
\par }{\b\insrsid12483605\charrsid12483605 a }{\b\insrsid12483605 -}{\b\insrsid12483605\charrsid12483605  b}{\b\insrsid12483605 
\par }{\b\insrsid353053 a minus b
\par }{\insrsid12483605 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid12483605 {\insrsid12483605 
If a and b are numbers they will be subtracted. If a and b are true/false values then they must both be true for it to be true (the same as \'93and\'94).}{\insrsid13590556  If a is a vector, but b isn\rquote 
t, it will decrease the length of the vector without changing the direction (not implemented yet).}{\insrsid12483605 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid12483605 {\insrsid353053 
\par }{\b\insrsid353053 -b}{\insrsid353053 
\par 
\par Will swap the sign of b.
\par 
\par }{\b\insrsid353053 not b}{\insrsid353053 
\par 
\par Will be true if b is false, and vice-versa}{\insrsid353053\charrsid353053 
\par }{\insrsid12483605\charrsid12483605 
\par }{\b\insrsid13590556 a x b
\par }{\b\insrsid12483605\charrsid12483605 a * b}{\b\insrsid12483605 
\par }{\b\insrsid353053 a times b
\par a multiplied by b
\par }{\b\insrsid13590556 a cross b
\par }{\insrsid12483605 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid12483605 {\insrsid12483605 Multiplies a and b together.}{\insrsid13590556  If a and b are vectors it will do cross multiplication.}{\insrsid12483605 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid12483605 {\insrsid13590556 
\par }{\b\insrsid13590556\charrsid13590556 a . b}{\b\insrsid13590556 
\par a dot b
\par 
\par }{\insrsid13590556 If a and b are vectors it will do dot multiplication. Otherwise it does normal multiplication.}{\insrsid13590556\charrsid13590556 
\par }{\insrsid12483605\charrsid12483605 
\par }{\b\insrsid12483605 a / b
\par }{\b\insrsid353053 a divided by b}{\insrsid353053 
\par }{\insrsid12483605 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid12483605 {\insrsid12483605 If a and b are numbers they will be divided properly, not like in C where you always get a whole number. 1 / 2 will give you 0.5. If yo
u want integer division, you need to use }{\b\insrsid12483605 div}{\insrsid12483605  instead. If a and b are true/false values, then it will be true if either of them are true (the same as \'93}{\b\insrsid12483605\charrsid12483605 or}{\insrsid12483605 
\'94)
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid12483605 {\insrsid12483605 
\par }{\b\insrsid353053\charrsid353053 a div b}{\b\insrsid12483605 
\par }{\b\insrsid353053 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid12483605 {\insrsid353053 Will give you the whole-number answer of a / b minus the remainder. IMPORTANT: a and b do }{\b\insrsid353053 not}{\insrsid353053 
 have to be integers. They can have decimals. 7.5 div 3.5 gives you the answer 2.
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid12483605 {\insrsid353053 
\par }{\b\insrsid353053 a mod b}{\insrsid353053 
\par }{\b\insrsid353053 a % b
\par 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid12483605 {\insrsid353053 These both give you the remainder of a divided by b. a, b, and the answer may all contain decimals. They don\rquote 
t have to be whole numbers. For example, 7.5 mod 3.5 gives you 0.5.
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid12483605 {\insrsid353053 
\par }{\b\insrsid353053 a or b
\par }{\b\insrsid13568773 either a or b}{\insrsid13568773 
\par }{\insrsid353053 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid12483605 {\insrsid353053 This is true if either a or b is true, or both. This only does logical or. If you want to manipulate the binary bits, use }{\b\insrsid353053 
|}{\insrsid353053  instead.
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid12483605 {\insrsid13568773 
\par }{\b\insrsid13568773 neither a nor b}{\insrsid13568773 
\par 
\par This is true if both a and b are false.}{\insrsid13568773\charrsid13568773 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid12483605 {\insrsid353053 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid12483605 {\b\insrsid353053 a | b}{\insrsid353053 
\par 
\par This includes in the answer the binary bits that are 1 in a or b or both.}{\insrsid353053\charrsid353053 
\par }{\insrsid353053 
\par }{\b\insrsid353053 a xor b}{\insrsid353053 
\par This is true if a or b is true, }{\b\insrsid353053\charrsid353053 but not both}{\b\insrsid353053 .}{\insrsid353053 
\par 
\par }{\b\insrsid13568773 a ^ b
\par a ** b}{\insrsid13568773 
\par 
\par This is a raised to the power of b. a}{\super\insrsid13568773 b}{\insrsid13568773 
\par 
\par }{\b\insrsid13568773 a ^^ b
\par 
\par }{\insrsid13568773 This is a tetration b. Don\rquote t ask.
\par 
\par }{\b\insrsid13568773 b!}{\insrsid13568773 
\par 
\par This is b factorial. b + (b-1) + (b-2) + \'85 + 1
\par 
\par }{\b\insrsid13568773 b!!}{\insrsid13568773 
\par 
\par This is b double-factorial. IT IS NOT (b!)!
\par 
\par }{\b\insrsid13568773 a shl b
\par }{\b\insrsid3112173 a << b}{\insrsid3112173 
\par }{\insrsid13568773 
\par This is the binary bits of a shifted to the left b bits. It is the same as a * (2^b).
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid12483605 {\insrsid13568773 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid12483605 {\b\insrsid13568773 a shr b
\par }{\b\insrsid3112173 a >> b}{\insrsid3112173 
\par }{\insrsid13568773 
\par This is the binary bits of a shifted to the right b bits. It is the same as a div (2^b).
\par }{\insrsid13568773\charrsid13568773 
\par }{\b\insrsid13568773 |b|
\par 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid12483605 {\insrsid13568773 This is the modulus}{\insrsid13590556  (otherwise known as absolute value)}{\insrsid13568773  of b, if b is a number, or the }{
\insrsid13590556 length of b if b is a vector, or the derivative of b if b is a matrix.}{\insrsid13568773 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid12483605 {\insrsid13590556 
\par }{\b\insrsid13590556 a}{\b\insrsid13590556\charrsid13590556 %}{\b\insrsid13590556 
\par 
\par }{\insrsid13590556 This is a divided by 100.
\par 
\par }{\b\insrsid13590556 a% of b
\par a % of b
\par 
\par }{\insrsid13590556 This is a divided by 100 then multiplied by b.
\par 
\par }{\b\insrsid14042496 a = b}{\b\insrsid13590556 
\par }{\b\insrsid14042496 a == b
\par 
\par }{\insrsid14042496 True if a and b are the same (once converted to the same type and units).
\par 
\par }{\b\insrsid14042496 a != b
\par a <> b
\par a isn\rquote t b
\par a is not b
\par 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid12483605 {\insrsid14042496 True if a and b are different (once converted to the same type and units).
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid12483605 {\insrsid14042496 
\par }{\b\insrsid14042496\charrsid1983755 a ~= b
\par }{\insrsid14042496 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid12483605 {\insrsid14042496 True if a and b are approxima
tely equal. If they are numbers, they must be within PIE.Epsilon of each other, when converted to the units of b. If they are strings then they must be the same except for case and leading and trailing spaces.
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid12483605 {\insrsid14042496 
\par }{\b\insrsid14042496\charrsid1983755 a !~= b
\par a ~!= b
\par }{\insrsid14042496 
\par True if a and b are not approximately equal.
\par 
\par }{\b\insrsid14042496\charrsid1983755 a > b}{\b\insrsid14042496 
\par }{\insrsid14042496 
\par True if a is greater than b. False if a is equal to b.
\par 
\par }{\b\insrsid14042496\charrsid1983755 a < b
\par }{\insrsid14042496 
\par True if a is less than b. False if a is equal to b.
\par 
\par }{\b\insrsid14042496\charrsid1983755 a >= b
\par }{\insrsid14042496 
\par True if a is greater than or equal to b
\par 
\par }{\b\insrsid14042496\charrsid1983755 a <= b
\par }{\insrsid14042496\charrsid14042496 
\par }{\insrsid9175199 T}{\insrsid14042496 rue if a is less than or equal to b
\par 
\par }{\b\insrsid9175199\charrsid1983755 b <= a <= c}{\b\insrsid14042496\charrsid1983755 
\par }{\b\insrsid9175199\charrsid1983755 c >= a >= b
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid12483605 {\insrsid9175199 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid12483605 {\insrsid9175199 True if a is between b and c inclusive.
\par 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid9175199 {\b\insrsid9175199\charrsid1983755 b < a < c
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid9175199 {\b\insrsid9175199\charrsid1983755 c > a > b
\par }{\insrsid9175199 
\par True if a is between b and c, but is not b or c.
\par 
\par }{\b\insrsid9175199\charrsid1983755 b <= a < c
\par c > a >= b
\par }{\insrsid9175199 
\par True if a is between b and c, but is not c.
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid12483605 {\insrsid9175199\charrsid14042496 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid9175199 {\b\insrsid9175199\charrsid1983755 b < a <= c
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid9175199 {\b\insrsid9175199\charrsid1983755 c >= a > b
\par }{\insrsid9175199 
\par True if a is between b and c, but is not b.
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid12483605 {\insrsid13590556 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid12483605 {\insrsid1983755\charrsid13568773 
\par }{\insrsid353053\charrsid353053 
\par 
\par }{\insrsid12483605 
\par }{\insrsid12483605\charrsid12483605 
\par 
\par }\pard\plain \s1\ql \li0\ri0\sb240\sa60\keepn\widctlpar\aspalpha\aspnum\faauto\outlinelevel0\adjustright\rin0\lin0\itap0\pararsid12002879 \b\f1\fs32\lang3081\langfe1033\kerning32\cgrid\langnp3081\langfenp1033 {\insrsid12002879 \page }{\insrsid12010334 
{\*\bkmkstart _Toc152895951}GlovePIE GUI}{\insrsid14898071 {\*\bkmkend _Toc152895951}
\par }\pard\plain \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \fs24\lang3081\langfe1033\cgrid\langnp3081\langfenp1033 {\insrsid12010334 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 {\insrsid12010334 GlovePIE has three tabs. The first tab is the script tab, and shows the name of the script file. You can write any script you want here.}{\insrsid4354912 
 The third tab is the Variables tab which only works while your script is running, and shows the values of all the variables.}{\insrsid12010334 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 {\insrsid12010334 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 {\insrsid12010334 The second tab is the G}{\insrsid4354912 UI tab. Click on it to modify the file using a Graphical User Interface }{\insrsid14176006 (GUI) }{\insrsid4354912 
instead of scripting.}{\insrsid4081528  Once upon a time, the GUI was just }{\insrsid3363284 for MIDI}{\insrsid4081528 , but not anymore!}{\insrsid3363284  Now it works for everything.}{\insrsid4081528  Well, most of the main things.}{\insrsid12010334 

\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 {\insrsid4354912 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 {\insrsid4081528 You can also swap tabs by using the View menu. In the View menu it is still called the }{\ul\insrsid4081528\charrsid4081528 M}{\insrsid4081528 
IDI GUI, but that is just so that the Alt+V, M, shortcut key isn\rquote t changed.
\par }\pard\plain \s2\ql \li0\ri0\sb240\sa60\keepn\widctlpar\aspalpha\aspnum\faauto\outlinelevel1\adjustright\rin0\lin0\itap0\pararsid1604366 \b\i\f1\fs28\lang3081\langfe1033\cgrid\langnp3081\langfenp1033 {\insrsid1604366 {\*\bkmkstart _Toc152895952}Overview
{\*\bkmkend _Toc152895952}
\par }\pard\plain \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \fs24\lang3081\langfe1033\cgrid\langnp3081\langfenp1033 {\insrsid1604366 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 {\insrsid4081528 The GUI is what is called a two-way tool, much like the graphical f
orm designer in Delphi, C#, or Visual Basic. It is an alternate view of the same program, which you can edit with either the GUI, or the script editor, or both, swapping between the two as much as you want. Some complex script elements, and anything insid
e IF statements, will just not appear in the GUI. The GUI won\rquote t delete those things, it just won\rquote 
t let you see them or change them until you switch back to the script view. The Script view will show everything you created in the GUI or the script editor and let you modify everything to your heart\rquote s content.}{\insrsid10758058 
 But all lines which are similar to \'93}{\insrsid4081528 something = something}{\insrsid10758058 \'94}{\insrsid4081528 , or }{\insrsid10758058 \'93}{\insrsid4081528 something => something}{\insrsid10758058 \'94}{\insrsid4081528  will be shown in the GUI.
}{\insrsid10758058  Even lines like \'93x++\'94 will be shown in the GUI (although they don\rquote t make a lot of sense outsid}{\insrsid15742361 e IF}{\insrsid10758058  statements).}{\insrsid4081528 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 {\insrsid4081528 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 {\insrsid4081528 
You can create, load or save your whole program using only the GUI. It will switch back to script view when you run it, but that is just because the GUI window chews through lots of memory and CPU. But you can switch straight back to
 GUI to edit it again. You don\rquote t need to do any scripting to create GlovePIE scripts, or even to load other people\rquote s.
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 {\insrsid4081528 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 {\insrsid14176006 The left hand side of the GUI is a list of all the output values that can be set with the GUI. This includes MIDI output, keyboard emulat
ion, mouse emulation, joystick emulation (using PPJoy), and fake mouse cursors.}{\insrsid3363284 
 Output values that have already been set to something, are marked with an asterisk (*). If you need to click on the drop-down button of a drop-down box to see the items that have been set, then it will be marked with the drop-down symbol (-v-).}{
\insrsid4354912 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 {\insrsid14176006 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 {\insrsid14176006 The right hand side of the GUI specifies what }{\insrsid3363284 input values }{\insrsid14176006 you wan}{\insrsid3363284 
t to set the selected value to. You can set it to a constant value or mathematical expression by typing it in, or you can choose parts of the input devices from drop-down boxes.}{\insrsid4081528 
 You can also choose what range you want the input to be mapped from or to, or, if you are more advanced, what functions you want to apply to it.}{\insrsid14176006 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 {\insrsid3363284 
\par }\pard\plain \s2\ql \li0\ri0\sb240\sa60\keepn\widctlpar\aspalpha\aspnum\faauto\outlinelevel1\adjustright\rin0\lin0\itap0\pararsid1604366 \b\i\f1\fs28\lang3081\langfe1033\cgrid\langnp3081\langfenp1033 {\insrsid1604366 {\*\bkmkstart _Toc152895953}
Output Device{\*\bkmkend _Toc152895953}
\par }\pard\plain \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \fs24\lang3081\langfe1033\cgrid\langnp3081\langfenp1033 {\insrsid1604366 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 {\insrsid3363284 You need to start from the top of the
 left hand side. The top drop-down box lists all the MIDI output devices followed by the keyboard, mouse, joystick and fake cursors. The MIDI output devices show both the number and the name. Choose a device from this list. You can see which output device
s have something set in them already by the * symbol.}{\insrsid11822458  
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 {\insrsid11822458 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 {\insrsid11822458 If you want to use MIDI then I recommend choosing \'93Default MIDI\'94. }{\insrsid15555354 
That way you can choose later what the default MIDI device will be, without having to change your whole file. Another alternative is to
 choose the MIDI Mapper device. The MIDI Mapper was a complicated MIDI mapping device in Windows 3.1, but these days it is a mere shadow of its former self. From Windows 95 onwards the MIDI Mapper is just a single setting in Control Panel which chooses wh
ich MIDI device MIDI playback should go to. You can go to the MIDI page of Control Panel, by choosing MIDI from the CP-Settings menu in GlovePIE. }{\insrsid1604366 Unlike \'93Default MIDI\'94, which can be changed by GlovePIE settings, }{\insrsid15555354 
the Mapper is considered }{\insrsid1604366 to be }{\insrsid15555354 just another }{\insrsid1604366 MIDI device. If you need to output to more than one MIDI device at once, choose the MIDI device in this box, otherwise use the default.}{\insrsid3363284 

\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 {\insrsid12010334 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 {\insrsid3363284 If you chose Key}{\insrsid11822458 board or Mouse then the two drop-down boxes underneath will disappear. That is because you can only emul
ate the combined system mouse or combined system keyboard, not multiple keyboards or multiple mice individually. Very few programs distinguish between multiple mice or keyboards. Also GlovePIE doesn\rquote 
t group the keyboard and mouse values into categories yet. There is only a single category for all the keyboard and mouse values.}{\insrsid3363284 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 {\insrsid12010334 
\par }\pard\plain \s2\ql \li0\ri0\sb240\sa60\keepn\widctlpar\aspalpha\aspnum\faauto\outlinelevel1\adjustright\rin0\lin0\itap0\pararsid1604366 \b\i\f1\fs28\lang3081\langfe1033\cgrid\langnp3081\langfenp1033 {\insrsid1604366 {\*\bkmkstart _Toc152895954}
Channel Box{\*\bkmkend _Toc152895954}
\par }\pard\plain \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \fs24\lang3081\langfe1033\cgrid\langnp3081\langfenp1033 {\insrsid1604366 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 {\insrsid11822458 
If you chose PPJoy Virtual Joystick, or Fake Cursor, then there will be a drop-down box underneath, listing all 16 possible Virtual Joysticks numbered 1 to 16, or listin
g 17 possible fake cursors, numbered from 0 to 16. You need to install PPJoy, and configure PPJoy to add virtual joysticks before they will work in GlovePIE, but they will all be listed here whether they have been installed or not.
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 {\insrsid11822458 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 {\insrsid11822458 If you chose a MIDI out
put device, then there will be two drop-down boxes underneath. The first drop-down box lists all the MIDI channels, plus the default channel. }{\insrsid16392086 You should choose \'93Default Channel\'94
 so you can change it later without changing your entire file, unless you need to output on multiple channels at once. }{\insrsid1604366 
There are 16 channels, but if your device uses General Midi then Channel 10 will always be percussion. But all the other channels have their own individual settings, such as instrument}{\insrsid16392086  and volume, and each channel ca
n play multiple notes at once (of the same instrument).
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 {\insrsid16392086 
\par }\pard\plain \s2\ql \li0\ri0\sb240\sa60\keepn\widctlpar\aspalpha\aspnum\faauto\outlinelevel1\adjustright\rin0\lin0\itap0\pararsid16392086 \b\i\f1\fs28\lang3081\langfe1033\cgrid\langnp3081\langfenp1033 {\insrsid16392086 {\*\bkmkstart _Toc152895955}
Category Box{\*\bkmkend _Toc152895955}
\par }\pard\plain \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid16392086 \fs24\lang3081\langfe1033\cgrid\langnp3081\langfenp1033 {\insrsid16392086 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid16392086 {\insrsid16392086 The category box only appears for MIDI. Everything else just uses a single category, because I was lazy. }{\insrsid7885733 
So skip to the next section if you don\rquote t care about MIDI. }{\insrsid16392086 But because MIDI has so many things you can set, I have grouped them into categories. There is obviously no default category, because that makes no sense.
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid16392086 {\insrsid16392086 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid16392086 {\insrsid16392086 You need to choose a category. The first category you should choose should probably be \'93Other Controls\'94}{\insrsid6360730 
 because it allows you to change general settings, like which device is the default, and which channel is the default.}{\insrsid16392086 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid16392086 {\insrsid16392086 
\par }{\insrsid6360730 The categories are:
\par }\pard\plain \s3\ql \li0\ri0\sb240\sa60\keepn\widctlpar\aspalpha\aspnum\faauto\outlinelevel2\adjustright\rin0\lin0\itap0\pararsid6360730 \b\f1\fs26\lang3081\langfe1033\cgrid\langnp3081\langfenp1033 {\insrsid6360730 14-bit Controls 0..31
\par }\pard\plain \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid6360730 \fs24\lang3081\langfe1033\cgrid\langnp3081\langfenp1033 {\insrsid7885733 
These set main parameters such as volume. They apply separately to each channel. }{\insrsid6360730 These are the combined Coarse an
d Fine controls for the first 32 MIDI controls. The controls in this category will set both the coarse and fine settings at once, giving you 14-bits of precision (16 thousand possible levels). This is the recommended way to set these controls}{
\insrsid12803364 , (unless your MIDI system interprets the coarse and fine values as separate things)}{\insrsid6360730 . Some of them have pre-defined names and functions, some of them don\rquote t. But you can set any of them that you like.}{
\insrsid12803364  It will set the coarse value using cc0 to cc31 messages and it will set the fine value using cc32 to cc63 messages.}{\insrsid6360730 
\par }\pard\plain \s3\ql \li0\ri0\sb240\sa60\keepn\widctlpar\aspalpha\aspnum\faauto\outlinelevel2\adjustright\rin0\lin0\itap0\pararsid12803364 \b\f1\fs26\lang3081\langfe1033\cgrid\langnp3081\langfenp1033 {\insrsid12803364 7-bit Controls 64..95}{
\insrsid12803364\charrsid6360730 
\par }\pard\plain \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid16392086 \fs24\lang3081\langfe1033\cgrid\langnp3081\langfenp1033 {\insrsid12803364 
Other controls have no separate coarse and fine settings. These ones just have a single value for 7 bits of precision (only 128 possible levels). This is the only way to set these controls
. These are often used for pedals, buttons and things like that. They can control effects like Hold, Sustenuto, Portamento, Legato, Chorus, AttackTime, etc.}{\insrsid16392086 
\par }\pard\plain \s3\ql \li0\ri0\sb240\sa60\keepn\widctlpar\aspalpha\aspnum\faauto\outlinelevel2\adjustright\rin0\lin0\itap0\pararsid7885733 \b\f1\fs26\lang3081\langfe1033\cgrid\langnp3081\langfenp1033 {\insrsid7885733 7-bit Controls 96..127}{
\insrsid12803364 
\par }\pard\plain \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid16392086 \fs24\lang3081\langfe1033\cgrid\langnp3081\langfenp1033 {\insrsid7885733 These controls don\rquote 
t really do anything much. I think most of the later ones actually correspond to other MIDI messages, like All Notes Off, so it doesn\rquote t make much sense to set them. But you can set all these ones anyway if you want, just for completeness.
\par }\pard\plain \s3\ql \li0\ri0\sb240\sa60\keepn\widctlpar\aspalpha\aspnum\faauto\outlinelevel2\adjustright\rin0\lin0\itap0\pararsid7885733 \b\f1\fs26\lang3081\langfe1033\cgrid\langnp3081\langfenp1033 {\insrsid7885733 Coarse Controls 0..31
\par }\pard\plain \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid16392086 \fs24\lang3081\langfe1033\cgrid\langnp3081\langfenp1033 {\insrsid7885733 These controls set only the coarse half of the MIDI 
value. Since the coarse half is 128 times as significant as the fine half, sometimes it makes sense to only use the coarse half. Some devices (particularly software ones) use the coarse and fine values separately for different things. The coarse control i
s set with cc0 to cc31 messages.
\par }\pard\plain \s3\ql \li0\ri0\sb240\sa60\keepn\widctlpar\aspalpha\aspnum\faauto\outlinelevel2\adjustright\rin0\lin0\itap0\pararsid7885733 \b\f1\fs26\lang3081\langfe1033\cgrid\langnp3081\langfenp1033 {\insrsid7885733 Fine Controls 0..31
\par }\pard\plain \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid7885733 \fs24\lang3081\langfe1033\cgrid\langnp3081\langfenp1033 {\insrsid7885733 
These controls set only the fine half of the MIDI value. Some devices (particularly software ones) use the coarse and fine values separately for different things. The coarse control is set with cc0 to cc31 messages.
\par }\pard\plain \s3\ql \li0\ri0\sb240\sa60\keepn\widctlpar\aspalpha\aspnum\faauto\outlinelevel2\adjustright\rin0\lin0\itap0\pararsid7885733 \b\f1\fs26\lang3081\langfe1033\cgrid\langnp3081\langfenp1033 {\insrsid7885733 Other Controls
\par }\pard\plain \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid7885733 \fs24\lang3081\langfe1033\cgrid\langnp3081\langfenp1033 {\insrsid7885733 This is where you set other important controls. }{\insrsid12134953 
It includes the important DeviceIn, DeviceOut, and DefaultChannel defaults. Set DeviceOut to a constant value of the MIDI output device you want to use. Set DefaultChannel to a constant value of the channel you want to use. 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid7885733 {\insrsid12134953 Of the other controls, s}{\insrsid7885733 
ome apply to the channel like what instrument to use, what the overall channel pressure is, and what the Pitch Wheel is set to. Others apply to every channel, and use RPN messages, like Master Tuning, }{\insrsid12134953 and }{\insrsid7885733 
Pitch Bend Range.}{\insrsid12134953 
 Others use SysEx messages, like GeneralMidi, and SetupFile. You can set SetupFile to the name of a SysEx file (in quotation marks) that you want to send to the MIDI device at the start of your program. This is useful for all SysEx messages GlovePIE doesn
\rquote t support.}{\insrsid7885733 
\par }\pard\plain \s3\ql \li0\ri0\sb240\sa60\keepn\widctlpar\aspalpha\aspnum\faauto\outlinelevel2\adjustright\rin0\lin0\itap0\pararsid12134953 \b\f1\fs26\lang3081\langfe1033\cgrid\langnp3081\langfenp1033 {\insrsid12134953 Percussion
\par }\pard\plain \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid7885733 \fs24\lang3081\langfe1033\cgrid\langnp3081\langfenp1033 {\insrsid12134953 
These are the drum beats, symbol clashes, and other percussion sounds supported by General MIDI devices. These don\rquote t change the instrument, they just turn a specific sound on or off. They }{\insrsid2778173 all play on 
channel 10, no matter which channel you set them on, so it is best to set them on the default channel. You should set your MIDI device to General MIDI mode before using these, by setting GeneralMidi to true in \'93Other Controls\'94.}{\insrsid12134953 

\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid7885733 {\insrsid2778173 
\par }\pard\plain \s3\ql \li0\ri0\sb240\sa60\keepn\widctlpar\aspalpha\aspnum\faauto\outlinelevel2\adjustright\rin0\lin0\itap0\pararsid2778173 \b\f1\fs26\lang3081\langfe1033\cgrid\langnp3081\langfenp1033 {\insrsid2778173 Notes Octaves 0..4
\par }\pard\plain \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid2778173 \fs24\lang3081\langfe1033\cgrid\langnp3081\langfenp1033 {\insrsid2778173 These ar
e all the notes below Middle C. Octave 0 being the lowest (If you need a note deeper than C 0, use pitch bend). The octaves go from C to B. The notes are either true or false, representing On and Off. Setting a note to On this way will be like you hit the
 key with a velocity of 64/127 (50%). Setting a note to Off this way will be like you released the key with a velocity of 50%. You can also turn notes On and Off by setting their velocities using the categories below, if you want more control.}{
\insrsid8734553  If it is channel 10 on a General MIDI device then these play percussion rather than notes.}{\insrsid2778173 
\par }\pard\plain \s3\ql \li0\ri0\sb240\sa60\keepn\widctlpar\aspalpha\aspnum\faauto\outlinelevel2\adjustright\rin0\lin0\itap0\pararsid2778173 \b\f1\fs26\lang3081\langfe1033\cgrid\langnp3081\langfenp1033 {\insrsid2778173 Notes Octaves 5..10
\par }\pard\plain \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid2778173 \fs24\lang3081\langfe1033\cgrid\langnp3081\langfenp1033 {\insrsid8734553 These are all the notes from}{\insrsid2778173  Middle C}{\insrsid8734553 
 (octave 5) upwards}{\insrsid2778173 . Octave 10 is the highest, but it is incomplete, since MIDI devices only support 128 keys (If you need notes higher than G 10, use pitch bend). }{\insrsid8734553 See above for the velocities.}{\insrsid2778173 
\par }\pard\plain \s3\ql \li0\ri0\sb240\sa60\keepn\widctlpar\aspalpha\aspnum\faauto\outlinelevel2\adjustright\rin0\lin0\itap0\pararsid8734553 \b\f1\fs26\lang3081\langfe1033\cgrid\langnp3081\langfenp1033 {\insrsid8734553 
Note Velocity o0..o4 and Note Velocity o5..o10
\par }\pard\plain \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid8734553 \fs24\lang3081\langfe1033\cgrid\langnp3081\langfenp1033 {\insrsid8734553 
These are the key hit velocities for all the notes. Set the hit velocity to 0 to switch off the note (although the release velocity will always be 50% in GlovePIE). Set the hit veloc}{\insrsid16663892 ity to anything else to turn on}{\insrsid8734553 
 the note with that velocity.}{\insrsid9312423  This is the better way to turn notes on and off when you need fine control over how hard they are struck.}{\insrsid8734553\charrsid8734553 
\par }\pard\plain \s3\ql \li0\ri0\sb240\sa60\keepn\widctlpar\aspalpha\aspnum\faauto\outlinelevel2\adjustright\rin0\lin0\itap0\pararsid9312423 \b\f1\fs26\lang3081\langfe1033\cgrid\langnp3081\langfenp1033 {\insrsid9312423 
Note Pressure o0..o4 and Note Pressure o5..o10
\par }\pard\plain \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid9312423 \fs24\lang3081\langfe1033\cgrid\langnp3081\langfenp1033 {\insrsid9312423 
These are the key aftertouch, or note pressure. It is how much force you want holding down the key after it has been triggered.}{\insrsid4156345  Most devices probably don\rquote t support this.}{\insrsid2778173 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid9312423 {\insrsid4156345 
\par }\pard\plain \s2\ql \li0\ri0\sb240\sa60\keepn\widctlpar\aspalpha\aspnum\faauto\outlinelevel1\adjustright\rin0\lin0\itap0\pararsid15083971 \b\i\f1\fs28\lang3081\langfe1033\cgrid\langnp3081\langfenp1033 {\insrsid7172758 {\*\bkmkstart _Toc152895956}
The Item List}{\insrsid4156345 {\*\bkmkend _Toc152895956}
\par }\pard\plain \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid7172758 \fs24\lang3081\langfe1033\cgrid\langnp3081\langfenp1033 {\insrsid7172758 Once you have chosen which }{\insrsid934633 
device, channel and category you want, there will be a list of items you can set for that category of that device. Items that have already been set to something will have an asterisk beside them.}{\insrsid7172758 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid7172758 {\insrsid336356 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid7172758 {\insrsid336356 When you have clicked on something here, the right hand side will show what it is set to, so you ca
n modify it, or show a blank form you can fill in. Make sure you click Apply before you choose another item in this list, or whatever changes you made will be lost.
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid7172758 {\insrsid336356 
\par }\pard\plain \s2\ql \li0\ri0\sb240\sa60\keepn\widctlpar\aspalpha\aspnum\faauto\outlinelevel1\adjustright\rin0\lin0\itap0\pararsid336356 \b\i\f1\fs28\lang3081\langfe1033\cgrid\langnp3081\langfenp1033 {\insrsid336356 {\*\bkmkstart _Toc152895957}
The Format Box{\*\bkmkend _Toc152895957}
\par }\pard\plain \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid336356 \fs24\lang3081\langfe1033\cgrid\langnp3081\langfenp1033 {\insrsid336356 The first thing on the right hand side is the Format box. You don\rquote 
t have to change it. It is purely a matter of preference. For some MIDI items}{\insrsid14632155 , and all non-MIDI}{\insrsid336356  items, the format box will be locked to a particular format.
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid336356 {\insrsid336356 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid336356 {\insrsid336356 The format box specifies what format you want to specify the value in. If you prefer to think of the MIDI v
alue as being between 0 and 127 then choose that. If you prefer to think of the MIDI value as being between 0 and 1 then choose that. Or choose any other format. Whichever one you choose is going to be how you have to specify the value in the boxes undern
eath, unless you use the \'93Convert From Source Range\'94 button. Even if you choose \'93Convert From Source Range\'94, you still need to use the format you choose in the \'93Limit Output to Range\'94 box.
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid336356 {\insrsid14632155 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid336356 {\insrsid14632155 But whatever format you specify the value in, the computer will lat
er convert it into the correct format for MIDI messages when it sends them.
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid336356 {\insrsid14632155 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid336356 {\insrsid14632155 The default format is 0..1, which means you specify everything as a fraction between 0 and 1. Like 0.75 for 75%.
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid336356 {\insrsid14632155 
\par }\pard\plain \s2\ql \li0\ri0\sb240\sa60\keepn\widctlpar\aspalpha\aspnum\faauto\outlinelevel1\adjustright\rin0\lin0\itap0\pararsid14632155 \b\i\f1\fs28\lang3081\langfe1033\cgrid\langnp3081\langfenp1033 {\insrsid14632155 {\*\bkmkstart _Toc152895958}
Limit Output To Range{\*\bkmkend _Toc152895958}
\par }\pard\plain \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid336356 \fs24\lang3081\langfe1033\cgrid\langnp3081\langfenp1033 {\insrsid14632155 If you never want to set the value to the m
aximum or minimum possible, but just want to adjust it within a certain range, then tick this \'93Limit Output To Range\'94
 check-box. When it is checked two more boxes appear specifying the maximum and minimum values (in whatever format you chose). So if you chose the format 0..1, but you don\rquote 
t want the volume or whatever you are setting to go above 90%, check the box and put 0.9 in the maximum box. On the other hand, if you chose the format 0..127, then you need to put 114.3 in the box instead to stop it going 
over 90%. Note that decimals are allowed, and often necessary. The maximum and minimum values you choose here are what the source range will be converted to, if you choose \'93Convert From Source Range\'94 below.
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid336356 {\insrsid14632155 You don\rquote t need to choose anything here, most of the time.
\par 
\par }\pard\plain \s2\ql \li0\ri0\sb240\sa60\keepn\widctlpar\aspalpha\aspnum\faauto\outlinelevel1\adjustright\rin0\lin0\itap0\pararsid15145772 \b\i\f1\fs28\lang3081\langfe1033\cgrid\langnp3081\langfenp1033 {\insrsid15145772 {\*\bkmkstart _Toc152895959}
Input Source}{\insrsid14632155 {\*\bkmkend _Toc152895959}
\par }\pard\plain \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid336356 \fs24\lang3081\langfe1033\cgrid\langnp3081\langfenp1033 {\insrsid15145772 In the \'93Input Source\'94
 area, you need to choose where the input is going to come from, that you are using to contr}{\insrsid12730882 ol the output. Or you can choose}{\insrsid15145772  a constant, or a mathematical expression}{\insrsid12730882 
 that you want the output to be set to.}{\insrsid15145772 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid336356 {\insrsid12730882 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid336356 {\insrsid12730882 If you want to set it to a constant value, just type it into the \'93Part of device, or numeric value, or expression\'94
 box. Or choose a constant from the drop down box. If you want to set it to a string (text) value, then you need to put it in quotation marks. For example, file names need quotation marks around them. Then you just need to click \'93Apply\'94.
\par }\pard\plain \s3\ql \li0\ri0\sb240\sa60\keepn\widctlpar\aspalpha\aspnum\faauto\outlinelevel2\adjustright\rin0\lin0\itap0\pararsid12730882 \b\f1\fs26\lang3081\langfe1033\cgrid\langnp3081\langfenp1033 {\insrsid12730882 Input Device
\par }\pard\plain \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid336356 \fs24\lang3081\langfe1033\cgrid\langnp3081\langfenp1033 {\insrsid12730882 
On the other hand, if you want to use a device to control the output, then choose which kind of device in the first drop-down box called \'93Input Device\'94. The \'93Remote\'94
 device only works on COM Port 2, and only if you enable it from the Troubleshooter menu, and only for a few remotes, like the one that comes with the Pinnacle PCTV card. The Screen and Window devices only return constant values, and aren\rquote t muc
h use in most cases. But the other input devices work for most occasions.
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid336356 {\insrsid12730882 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid336356 {\insrsid12730882 If you don\rquote 
t want to use any of the devices in the list, just leave it blank, and type what value you want to set it to in the next box.
\par }\pard\plain \s3\ql \li0\ri0\sb240\sa60\keepn\widctlpar\aspalpha\aspnum\faauto\outlinelevel2\adjustright\rin0\lin0\itap0\pararsid11217177 \b\f1\fs26\lang3081\langfe1033\cgrid\langnp3081\langfenp1033 {\insrsid11217177 Number}{\insrsid12730882 
\par }\pard\plain \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid11217177 \fs24\lang3081\langfe1033\cgrid\langnp3081\langfenp1033 {\insrsid11217177 Once you have selected a device, the 
number box appears next to it. You normally leave it blank to just use the default device, but if you want to use a specific joystick, or a specific glove, or a specific mouse or keyboard, then choose the number here, starting from 1 being the first devic
e
 of that kind. Sometimes there is a special 0 device for keyboards or mouses, which represents a virtual software device used for Remote Desktop in Windows XP Pro. MIDI device 0 is the MIDI Mapper, which you can set in Control Panel. But normal devices ar
e numbered starting from 1, with 1 being the first device of that type.
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid11217177 {\insrsid11217177 Reading multiple mice and keyboards independently is currently only implemented on Windows XP (or possibly Vista, which isn\rquote 
t tested). To use all the mice combined into 1 virtual mouse, like Windows normally does, just leave the number box blank. The same applies to keyboards. }{\insrsid11217177\charrsid11217177 
\par }\pard\plain \s3\ql \li0\ri0\sb240\sa60\keepn\widctlpar\aspalpha\aspnum\faauto\outlinelevel2\adjustright\rin0\lin0\itap0\pararsid10816170 \b\f1\fs26\lang3081\langfe1033\cgrid\langnp3081\langfenp1033 {\insrsid10816170 
Part of device, or numeric value, or expression}{\insrsid12730882 
\par }\pard\plain \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid285219 \fs24\lang3081\langfe1033\cgrid\langnp3081\langfenp1033 {\insrsid285219 
In this box will be a list of all the different parts or values that device supports. It may be a long list, and some of them make no sense to use, so choose wisely.
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid285219 {\insrsid285219 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid285219 {\insrsid285219 You can also type something in the box. For example, to use a glove gesture to control something, you should select \'93Glove\'94
 in the device box, and type in the five letter code in the \'93part of device\'94 box, with one letter representing each finger like this:
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid285219 {\insrsid285219 
\par xlrnn
\par 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid285219 {\insrsid285219 In this case, x means don\rquote t care (about the thumb), l (that\rquote 
s the letter L) means the finger is straight (the index finger in this case), r means the finger is partly bent (the middle finger here) and n means the finger is very bent. The shape of the letter corresponds to its function.
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid285219 {\insrsid285219 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid285219 {\insrsid285219 Or if you leave the \'93device\'94 box blank, you can type in any expression that GlovePIE understands in the \'93part of device\'94 box.

\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid285219 {\insrsid9845013 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid285219 {\insrsid9845013 For midi }{\b\insrsid9845013\charrsid9845013 input}{\insrsid9845013 , if you need to spec
ify the channel, there is no box for it. So you need to add the channel to the front of this \'93part of device\'94 box. Specify the channel like this: channel4.volume  (where \'93volume\'94 could be any part of the device).
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid285219 {\insrsid285219 
\par }\pard\plain \s3\ql \li0\ri0\sb240\sa60\keepn\widctlpar\aspalpha\aspnum\faauto\outlinelevel2\adjustright\rin0\lin0\itap0\pararsid14371540 \b\f1\fs26\lang3081\langfe1033\cgrid\langnp3081\langfenp1033 {\insrsid14371540 Convert From Source Range}{
\insrsid285219 
\par }\pard\plain \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid14371540 \fs24\lang3081\langfe1033\cgrid\langnp3081\langfenp1033 {\insrsid14371540 The \'93Convert From Source Range\'94
 box is used to convert the input device value from whatever range it uses (for example 0 to 63 for glove finger bends) into the correct values for}{\insrsid3027867 
 your chosen format and output range. This box is automatically activated for some common devi
ce parts, but you can still turn it on or off manually if you want. When it is checked, two more boxes appear for the minimum and maximum. You should specify the minimum and maximum for the range in these boxes, using whatever units you choose in the \'93
Units\'94 box.}{\insrsid14371540 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid14371540 {\insrsid3027867 If you want the range to be backwards, for example because the screen and glove use opposite directions for \'93y\'94
, then just swap the min and max values around. So that max is smaller than min.
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid14371540 {\insrsid3027867 
\par }\pard\plain \s3\ql \li0\ri0\sb240\sa60\keepn\widctlpar\aspalpha\aspnum\faauto\outlinelevel2\adjustright\rin0\lin0\itap0\pararsid3027867 \b\f1\fs26\lang3081\langfe1033\cgrid\langnp3081\langfenp1033 {\insrsid3027867 Units
\par }\pard\plain \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid3027867 \fs24\lang3081\langfe1033\cgrid\langnp3081\langfenp1033 {\insrsid3027867 Choose the units that you are using for the source value in the \'93Units\'94
 box. If there are no units for that particular value, then just leave it set to \'93Units\'94. The Units box is mostly used with the \'93Convert From Source Range\'94 range, but it can also be used by itself to specify what units the value in the \'93
part of device\'94 box will use. Make sure you use appropriate units for the value you choose, for example speeds should be in meters per second or kilometres per hour rather than in something nonsensical for a speed, like degrees. Of course you can use d
egrees per second for angular velocities.
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid3027867 {\insrsid3027867 
\par }\pard\plain \s2\ql \li0\ri0\sb240\sa60\keepn\widctlpar\aspalpha\aspnum\faauto\outlinelevel1\adjustright\rin0\lin0\itap0\pararsid8615196 \b\i\f1\fs28\lang3081\langfe1033\cgrid\langnp3081\langfenp1033 {\insrsid8615196 {\*\bkmkstart _Toc152895960}More\'85
 Button}{\insrsid3027867 {\*\bkmkend _Toc152895960}
\par }\pard\plain \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid8615196 \fs24\lang3081\langfe1033\cgrid\langnp3081\langfenp1033 {\insrsid8615196 The \'93More\'85\'94
 button is used to show extra, more complicated, information for advanced users. It allows you to choose a function to apply to the value (like Smooth), or to do arithmetic or other operations on the value. To hide the extra options again, click \'93Less
\'85\'94
\par }\pard\plain \s3\ql \li0\ri0\sb240\sa60\keepn\widctlpar\aspalpha\aspnum\faauto\outlinelevel2\adjustright\rin0\lin0\itap0\pararsid8615196 \b\f1\fs26\lang3081\langfe1033\cgrid\langnp3081\langfenp1033 {\insrsid8615196 Maths
\par }\pard\plain \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid8615196 \fs24\lang3081\langfe1033\cgrid\langnp3081\langfenp1033 {\insrsid8615196 The Maths box (when you click \'93More\'85\'94
) lets you choose what you want to do to the value. It includes standard maths, like add or subtract, and it includes comparisons for comparing a value and returning true or false, and it also includes \'93and\'94 and \'93or\'94
 for when you want to use multiple inputs. Note that in GlovePIE, \'93*\'94 means multiplied by, \'93/\'94 means divided by, \'93^\'94 means raised to the power of, \'93>=\'94 means is greater than or equal to, \'93<=\'94 means is less than or equal to, 
\'93!=\'94 means is not equal to, \'93xor\'94 means either a or b but not both, \'93&\'94 means only include the binary bits that are the same}{\insrsid12650684  in both}{\insrsid8615196 , \'93|\'94 means include }{\insrsid12650684 
all binary bits that are true in either value, \'93div\'94 means the whole number part of the division, \'93mod\'94 means the remainder of dividing the two, \'93shl\'94 means shift all the binary bits of the value left by some amount, and \'93shr\'94
 means shifting all the bits of the value right by some amount.}{\insrsid8615196 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid8615196 {\insrsid12650684 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid8615196 {\insrsid12650684 Note that \'93div\'94 and \'93mod\'94 don\rquote t just work on whole numbers. \'93Div\'94 always returns a whole number result, but \'93mod
\'94 doesn\rquote t, since the remainder of dividing decimal numbers will include decimals. If you have been brainwashed into thinking that \'93div\'94 and \'93mod\'94, or the C language equivalents, 
only make sense for integers, think again. Actually they are extremely useful for decimals, especially with real world units.
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid8615196 {\insrsid8810871 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid8615196 {\insrsid8810871 PIE is unusually in the way it handles + and / of values that are both either true or false. In that case \'93+\'94 means \'93and\'94 and 
\'93/\'94 means \'93or\'94. That is useful for keyboard commands like Shift+A which means \'93Shift and A\'94. But be careful because that doesn\rquote t work on some things that aren\rquote 
t considered true or false even if they normally return a value of 0 or 1.
\par }\pard\plain \s3\ql \li0\ri0\sb240\sa60\keepn\widctlpar\aspalpha\aspnum\faauto\outlinelevel2\adjustright\rin0\lin0\itap0\pararsid12650684 \b\f1\fs26\lang3081\langfe1033\cgrid\langnp3081\langfenp1033 {\insrsid12650684 Right Hand Side of Maths Expression

\par }\pard\plain \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid8615196 \fs24\lang3081\langfe1033\cgrid\langnp3081\langfenp1033 {\insrsid12650684 
This box sort of speaks for itself. Just type in whatever you want to add, subtract, compare it to, etc. once you have selected an operator in the \'93maths\'94 box.
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid8615196 {\insrsid12650684 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid8615196 {\insrsid12650684 You have to type it in manually, which shouldn\rquote t be a problem if you are advanced en
ough to want to use it. Note that you can type anything here, even complex mathematical equations and other device inputs like Glove2.x}{\insrsid8810871    }{\insrsid12650684 . Remember strings should be in quotation marks, but nothing else should.
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid8615196 {\insrsid12650684 
\par }\pard\plain \s3\ql \li0\ri0\sb240\sa60\keepn\widctlpar\aspalpha\aspnum\faauto\outlinelevel2\adjustright\rin0\lin0\itap0\pararsid8810871 \b\f1\fs26\lang3081\langfe1033\cgrid\langnp3081\langfenp1033 {\insrsid8810871 Function
\par }\pard\plain \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid8810871 \fs24\lang3081\langfe1033\cgrid\langnp3081\langfenp1033 {\insrsid8810871 The function box lets you choose one of the \'93temporal\'94
 functions to apply to the value. It doesn\rquote t include normal maths functions yet like }{\insrsid4856871 \'93}{\insrsid8810871 Sin}{\insrsid4856871 \'94}{\insrsid8810871  or }{\insrsid4856871 \'93}{\insrsid8810871 Cos}{\insrsid4856871 \'94}{
\insrsid8810871 , it only includes functions that change over time. These include the }{\insrsid4856871 \'93}{\insrsid8810871 Smooth}{\insrsid4856871 \'94}{\insrsid8810871  function, which smooths out random noise or sudden bumps. They also include the 
\'93Pressed\'94 and \'93Released\'94 functions which only return true for a single frame when the value is first activated or finally returns to 0 or false. There are other functions like \'93Clicked\'94, \'93DoubleClicked\'94 and \'93SingleClicked\'94
 which only return true when the button has been pressed and released the right number of times. And then there is the \'93HeldDown\'94 function which only returns true once it has been held down for a certain length of time.}{\insrsid4856871 
 Then there is the easily confused \'93KeepDown\'94 fun
ction, which actually keeps the value as true for a while even after the button itself has been released. It is good for values that are normally only true for an instant (like Said() for microphone) but which you want to keep activating the output for lo
nger. }{\insrsid8810871 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid8810871 {\insrsid8810871 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid8810871 {\insrsid8810871 If you want normal maths functions instead, you need to set the \'93device\'94 box to blank and type the whole function call in the \'93
DevicePart\'94 box instead.
\par }\pard\plain \s2\ql \li0\ri0\sb240\sa60\keepn\widctlpar\aspalpha\aspnum\faauto\outlinelevel1\adjustright\rin0\lin0\itap0\pararsid3220567 \b\i\f1\fs28\lang3081\langfe1033\cgrid\langnp3081\langfenp1033 {\insrsid3220567 {\*\bkmkstart _Toc152895961}
Apply Button{\*\bkmkend _Toc152895961}
\par }\pard\plain \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid3220567 \fs24\lang3081\langfe1033\cgrid\langnp3081\langfenp1033 {\insrsid3220567 
You need to click the Apply Button once you have made changes, or the changes will be lost when you choose a different output item to set.
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid3220567 {\insrsid3220567 You can still edit it after you click the Apply button.
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid3220567 {\insrsid3220567 Once you have clicked Apply, an asterisk (*) will appear beside the name of the item to show that it is set to something.
\par If you added a new item, a line will be added to the end of your script. If you edited an existing item, that line of the script will be changed.
\par Your entire script is reprocessed by the GUI every time you click Apply, which means you can instantly tell how GlovePIE understood and interpreted your changes. 
\par There is no Cancel button. If you don\rquote t want to keep your changes, just choose a different output item to set and when you come back your changes will be gone.
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid3220567 {\insrsid203509 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid3220567 {\insrsid203509 Don\rquote t forget, the Apply button doesn\rquote t save your script, it just adds that line to it. You need to use the \'93File > Save\'94
 menu item after you have applied if you want to save your script to disk.
\par }\pard\plain \s2\ql \li0\ri0\sb240\sa60\keepn\widctlpar\aspalpha\aspnum\faauto\outlinelevel1\adjustright\rin0\lin0\itap0\pararsid3220567 \b\i\f1\fs28\lang3081\langfe1033\cgrid\langnp3081\langfenp1033 {\insrsid3220567 {\*\bkmkstart _Toc152895962}
Delete Button{\*\bkmkend _Toc152895962}
\par }\pard\plain \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid3220567 \fs24\lang3081\langfe1033\cgrid\langnp3081\langfenp1033 {\insrsid3220567 If you have started creating a new item that you don\rquote 
t want to Apply, or if you want to delete an existing item, use the Delete button. You can\rquote t use it to revert your changes, it will just delete that item rather than restoring it to how it was before. 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid3220567 {\insrsid15742361 
\par }\pard\plain \s2\ql \li0\ri0\sb240\sa60\keepn\widctlpar\aspalpha\aspnum\faauto\outlinelevel1\adjustright\rin0\lin0\itap0\pararsid15742361 \b\i\f1\fs28\lang3081\langfe1033\cgrid\langnp3081\langfenp1033 {\insrsid15742361 {\*\bkmkstart _Toc152895963}
How to use the GUI with other features{\*\bkmkend _Toc152895963}
\par }\pard\plain \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15742361 \fs24\lang3081\langfe1033\cgrid\langnp3081\langfenp1033 {\insrsid15742361 You can also use the \'93Search > Find\'94
 menu from the GUI. It will search for the }{\insrsid203509 specified text which appears anywhere in any of the items you have set. You need to click \'93Apply\'94
 first. Make sure you search in both directions. The search direction depends on when you added things, not their order in the output item list. The search is a powerful and useful way of navigating the GUI.}{\insrsid15742361 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15742361 {\insrsid203509 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15742361 {\insrsid203509 
When you change from one the GUI tab to the Script tab, the cursor will stay on the same item. For example if you are looking at midi1.channel1.Volume in the GUI, then that line of the script will hav
e the cursor when you switch back to the script. The same thing works the other way around. Choose a line of your script and change to the GUI and that item will be displayed in the GUI.
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15742361 {\insrsid203509 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15742361 {\insrsid203509 You can\rquote t cut and paste from the GUI. So if you assign a complicated
 expression to control the Enter key, and you later decide you want it to control the space bar instead, you have to delete it from Enter, and create it again under Space. But an easier method is just to switch to the script editor, where you can more eas
i
ly cut and paste, or change such things, and then switch back once you have fixed it. You will have the same problem if you apply a lot of things to MIDI device 1 and you want to move them all to MIDI device 2. Just use the script editor. You can even use
 Find and Replace from the script editor, but not from the GUI.
\par }\pard\plain \s1\ql \li0\ri0\sb240\sa60\keepn\widctlpar\aspalpha\aspnum\faauto\outlinelevel0\adjustright\rin0\lin0\itap0\pararsid9845013 \b\f1\fs32\lang3081\langfe1033\kerning32\cgrid\langnp3081\langfenp1033 {\insrsid9845013 \page 
{\*\bkmkstart _Toc152895964}GlovePIE OSC}{\insrsid3540885  (Open Sound Control)}{\insrsid203509 {\*\bkmkend _Toc152895964}
\par }\pard\plain \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid9845013 \fs24\lang3081\langfe1033\cgrid\langnp3081\langfenp1033 {\insrsid9845013 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid3880321 {\insrsid3880321 Open Sound Control is a simple network protocol for controlling just about anything. It doesn\rquote t need to involve sound.
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid3880321 {\insrsid3880321 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid3880321 {\insrsid3880321 You can use it to communicate with ot
her computers, which might be Macs, or Linux boxes, or whatever. You might also be able to use it with some other hardware.
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid9845013 {\insrsid3880321 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid9845013 {\insrsid3540885 GlovePIE now supports OSC input and output, but }{\insrsid3636861 unfortunately in the current implementation }{\insrsid2503973 
all messages received from different sources are pooled together into one, so you can\rquote t tell where they came from. Also it can\rquote t tell the difference between dots and slashes in addresses.}{\insrsid1853914  And it doesn\rquote 
t support bundles at all.}{\insrsid3540885 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid9845013 {\insrsid3540885 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid9845013 {\insrsid3636861 There are two ways to send OSC messages in GlovePIE. The first is with the SendOsc  and BroadcastOsc functions.
\par }\pard\plain \s2\ql \li0\ri0\sb240\sa60\keepn\widctlpar\aspalpha\aspnum\faauto\outlinelevel1\adjustright\rin0\lin0\itap0\pararsid3636861 \b\i\f1\fs28\lang3081\langfe1033\cgrid\langnp3081\langfenp1033 {\insrsid3636861 {\*\bkmkstart _Toc152895965}
Using the SendOsc and BroadcastOsc functions{\*\bkmkend _Toc152895965}
\par }\pard\plain \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid3636861 \fs24\lang3081\langfe1033\cgrid\langnp3081\langfenp1033 {\insrsid3636861 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid3636861 {\insrsid3636861 The BroadcastOsc function sends an OSC message to all computers on the local network. It looks like this:
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid3636861 {\insrsid3636861 
\par BroadcastOsc(port, OscAddress, param1, param2, param3, \'85)
\par 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid3636861 {\insrsid3636861 
Port is the port number to send it to. It can be any integer, but it is best if it is between 49,152 and 65,535. The machine receiving the OSC messages needs to be set to the same port.
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid3636861 {\insrsid3636861 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid3636861 {\insrsid3636861 OscAddress is a path, which begins with a / and has a bunch of nodes separated by slashes. For example: \'93}{
\insrsid3636861\charrsid3636861 /resonators/3/frequency}{\insrsid3636861 \'94
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid3636861 {\insrsid3636861 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid3636861 {\insrsid3636861 
The other parameters can be anything. GlovePIE will send them as single-precision floating-point, or an integer, or true or false, or an array (for vectors), or an array of arrays (for matrices
). You need to convert the parameters to the correct type that the machine you are sending to is expecting.
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid3636861 {\insrsid3636861\charrsid3636861 
\par }{\insrsid4926635 SendOsc will send to a specific address, rather than to every computer. It looks like this:}{\insrsid3636861 
\par }{\insrsid4926635 
\par SendOsc(IpAddress, port, OscAddress, param1, param2, param3, \'85)
\par 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid3636861 {\insrsid4926635 IpAddress is the IP address eg. \'93192.168.1.4\'94 or the internet address eg. \'93www.google.com\'94 or \'93localhost\'94
 to send to its own computer, or \'93broadcast\'94 to send to all computers on the local network 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid3636861 {\insrsid13706231 
\par See the p5osc.PIE sample file for an example.
\par }{\insrsid4926635\charrsid3636861 
\par }\pard\plain \s2\ql \li0\ri0\sb240\sa60\keepn\widctlpar\aspalpha\aspnum\faauto\outlinelevel1\adjustright\rin0\lin0\itap0\pararsid3636861 \b\i\f1\fs28\lang3081\langfe1033\cgrid\langnp3081\langfenp1033 {\insrsid3636861 {\*\bkmkstart _Toc152895966}
Using the OSC objects{\*\bkmkend _Toc152895966}
\par }\pard\plain \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid9845013 \fs24\lang3081\langfe1033\cgrid\langnp3081\langfenp1033 {\insrsid3636861 
\par }{\insrsid3540885 You can have multiple OSC object. Each object can support input, output or both. But in the current version, all the input sources are pooled into one.
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid9845013 {\insrsid3540885 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid9845013 {\insrsid3540885 Using OSC }{\insrsid96524 output }{\insrsid3540885 in }{\insrsid11607387 Glove}{\insrsid3540885 
PIE first requires setting the port and either broadcast or IP address on an OSC object like this:
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid9845013 {\insrsid3540885 
\par }{\insrsid96524 Osc1.port = 54934}{\insrsid3540885 
\par Osc1.broadcast = true
\par 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid9845013 {\insrsid3540885 Note that the port can be anything, preferably}{\insrsid96524 
 between 49,152 and 65,535. But it needs to match whatever the receiver is expecting.}{\insrsid11607387  }{\insrsid3540885 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid9845013 {\insrsid96524 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid9845013 {\insrsid96524 When broadcast is true, the OSC mess
ages will be sent to all computers on the local network, but not the rest of the internet. When broadcast is false, you need to set the IP address of the computer you want to send to, like this:
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid9845013 {\insrsid96524 
\par Osc1.IP = \'93192.168.1.4\'94
\par 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid9845013 {\insrsid96524 After you have set either the IP address, or broadcast to true, then you can set any values you like, like this:
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid9845013 {\insrsid96524 
\par Osc}{\insrsid11607387 1.hello.foo.glove.x = p5.x}{\insrsid96524 
\par 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid9845013 {\insrsid96524 
That will tell all the receiving computers that the OSC address  /hello/foo/glove/x  is being set to a single-precision floating point number, equal to whatever the horizontal p}{\insrsid11607387 osition of the P5 glove is}{\insrsid96524 .
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid9845013 {\insrsid96524 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid9845013 {\insrsid96524 
Basically, each device that listens to OSC messages has a kind of tree structure of values that can be set. Each element on the tree has an address, starting with a / }{\insrsid11607387 and with slashes separating e
ach folder, or node on the tree. GlovePIE uses dots instead of slashes, to make it more consistent with the way GlovePIE works, and you can just assign to the address like a normal variable.}{\insrsid96524 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid9845013 {\insrsid11607387 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid9845013 {\insrsid11607387 GlovePIE can send Single-precision floating point numbers (that\rquote s numbers with decimal points), or it can send 32-bit integers (that
\rquote s whole numbers), or it can send True or False values, or it can send strings of text. But it can only send one value at a time.
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid9845013 {\insrsid11607387 
\par }{\insrsid7026797 For example, we could make something like this}{\insrsid622247  to send glove data via osc}{\insrsid7026797 :
\par 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid7026797 {\insrsid7026797 Osc1.port = 54934
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid7026797 {\insrsid7026797 Osc1.broadcast = true
\par Osc1.glove.finger.index = p5.index
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid7026797 {\insrsid7026797 Osc1.glove.finger.middle = p5.middle
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid7026797 {\insrsid7026797 Osc1.glove.finger.ring = p5.ring
\par Osc1.glove.finger.pinky = p5.pinky
\par Osc1.glove.finger.thumb = p5.thumb
\par Osc1.glove.pos.x = p5.x
\par }{\insrsid3880321 Osc1.glove.pos.y = p5.y
\par Osc1.glove.pos.z = p5.z
\par Osc1.glove.button.A = p5.A
\par Osc1.glove.button.B = p5.B
\par Osc1.glove.button.C = p5.C
\par // etc.
\par 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid7026797 {\insrsid3880321 Note that the buttons will be either true or false. If the receiving program can\rquote t handle true or false values, use 
the int( ) function to convert them to integers like this:
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid3880321 {\insrsid3880321 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid3880321 {\insrsid3880321 Osc1.glove.button.A = int(p5.A)
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid7026797 {\insrsid3880321 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid7026797 {\insrsid3880321 
You would then have to set up the receiving program or device to listen to port 54934 and understand those addresses, which would become like this:  /glove/finger/index 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid9845013 {\insrsid7026797 
\par }\pard\plain \s2\ql \li0\ri0\sb240\sa60\keepn\widctlpar\aspalpha\aspnum\faauto\outlinelevel1\adjustright\rin0\lin0\itap0\pararsid2503973 \b\i\f1\fs28\lang3081\langfe1033\cgrid\langnp3081\langfenp1033 {\insrsid2503973 {\*\bkmkstart _Toc152895967}
Receiving OSC Messages}{\insrsid7026797 {\*\bkmkend _Toc152895967}
\par }\pard\plain \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid9845013 \fs24\lang3081\langfe1033\cgrid\langnp3081\langfenp1033 {\insrsid2503973 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid9845013 {\insrsid2503973 You can receive OSC messages by setting ListenPort to the port you want to listen to, and }{\insrsid14822985 setting }{\insrsid2503973 
Listening to true}{\insrsid14822985 .}{\insrsid2503973 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid9845013 {\insrsid14822985 
\par Osc2.ListenPort = 54934
\par Osc2.Listening = true
\par 
\par then you can read any OSC values like this:
\par 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid9845013 {\insrsid14822985 var.x = Osc2.glove.pos.x
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid9845013 {\insrsid14822985 
\par }{\insrsid8204422 You don\rquote t have to use separate OSC objects for receiving and sending, but you can if you want.}{\insrsid14822985 
\par }{\insrsid8204422 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid9845013 {\insrsid622247 
Beware: OSC has security holes. If you set Listening to true then GlovePIE will accept osc messages from any source. If an internet attacker knows your PIE script is running and what format it uses, they could send OSC messages to you. That isn\rquote 
t a major problem, and is extremely unlikely, so I wouldn\rquote t worry about it.}{\insrsid15561222 
\par }\pard\plain \s1\ql \li0\ri0\sb240\sa60\keepn\widctlpar\aspalpha\aspnum\faauto\outlinelevel0\adjustright\rin0\lin0\itap0\pararsid15561222 \b\f1\fs32\lang3081\langfe1033\kerning32\cgrid\langnp3081\langfenp1033 {\insrsid15561222 \page 
{\*\bkmkstart _Toc152895968}Mouse}{\insrsid622247 {\*\bkmkend _Toc152895968}
\par }\pard\plain \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15561222 \fs24\lang3081\langfe1033\cgrid\langnp3081\langfenp1033 {\insrsid15561222 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15561222 {\insrsid15561222 A computer can have several mice, track-pads, track-balls and other such de
vices attached. But it only has one real mouse cursor. Also most games only see a single mouse, called the \'93system mouse\'94
. The system mouse is an imaginary combination of all the hardware mice and track-pads put together. Moving any mouse to the left will move the \'93system mouse\'94 and the on-screen mouse pointer to the left. Pressing any mouse\rquote 
s left button will be seen as clicking the left button on the \'93system mouse\'94.
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15561222 {\insrsid15561222 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15561222 {\insrsid15561222 The physical movement of each mouse on the desk is measured in units called \'93mickeys\'94. Th
e size of this unit depends on the mouse. It is often listed on the box as Dots Per Inch, or DPI. \'93Dots\'94 here refers to \'93mickeys\'94. My Microsoft wireless optical mouse has 400 DPI, meaning one }{\insrsid5181768 
mickey is 1/400 inches, or less then a tenth of a millimetre. There is no way of knowing the exact physical position of the mouse, but you can only tell how far it has moved from its starting position.}{\insrsid15561222 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15561222 {\insrsid5181768 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15561222 {\insrsid5181768 The location of the mouse pointer on the screen is measured in pixels. Windows uses a complicated algorithm called \'93mouse ballistics\'94
 to determine how far to move the cursor based on the physical movement of the mouse. It varies for different versions of Windows and for different control panel settings, and for different monitor sizes. Many people have multiple monitors 
attached to their computer, and the mouse pointer can move from one to the other. If the mouse is on a screen to the left of the primary monitor then it will have a negative pixel coordinate for its x position. If the mouse is on a screen to the right of 
the primary monitor it will have a pixel coordinate greater than the horizontal resolution of the screen.
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15561222 {\insrsid5181768 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15561222 {\insrsid5181768 Some games use the mouse pointer\rquote s position on the screen. But other games, especially First Per}{\insrsid13395556 
son Shooters like DooM, don\rquote t use a mouse pointer, and instead just read the physical movement of the mouse in Mickeys. Just because a game has a mouse pointer, doesn\rquote 
t mean it uses the normal Windows one. Sometimes it just reads the physical mouse movements and draws its own pointer in its own private location that it is impossible for GlovePIE to know about.}{\insrsid5181768 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15561222 {\insrsid13395556 
\par }\pard\plain \s2\ql \li0\ri0\sb240\sa60\keepn\widctlpar\aspalpha\aspnum\faauto\outlinelevel1\adjustright\rin0\lin0\itap0\pararsid13395556 \b\i\f1\fs28\lang3081\langfe1033\cgrid\langnp3081\langfenp1033 {\insrsid13395556 {\*\bkmkstart _Toc152895969}
Mouse.DirectInputX and Mouse.DirectInputY{\*\bkmkend _Toc152895969}
\par }\pard\plain \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15561222 \fs24\lang3081\langfe1033\cgrid\langnp3081\langfenp1033 {\insrsid13395556 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15561222 {\insrsid13395556 
In GlovePIE, you can read and set the physical movement of the mouse, in mickeys, by using the mouse.DirectInputX and mouse.DirectInputY values. }{\insrsid467261 It is called DirectInput because games use Microsoft\rquote 
s DirectInput to read these values directly from the mouse hardware.}{\insrsid13395556 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15561222 {\insrsid13395556 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15561222 {\insrsid11274612 
If you have multiple mice, and you have Windows XP, you can read the positions of individual mice with mouse1.DirectInputX, mouse2.DirectInputX, et
c. Otherwise you can just use mouse.DirectInputX (without any number) to get the combined location of all the mice}{\insrsid13173557  representing the}{\insrsid11274612  \'93System mouse\'94}{\insrsid13173557 . You can\rquote 
t set the position of individual mice (since most games can\rquote t read individual mice), so you always have to set mouse.DirectInputX without a number before the dot.}{\insrsid2302009 
 Note that laptops usually have multiple mice, since the track-pad counts as a mouse.}{\insrsid13173557 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15561222 {\insrsid11274612 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15561222 {\insrsid13395556 Mouse.DirectInputX is the left/right position, with negative values to the left and positive values to the 
right. Mouse.DirectInputY is the forwards/backwards position, with negative values meaning forwards and pos}{\insrsid2106830 itive values meaning backwards.}{\insrsid13395556 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15561222 {\insrsid13395556 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15561222 {\insrsid13395556 Where-ever the mouse was when you pressed the }{\b\insrsid13395556\charrsid13395556 Run}{\insrsid13395556 
 button will be considered the point (0, 0) where both mouse.DirectInputX and mou}{\insrsid2106830 se.DirectInputY are equal to 0.}{\insrsid13395556 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15561222 {\insrsid2106830 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15561222 {\insrsid2106830 If you then move the mouse 1 inch to the right, the mouse.DirectInputX value will go up to 400, or whatever DPI your mouse is.
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15561222 {\insrsid13395556 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15561222 {\insrsid2106830 You can read these values, to find out where the mouse is, or you can set them, t
o trick games into thinking that the mouse has been moved to a new physical location.}{\insrsid13395556 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15561222 {\insrsid13395556 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15561222 {\insrsid2106830 Because PIE supports different units, you can also read the value in normal units of distance, like centimetres or inches.
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15561222 {\insrsid2106830 
\par For example:
\par 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid2106830 {\insrsid2106830 midi.BassDrum1 = mouse.DirectInputX < -0.5 inches
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid2106830 {\insrsid4356586 midi.CrashCymbal1 = m}{\insrsid2106830 ouse.DirectInputX > 0.5 inches
\par }{\insrsid4356586 debug = mouse.DirectInputX in inches
\par 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid2106830 {\insrsid4356586 
This will play a drum when you move the mouse half an inch to the left of its starting point, and play a cymbal when you move the mouse half an inc
h to the right of its starting point. It will also display the physical location of the mouse in the debug box. Note that people are used to moving the mouse tiny amounts, so it feels weird moving the mouse large distances. But if you want to use the mous
e as a physical tracking device like this you can.
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid2106830 {\insrsid4356586 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid2106830 {\insrsid4356586 Note that if your mouse is not the default 400 DPI, then you need to set the value Pie.MouseDPI to whatever your mouse\rquote 
s DPI is. For example, for my mum\rquote s new mouse:
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid2106830 {\insrsid4356586 
\par Pie.MouseDPI = 800
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid4356586 {\insrsid4356586 midi.BassDrum1 = mouse.DirectInputX < -0.5 inches
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid4356586 {\insrsid4356586 midi.CrashCymbal1 = mouse.DirectInputX > 0.5 inches
\par debug = mouse.DirectInputX in inches
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid2106830 {\insrsid4356586 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid2106830 {\insrsid4356586 You can also check with a ruler to make sure you got it right.
\par }{\insrsid467261 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid2106830 {\insrsid467261 You can also set the values to control the system mouse in }{\b\insrsid467261\charrsid467261 any}{\insrsid467261  game or 
application. It doesn\rquote t matter whether the game uses the mouse cursor or reads the mouse directly. For example if you want to control the mouse with a joystick, like this:}{\insrsid4356586 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid2106830 {\insrsid467261 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid467261 {\insrsid467261 mouse.DirectInputX = mouse.DirectInputX + 100*joystick.x
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid467261 {\insrsid467261 mouse.DirectInputY = mouse.DirectInputY + 100*joystick.y
\par 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid467261 {\insrsid467261 
Every frame (40 times per second) it will add or subtract a certain amount based on the position of the joystick. Note that if your joystick is not calibrated correctly it will drift.
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid467261 {\insrsid467261 
\par }\pard\plain \s2\ql \li0\ri0\sb240\sa60\keepn\widctlpar\aspalpha\aspnum\faauto\outlinelevel1\adjustright\rin0\lin0\itap0\pararsid467261 \b\i\f1\fs28\lang3081\langfe1033\cgrid\langnp3081\langfenp1033 {\insrsid467261 {\*\bkmkstart _Toc152895970}
Mouse.DirectInput2D{\*\bkmkend _Toc152895970}
\par }\pard\plain \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid467261 \fs24\lang3081\langfe1033\cgrid\langnp3081\langfenp1033 {\insrsid467261 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid467261 {\insrsid467261 Because GlovePIE also supports vectors, you may want to set and read both the DirectInput values at once. For example:
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid467261 {\insrsid467261 
\par Mouse.DirectInput2D = [200, -400]
\par 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid467261 {\insrsid467261 Will set the mouse to half an inch to the left and a whole inch forwards from its starting point. Or you can use real units:
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid467261 {\insrsid467261 
\par Mouse.DirectInput2D = [0.5, -1] inches
\par 
\par You can also read them both at once. eg.
\par 
\par debug = mouse.DirectInput2D
\par 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid467261 {\insrsid13173557 You can read individual mice this way if you have multiple mice plugged into windows XP, by using Mouse1.DirectInput2D and Mouse2.DirectIn
put2D. But you can\rquote t set individual mice.
\par }\pard\plain \s2\ql \li0\ri0\sb240\sa60\keepn\widctlpar\aspalpha\aspnum\faauto\outlinelevel1\adjustright\rin0\lin0\itap0\pararsid467261 \b\i\f1\fs28\lang3081\langfe1033\cgrid\langnp3081\langfenp1033 {\insrsid11274612 {\*\bkmkstart _Toc152895971}
The Scroll Wheel}{\insrsid467261 {\*\bkmkend _Toc152895971}
\par }\pard\plain \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid467261 \fs24\lang3081\langfe1033\cgrid\langnp3081\langfenp1033 {\insrsid467261 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid467261 {\insrsid467261 Most mice these days also have a scroll wheel. This is considered to be the mouse\rquote 
s Z axis. It has no units. But it normally jumps in increments of 120 per click. Some mice have continuous movement}{\insrsid11274612  in their scroll wheels}{\insrsid467261 , but }{\insrsid11274612 most click in jumps of 120.}{\insrsid467261 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid467261 {\insrsid11274612 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid467261 {\insrsid11274612 
Note that the wheel on my Microsoft mouse is extremely dodgy and often jumps in the wrong direction, and I expect many scroll wheels are like that. Some games go to a lot of trouble to compensate.
\par }\pard\plain \s3\ql \li0\ri0\sb240\sa60\keepn\widctlpar\aspalpha\aspnum\faauto\outlinelevel2\adjustright\rin0\lin0\itap0\pararsid11274612 \b\f1\fs26\lang3081\langfe1033\cgrid\langnp3081\langfenp1033 {\insrsid11274612 Mouse.DirectInputZ
\par }\pard\plain \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid467261 \fs24\lang3081\langfe1033\cgrid\langnp3081\langfenp1033 {\insrsid11274612 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid467261 {\insrsid11274612 You can read }{\insrsid13173557 or set }{\insrsid11274612 the scroll wheel position with Mouse.DirectInputZ.
\par 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid467261 {\insrsid11274612 
The starting position of the scroll wheel is given the value 0. Negative means scrolled forwards. Positive means scrolled backwards. If you scroll it forwards two clicks it will have a value of -240.
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid467261 {\insrsid13173557 
\par Again this works with multiple mice.
\par }\pard\plain \s3\ql \li0\ri0\sb240\sa60\keepn\widctlpar\aspalpha\aspnum\faauto\outlinelevel2\adjustright\rin0\lin0\itap0\pararsid11274612 \b\f1\fs26\lang3081\langfe1033\cgrid\langnp3081\langfenp1033 {\insrsid11274612 Mouse.DirectInput3D
\par }\pard\plain \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid467261 \fs24\lang3081\langfe1033\cgrid\langnp3081\langfenp1033 {\insrsid11274612 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid467261 {\insrsid11274612 
You can set or read the x, y, and z (scroll wheel) positions at once with Mouse.DirectInput3D. It is measured in Mickeys, even though technically z shouldn\rquote t have units.}{\insrsid13173557  It works with multiple mice.}{\insrsid11274612 
\par }\pard\plain \s3\ql \li0\ri0\sb240\sa60\keepn\widctlpar\aspalpha\aspnum\faauto\outlinelevel2\adjustright\rin0\lin0\itap0\pararsid11274612 \b\f1\fs26\lang3081\langfe1033\cgrid\langnp3081\langfenp1033 {\insrsid11274612 Mouse.WheelUp}{\insrsid13173557 
 and Mouse.WheelDown}{\insrsid11274612 
\par }\pard\plain \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid11274612 \fs24\lang3081\langfe1033\cgrid\langnp3081\langfenp1033 {\insrsid11274612 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid11274612 {\insrsid11274612 This will be true}{\insrsid13173557  for an instant (well, a single frame, or a 40}{\super\insrsid13173557\charrsid13173557 th}{
\insrsid13173557  of a second) when you scroll the wheel up or down. You can also set it, if you want to simulate the user scrolling the wheel up or down.}{\insrsid11274612 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid11274612 {\insrsid13173557 
\par It }{\b\insrsid13173557 does not}{\insrsid13173557  work with multiple mice yet.
\par 
\par }\pard\plain \s3\ql \li0\ri0\sb240\sa60\keepn\widctlpar\aspalpha\aspnum\faauto\outlinelevel2\adjustright\rin0\lin0\itap0\pararsid13173557 \b\f1\fs26\lang3081\langfe1033\cgrid\langnp3081\langfenp1033 {\insrsid13173557 Mouse.DirectInputH
\par }\pard\plain \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid13173557 \fs24\lang3081\langfe1033\cgrid\langnp3081\langfenp1033 {\insrsid13173557 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid13173557 {\insrsid13173557 
If the mouse has a horizontal scroll wheel, or a vertical scroll wheel that can tilt from side to side, then in theory you can read or set the horizontal scroll wheel positi
on with Mouse.DirectInputH. I have no idea whether it works, since it is largely based on guess-work and I don\rquote t have a mouse with horizontal scroll wheels.
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid13173557 {\insrsid13173557 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid13173557 {\insrsid13173557 I don\rquote t know whether this works with multiple mice, or the system mouse, or both. If you do any ex
periments and find out, please let me know.
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid11274612 {\insrsid13173557 
\par }\pard\plain \s3\ql \li0\ri0\sb240\sa60\keepn\widctlpar\aspalpha\aspnum\faauto\outlinelevel2\adjustright\rin0\lin0\itap0\pararsid13173557 \b\f1\fs26\lang3081\langfe1033\cgrid\langnp3081\langfenp1033 {\insrsid13173557 Mouse.WheelLeft and Mouse.WheelRight

\par }\pard\plain \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid11274612 \fs24\lang3081\langfe1033\cgrid\langnp3081\langfenp1033 {\insrsid13173557 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid11274612 {\insrsid13173557 This is the horizontal equivalent of Mouse.WheelUp and Mouse.WheelDown. It is purely theoretical, and probably doesn\rquote t work.
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid11274612 {\insrsid13173557 
\par }\pard\plain \s3\ql \li0\ri0\sb240\sa60\keepn\widctlpar\aspalpha\aspnum\faauto\outlinelevel2\adjustright\rin0\lin0\itap0\pararsid2302009 \b\f1\fs26\lang3081\langfe1033\cgrid\langnp3081\langfenp1033 {\insrsid13173557 Mouse.}{\insrsid2302009 WheelPresent}{
\insrsid13173557 
\par }\pard\plain \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid2302009 \fs24\lang3081\langfe1033\cgrid\langnp3081\langfenp1033 {\insrsid2302009 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid2302009 {\insrsid2302009 Mouse.WheelPresent is true if one of your mice has a scroll wheel, or false if none of them do. It doesn\rquote 
t work for individual mice yet. You can\rquote t set it, you can only read it.
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid2302009 {\insrsid2302009 
\par }\pard\plain \s3\ql \li0\ri0\sb240\sa60\keepn\widctlpar\aspalpha\aspnum\faauto\outlinelevel2\adjustright\rin0\lin0\itap0\pararsid2302009 \b\f1\fs26\lang3081\langfe1033\cgrid\langnp3081\langfenp1033 {\insrsid2302009 Mouse.WheelScrollLines
\par }\pard\plain \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid2302009 \fs24\lang3081\langfe1033\cgrid\langnp3081\langfenp1033 {\insrsid2302009 
\par The mouse.WheelScrollLines value is equal to the number of lines of text that will be scrolled in most applications when you move the scroll wheel one click (or 120 units if it doesn\rquote t click).
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid2302009 {\insrsid2302009 
\par }\pard\plain \s2\ql \li0\ri0\sb240\sa60\keepn\widctlpar\aspalpha\aspnum\faauto\outlinelevel1\adjustright\rin0\lin0\itap0\pararsid2302009 \b\i\f1\fs28\lang3081\langfe1033\cgrid\langnp3081\langfenp1033 {\insrsid2302009 {\*\bkmkstart _Toc152895972}
Mouse.CursorPosX and Mouse.CursorPosY{\*\bkmkend _Toc152895972}
\par }\pard\plain \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid2302009 \fs24\lang3081\langfe1033\cgrid\langnp3081\langfenp1033 {\insrsid2302009 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid2302009 {\insrsid2302009 The other way of thinking about the mouse position is to use the cursor, rather than the physical moveme
nt of the mouse on the desk. The Cursor position is measured in pixels. The number of pixels on the screen in each direction is called the resolution. It is usually around about 1024 horizontally and 768 vertically.
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid2302009 {\b\insrsid5180709 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid5180709 {\insrsid5180709 Remember that many games ignore the pos
ition of the proper cursor, so for these games you need to use the DirectInputX and DirectInputY values above instead.
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid5180709 {\insrsid5180709 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid5180709 {\insrsid5180709 There is only one real mouse cursor, and it is shared between multiple mice. So you can\rquote 
t use numbers before the dot to read or set the cursor position for individual mice. If you want more than one cursor you need to use }{\b\insrsid5180709\charrsid2302009 Fake Cursors}{\b\insrsid5180709 .
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid5180709 {\insrsid5180709 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid5180709 {\insrsid5180709 
mouse.CursorPosX is the horizontal coordinate of the cursor. 0 is the left edge of the primary monitor. The right edge of the primary monitor is one less t
han the horizontal resolution of the screen. eg. 1023. You can tell what the resolution of the primary monitor is by reading screen.width.
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid5180709 {\insrsid5180709 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid5180709 {\insrsid5180709 Note that if the cursor is on a different monitor from the primary monitor then mouse.CursorPosX will be either less
 than 0 or greater than or equal to the width of the primary monitor. You can tell what the left edge of the left-most monitor is by reading screen.DesktopLeft. You can tell what the right edge of the right-most monitor is by reading screen.DesktopRight. 
You can also read screen2.left, screen3.left, etc. to find the left edges of individual screens. The same with the right hand sides.
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid5180709 {\insrsid5180709 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid5180709 {\insrsid5180709 mouse.CursorPosY is the vertical coordinate of the cursor. 0 is the top edge, and the bottom edge is one less than the vert
ical resolution. It will be outside this range for multiple monitors. Use screen.DesktopTop and screen.DesktopBottom}{\insrsid15628828  to tell the top and bottom maximum values for all monitors. }{\insrsid5180709 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid5180709 {\insrsid5180709 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid5180709 {\insrsid15628828 You can also write Cursor.PosX and Cursor.PosY instead, to set the cursor pos
ition. It works the same as Mouse.CursorPosX and Mouse.CursorPosY. Don\rquote t use a number after the word \'93cursor\'94 though, or it will set fake cursors rather than the real one.}{\insrsid5180709 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid5180709 {\insrsid15628828 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid5180709 {\insrsid15628828 If you have a Plug & Play monitor, then GlovePIE can tell roughly what the physical
 size of your screen is. You can therefore set the location of the cursor in real world units. For example, to set the cursor to be 10 cm to the right of the left edge of the primary monitor, you would write this:
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid5180709 {\insrsid15628828 
\par mouse.CursorPosX = 10 cm
\par 
\par You can also get the physical width of the screen like this:
\par 
\par debug = screen.width in cm
\par 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid5180709 {\insrsid15628828 GlovePIE will automatically convert between pixels and real world units, so watch out! That may not be what you want.
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid5180709 {\insrsid15628828 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid5180709 {\insrsid15628828 For example:
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid5180709 {\insrsid15628828 mouse.CursorPosX = mouse.DirectInputX
\par 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid5180709 {\insrsid15628828 will make 
the cursor on the screen move the same physical distance that you moved the mouse. If you moved the mouse 1 inch, it will move the cursor 1 inch. That is fun to try, but a pain for people that are used to mice.
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid5180709 {\insrsid15628828 
\par If you don\rquote t want to convert the units, try this instead:
\par 
\par mouse.CursorPosX = RemoveUnits(mouse.DirectInputX)
\par 
\par }{\insrsid477651 Normally you just set the cursor position using pixels, eg.
\par 
\par mouse.CursorPosX = 512
\par 
\par }\pard\plain \s2\ql \li0\ri0\sb240\sa60\keepn\widctlpar\aspalpha\aspnum\faauto\outlinelevel1\adjustright\rin0\lin0\itap0\pararsid477651 \b\i\f1\fs28\lang3081\langfe1033\cgrid\langnp3081\langfenp1033 {\insrsid477651 {\*\bkmkstart _Toc152895973}
Mouse.CursorPos{\*\bkmkend _Toc152895973}
\par }\pard\plain \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid477651 \fs24\lang3081\langfe1033\cgrid\langnp3081\langfenp1033 {\insrsid477651 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid477651 {\insrsid477651 You can read both the horizontal and vertical position at once as a vector, using Mouse.CursorPos.
\par 
\par eg.
\par 
\par debug = mouse.CursorPos
\par 
\par or 
\par 
\par mouse.CursorPos = [512, 300]
\par 
\par }\pard\plain \s2\ql \li0\ri0\sb240\sa60\keepn\widctlpar\aspalpha\aspnum\faauto\outlinelevel1\adjustright\rin0\lin0\itap0\pararsid477651 \b\i\f1\fs28\lang3081\langfe1033\cgrid\langnp3081\langfenp1033 {\insrsid477651 {\*\bkmkstart _Toc152895974}
Mouse.X and Mouse.Y{\*\bkmkend _Toc152895974}
\par }\pard\plain \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid477651 \fs24\lang3081\langfe1033\cgrid\langnp3081\langfenp1033 {\insrsid477651 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid477651 {\insrsid477651 Sometimes it is easier to specify the mouse pointer location as a fraction of the screen size. That is good if we don\rquote 
t know how wide the screen is. Do that with mouse.x and mouse.y. Note that games which don\rquote 
t use the cursor will still ignore these values, so for some games you need to use DirectInputX and DirectInputY instead. This also makes no sense for multiple mice individually, since they share the cursor.
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid477651 {\insrsid477651 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid477651 {\insrsid477651 
Mouse.x is the horizontal position of the cursor, between 0 and 1. 0 is the left hand side of the primary monitor, and 1 is the right hand side. Note that if the cursor is on a different monitor it will be outside that range.
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid477651 {\insrsid477651 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid477651 {\insrsid477651 Mouse.y is the vertical 
position of the cursor, between 0 and 1. 0 is the top of the primary monitor, and 1 is the bottom. Again it may be outside this range if on another monitor.
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid477651 {\insrsid477651 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid477651 {\insrsid477651 Note that unlike the joystick, which goes from -1 to 1, the mouse only goes from 0 to 1. So to con
trol the cursor based on the joystick position you need to use something like the MapRange function. eg\'85
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid477651 {\insrsid477651 
\par mouse.x = MapRange(joystick.x, }{\insrsid9189977    }{\insrsid477651 -1, 1, }{\insrsid9189977    }{\insrsid477651 0, 1)
\par 
\par That will convert from the joystick\rquote s range of -1, 1 to the mouse\rquote s range of 0, 1.
\par 
\par }\pard\plain \s2\ql \li0\ri0\sb240\sa60\keepn\widctlpar\aspalpha\aspnum\faauto\outlinelevel1\adjustright\rin0\lin0\itap0\pararsid9114211 \b\i\f1\fs28\lang3081\langfe1033\cgrid\langnp3081\langfenp1033 {\insrsid477651 {\*\bkmkstart _Toc152895975}Mouse.}{
\insrsid9114211 ScreenFraction}{\insrsid477651 {\*\bkmkend _Toc152895975}
\par }\pard\plain \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid9114211 \fs24\lang3081\langfe1033\cgrid\langnp3081\langfenp1033 {\insrsid9114211 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid9114211 {\insrsid9114211 Mouse.ScreenFraction sets or reads both mouse.x and mouse.y at once, as a vector.
\par 
\par }\pard\plain \s2\ql \li0\ri0\sb240\sa60\keepn\widctlpar\aspalpha\aspnum\faauto\outlinelevel1\adjustright\rin0\lin0\itap0\pararsid9114211 \b\i\f1\fs28\lang3081\langfe1033\cgrid\langnp3081\langfenp1033 {\insrsid9114211 {\*\bkmkstart _Toc152895976}
Mouse.VirtualDesktopX and Mouse.VirtualDesktopY{\*\bkmkend _Toc152895976}
\par }\pard\plain \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid9114211 \fs24\lang3081\langfe1033\cgrid\langnp3081\langfenp1033 {\insrsid9114211 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid9114211 {\insrsid9114211 The problem with the mouse.x and mouse.y values is that you need to set them to less than 0 or greater than 1 to put 
the cursor on another monitor.
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid9114211 {\insrsid9114211 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid9114211 {\insrsid9114211 
If you want to set or read the position as a fraction of the entire Virtual Desktop, then you should use mouse.VirtualDesktopX and mouse.VirtualDesktopY instead.
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid9114211 {\insrsid9114211 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid9114211 {\insrsid9114211 Mouse.x is the horizontal position, with 0 being the left sid
e of the left-most monitor, and 1 being the right side of the right-most monitor.
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid9114211 {\insrsid9114211 
\par As you can guess, Mouse.y is the vertical position.
\par 
\par }\pard\plain \s2\ql \li0\ri0\sb240\sa60\keepn\widctlpar\aspalpha\aspnum\faauto\outlinelevel1\adjustright\rin0\lin0\itap0\pararsid9114211 \b\i\f1\fs28\lang3081\langfe1033\cgrid\langnp3081\langfenp1033 {\insrsid9114211 {\*\bkmkstart _Toc152895977}
Mouse.DesktopFraction{\*\bkmkend _Toc152895977}
\par }\pard\plain \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid9114211 \fs24\lang3081\langfe1033\cgrid\langnp3081\langfenp1033 {\insrsid9114211 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid9114211 {\insrsid9114211 Mouse.DesktopFraction is the vector equivalent for setting or reading both mouse.VirtualDesktopX and mouse.VirtualDesktopY at once.
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid9114211 {\insrsid9114211 
\par }\pard\plain \s2\ql \li0\ri0\sb240\sa60\keepn\widctlpar\aspalpha\aspnum\faauto\outlinelevel1\adjustright\rin0\lin0\itap0\pararsid9114211 \b\i\f1\fs28\lang3081\langfe1033\cgrid\langnp3081\langfenp1033 {\insrsid9114211 {\*\bkmkstart _Toc152895978}
Mouse Buttons{\*\bkmkend _Toc152895978}
\par }\pard\plain \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid9114211 \fs24\lang3081\langfe1033\cgrid\langnp3081\langfenp1033 {\insrsid9114211 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid9114211 {\insrsid9114211 PC Mice usually have between 2 and 5 buttons. You can read or set them in GlovePIE with:
\par 
\par mouse.LeftButton
\par mouse.MiddleButton
\par mouse.RightButton
\par mouse.XButton1
\par mouse.XButton2
\par 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid9114211 {\insrsid9114211 The X Buttons do various thing
s like move backwards and forwards in a web browser, and they are only found on special mice. Most modern games will support them, so they are very useful.
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid9114211 {\insrsid9114211 
\par }{\insrsid10647622 In theory some things in windows also support mouse buttons 6, 7 and 8.
\par 
\par You can set or read them with these values:
\par 
\par mouse.button6
\par mouse.button7
\par mouse.button8
\par 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid9114211 {\insrsid10647622 But current windows versions don\rquote 
t seem to allow you to set them. Reading them may theoretically work though, although in practice mice with more than 5 buttons probably work a different way.
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid9114211 {\insrsid9114211 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid9114211 {\insrsid10647622 N
ote that if you have multiple mice connected to Windows XP, you can read the buttons individually, with mouse1.LeftButton, mouse2.LeftButton, mouse3.LeftButton, etc. Without a number it reads the combination of all the mice.
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid9114211 {\insrsid10647622 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid9114211 {\insrsid10647622 All the mouse buttons can be s
et to either True or False. True is equivalent to 1, and false is equivalent to 0, except when you add true/false values it means \'93and\'94, and when you divide, it means \'93or\'94.
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid9114211 {\insrsid10647622 
\par For example:
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid9114211 {\insrsid10647622 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid9114211 {\insrsid10647622 midi.BassDrum1 = mouse.LeftButton+mouse.RightButton
\par 
\par will play the drum when you have both the left and right buttons held down at once.
\par 
\par }\pard\plain \s2\ql \li0\ri0\sb240\sa60\keepn\widctlpar\aspalpha\aspnum\faauto\outlinelevel1\adjustright\rin0\lin0\itap0\pararsid14120939 \b\i\f1\fs28\lang3081\langfe1033\cgrid\langnp3081\langfenp1033 {\insrsid10647622 {\*\bkmkstart _Toc152895979}
Mouse.DoubleClickTime{\*\bkmkend _Toc152895979}
\par }\pard\plain \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid9114211 \fs24\lang3081\langfe1033\cgrid\langnp3081\langfenp1033 {\insrsid10647622 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid9114211 {\insrsid10647622 
Mouse.DoubleClickTime is the maximum time between the clicks in double clicks that will still be recognised as a double click. If clicks are further apart than this time, they are two single clicks. }{\insrsid14120939 
It is the same for all the mice connected to the computer.}{\insrsid10647622 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid9114211 {\insrsid10647622 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid9114211 {\insrsid10647622 Actually GlovePIE }{\insrsid14120939 also }{\insrsid10647622 uses this same value for keyboard }{\insrsid14120939 and other double-}{
\insrsid10647622 clicks}{\insrsid14120939  using it\rquote s DoubleClicked( ) function}{\insrsid10647622 .
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid9114211 {\insrsid14120939 
\par It is in seconds by default, but in GlovePIE you can use any units you like and it will convert them.
\par 
\par }\pard\plain \s2\ql \li0\ri0\sb240\sa60\keepn\widctlpar\aspalpha\aspnum\faauto\outlinelevel1\adjustright\rin0\lin0\itap0\pararsid14120939 \b\i\f1\fs28\lang3081\langfe1033\cgrid\langnp3081\langfenp1033 {\insrsid14120939 {\*\bkmkstart _Toc152895980}
Mouse.IsDragging{\*\bkmkend _Toc152895980}
\par }\pard\plain \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid9114211 \fs24\lang3081\langfe1033\cgrid\langnp3081\langfenp1033 {\insrsid14120939 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid9114211 {\insrsid14120939 Mouse.IsDragging will be true while the mouse cursor is busy dragging something, and false when it isn\rquote t.
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid9114211 {\insrsid14120939 
\par }\pard\plain \s2\ql \li0\ri0\sb240\sa60\keepn\widctlpar\aspalpha\aspnum\faauto\outlinelevel1\adjustright\rin0\lin0\itap0\pararsid14120939 \b\i\f1\fs28\lang3081\langfe1033\cgrid\langnp3081\langfenp1033 {\insrsid14120939 {\*\bkmkstart _Toc152895981}
Mouse.Count{\*\bkmkend _Toc152895981}
\par }\pard\plain \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid14120939 \fs24\lang3081\langfe1033\cgrid\langnp3081\langfenp1033 {\insrsid14120939 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid14120939 {\insrsid14120939 Mouse.Count is the number of mice connected to the comp
uter. It only works on Windows XP, otherwise it will always return 1. This value doesn\rquote t count the extra Windows XP Pro Remote Desktop cursor, which can be accessed as Mouse0 on Windows XP Pro.
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid9114211 {\insrsid14120939 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid9114211 {\insrsid14120939 Mice are numbered from 1 to mouse.count. Plus an extra mostly useless mouse0 on XP Pro.
\par }\pard\plain \s2\ql \li0\ri0\sb240\sa60\keepn\widctlpar\aspalpha\aspnum\faauto\outlinelevel1\adjustright\rin0\lin0\itap0\pararsid14120939 \b\i\f1\fs28\lang3081\langfe1033\cgrid\langnp3081\langfenp1033 {\insrsid14120939 {\*\bkmkstart _Toc152895982}
Mouse.CursorVisible{\*\bkmkend _Toc152895982}
\par }\pard\plain \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid14120939 \fs24\lang3081\langfe1033\cgrid\langnp3081\langfenp1033 {\insrsid14120939 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid14120939 {\insrsid14120939 Mouse.CursorVisible is true when the cursor is visible, and false when it isn\rquote t. At least, that\rquote 
s the theory. Some programs and games can hide the cursor and this should tell you whether or not that\rquote s the case. This can\rquote t be used for individual mice. Use }{\b\insrsid14120939 Fake Cursors}{\insrsid14120939  for them instead.
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid14120939 {\insrsid14120939 
\par }\pard\plain \s2\ql \li0\ri0\sb240\sa60\keepn\widctlpar\aspalpha\aspnum\faauto\outlinelevel1\adjustright\rin0\lin0\itap0\pararsid14120939 \b\i\f1\fs28\lang3081\langfe1033\cgrid\langnp3081\langfenp1033 {\insrsid14120939 {\*\bkmkstart _Toc152895983}
Mouse.Cursor{\*\bkmkend _Toc152895983}
\par }\pard\plain \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid14120939 \fs24\lang3081\langfe1033\cgrid\langnp3081\langfenp1033 {\insrsid14120939 
\par Mouse.Cursor is equal to whatever cursor is currently being displayed. It can be the following values:
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid14120939 {\insrsid14120939 
\par {\listtext\pard\plain\lang3081\langfe1033\langnp3081\langfenp1033\insrsid14120939 \hich\af0\dbch\af0\loch\f0 1.\tab}}\pard \ql \fi-360\li720\ri0\widctlpar\jclisttab\tx720\aspalpha\aspnum\faauto\ls2\adjustright\rin0\lin720\itap0\pararsid14120939 {
\insrsid14120939 Arrow
\par {\listtext\pard\plain\lang3081\langfe1033\langnp3081\langfenp1033\insrsid5122824 \hich\af0\dbch\af0\loch\f0 2.\tab}}\pard \ql \fi-360\li720\ri0\widctlpar\jclisttab\tx720\aspalpha\aspnum\faauto\ls2\adjustright\rin0\lin720\itap0\pararsid14120939 {
\insrsid5122824 Cross}{\insrsid14120939 
\par {\listtext\pard\plain\lang3081\langfe1033\langnp3081\langfenp1033\insrsid14120939 \hich\af0\dbch\af0\loch\f0 3.\tab}I Beam
\par {\listtext\pard\plain\lang3081\langfe1033\langnp3081\langfenp1033\insrsid5122824 \hich\af0\dbch\af0\loch\f0 4.\tab}}{\insrsid5122824 Icon}{\insrsid14120939 
\par {\listtext\pard\plain\lang3081\langfe1033\langnp3081\langfenp1033\insrsid5122824 \hich\af0\dbch\af0\loch\f0 5.\tab}}{\insrsid5122824 Size
\par {\listtext\pard\plain\lang3081\langfe1033\langnp3081\langfenp1033\insrsid5122824 \hich\af0\dbch\af0\loch\f0 6.\tab}Size Diagonal   /
\par {\listtext\pard\plain\lang3081\langfe1033\langnp3081\langfenp1033\insrsid5122824 \hich\af0\dbch\af0\loch\f0 7.\tab}Size Vertical   |
\par {\listtext\pard\plain\lang3081\langfe1033\langnp3081\langfenp1033\insrsid5122824 \hich\af0\dbch\af0\loch\f0 8.\tab}Size Diagonal   \\
\par {\listtext\pard\plain\lang3081\langfe1033\langnp3081\langfenp1033\insrsid5122824 \hich\af0\dbch\af0\loch\f0 9.\tab}Size Horizontal \endash 
\par {\listtext\pard\plain\lang3081\langfe1033\langnp3081\langfenp1033\insrsid5122824 \hich\af0\dbch\af0\loch\f0 10.\tab}Up arrow
\par {\listtext\pard\plain\lang3081\langfe1033\langnp3081\langfenp1033\insrsid5122824 \hich\af0\dbch\af0\loch\f0 11.\tab}Hourglass
\par {\listtext\pard\plain\lang3081\langfe1033\langnp3081\langfenp1033\insrsid5122824 \hich\af0\dbch\af0\loch\f0 12.\tab}Symbol for no
\par {\listtext\pard\plain\lang3081\langfe1033\langnp3081\langfenp1033\insrsid5122824 \hich\af0\dbch\af0\loch\f0 13.\tab}Arrow + Hourglass (Application starting)
\par {\listtext\pard\plain\lang3081\langfe1033\langnp3081\langfenp1033\insrsid5122824 \hich\af0\dbch\af0\loch\f0 14.\tab}Arrow + ? (Help)
\par {\listtext\pard\plain\lang3081\langfe1033\langnp3081\langfenp1033\insrsid5122824 \hich\af0\dbch\af0\loch\f0 15.\tab}Size All +
\par {\listtext\pard\plain\lang3081\langfe1033\langnp3081\langfenp1033\insrsid5122824 \hich\af0\dbch\af0\loch\f0 16.\tab}Hand
\par {\listtext\pard\plain\lang3081\langfe1033\langnp3081\langfenp1033\insrsid5122824 \hich\af0\dbch\af0\loch\f0 17.\tab}Drag
\par {\listtext\pard\plain\lang3081\langfe1033\langnp3081\langfenp1033\insrsid5122824 \hich\af0\dbch\af0\loch\f0 18.\tab}Multi-Drag
\par {\listtext\pard\plain\lang3081\langfe1033\langnp3081\langfenp1033\insrsid5122824 \hich\af0\dbch\af0\loch\f0 19.\tab}Symbol for no again
\par {\listtext\pard\plain\lang3081\langfe1033\langnp3081\langfenp1033\insrsid5122824 \hich\af0\dbch\af0\loch\f0 20.\tab}SQL wait
\par }\pard \ql \li360\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0\pararsid5122824 {\insrsid5122824 99. None of the above
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid5122824 {\insrsid5122824 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid5122824 {\insrsid5122824 Setting this value doesn\rquote t really work yet, unless you keep setting it to different values like this:
\par 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid5122824 {\insrsid5122824 Mouse.Cursor = Random(21)
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid5122824 {\insrsid5122824 
\par }\pard\plain \s2\ql \li0\ri0\sb240\sa60\keepn\widctlpar\aspalpha\aspnum\faauto\outlinelevel1\adjustright\rin0\lin0\itap0\pararsid281599 \b\i\f1\fs28\lang3081\langfe1033\cgrid\langnp3081\langfenp1033 {\insrsid5122824 {\*\bkmkstart _Toc152895984}Mouse.}{
\insrsid281599 PermanentCursor}{\insrsid5122824 {\*\bkmkend _Toc152895984}
\par }\pard\plain \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid281599 \fs24\lang3081\langfe1033\cgrid\langnp3081\langfenp1033 {\insrsid281599 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid281599 {\insrsid281599 This can be used to set the cursor which should always be displayed when the mouse is over the PIE window. It will even stay that way after yo
ur program exits, until you restart PIE, or write a script to set it back to 0. It uses the same numbers as above.
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid281599 {\insrsid281599 
\par This isn\rquote t all that useful, but may be useful for displaying what state your script is currently in. eg.
\par 
\par if joystick1.Button1 then 
\par   mouse.PermanentCursor = 11
\par else
\par   mouse.PermanentCursor = 0
\par end if
\par 
\par }\pard\plain \s2\ql \li0\ri0\sb240\sa60\keepn\widctlpar\aspalpha\aspnum\faauto\outlinelevel1\adjustright\rin0\lin0\itap0\pararsid281599 \b\i\f1\fs28\lang3081\langfe1033\cgrid\langnp3081\langfenp1033 {\insrsid281599 {\*\bkmkstart _Toc152895985}
Swallowing the Mouse{\*\bkmkend _Toc152895985}
\par }\pard\plain \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid281599 \fs24\lang3081\langfe1033\cgrid\langnp3081\langfenp1033 {\insrsid281599 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid281599 {\insrsid281599 
Not as tasty as it sounds. This is actually about stopping windows from receiving real messages from the System mouse (that is from all the real mice), }{\insrsid15930272 but still receive}{\insrsid281599  those messages that are set by GlovePIE.
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid281599 {\insrsid281599 
\par This only works on Windows 2000 or above. And I don\rquote t think it works with DirectInput games.
\par 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid281599 {\insrsid281599 It is mainly for use with fake cursors, or with multiple mice. But it can also be used to disable the mouse for any other purpose.
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid281599 {\insrsid281599 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid281599 {\insrsid281599 
Mouse.Swallow can be set to true to disable the entire mouse, or false to not do that. This prevents the mouse from doing anything in Windows. But you can still set Mouse.LeftButton or Mouse.CursorPosX or whatever to control the mouse}{\insrsid15930272 
 cursor. It just won\rquote t be controlled by any of the real mice.}{\insrsid281599 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid281599 {\insrsid15930272 
\par Mouse.SwallowButtons is the same, but it only disables the buttons.
\par 
\par Mouse.SwallowMovement only disables movement.
\par 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid281599 {\insrsid15930272 Mouse.SwallowWheels only disables scroll-wheels.
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid281599 {\insrsid15930272 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid281599 {\insrsid15930272 An unfortunate side-effect of swallowing the mouse is that clicking on GlovePIE\rquote 
s title bar by controlling the mouse with GlovePIE will temporarily make it hang until you press Alt+Tab, or wait umpteen seconds.
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid281599 {\insrsid15930272 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid281599 {\insrsid15930272 Swallowing the mouse is good for when you want one mouse to control the real curso
r, and all the other mice to only control fake cursors. The trick is the swallow the mouse, then set all the mouse values to match mouse1. Then you set the fake cursors to match mouse2.
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid281599 {\insrsid15930272 
\par See the MouseParty.PIE script for an example.
\par 
\par }\pard\plain \s2\ql \li0\ri0\sb240\sa60\keepn\widctlpar\aspalpha\aspnum\faauto\outlinelevel1\adjustright\rin0\lin0\itap0\pararsid15930272 \b\i\f1\fs28\lang3081\langfe1033\cgrid\langnp3081\langfenp1033 {\insrsid15930272 {\*\bkmkstart _Toc152895986}
Mouse.Present}{\insrsid281599 {\*\bkmkend _Toc152895986}
\par }\pard\plain \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid281599 \fs24\lang3081\langfe1033\cgrid\langnp3081\langfenp1033 {\insrsid281599 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid281599 {\insrsid15930272 Last, b
ut not least, you can tell if there actually is at least one mouse plugged in by using Mouse.Present. It will be true if there is a mouse (or track-pad, or other mouse-like device), and false if there isn\rquote t.}{\insrsid15930272\charrsid281599 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15930272 {\insrsid281599 
\par }\pard\plain \s1\ql \li0\ri0\sb240\sa60\keepn\widctlpar\aspalpha\aspnum\faauto\outlinelevel0\adjustright\rin0\lin0\itap0\pararsid8995982 \b\f1\fs32\lang3081\langfe1033\kerning32\cgrid\langnp3081\langfenp1033 {\insrsid15930272 \page 
{\*\bkmkstart _Toc152895987}Fake Cursors{\*\bkmkend _Toc152895987}
\par }\pard\plain \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15930272 \fs24\lang3081\langfe1033\cgrid\langnp3081\langfenp1033 {\insrsid15930272 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15930272 {\insrsid15930272 In addition to the real mouse cu
rsor, GlovePIE can show multiple fake cursors. These fake cursors look and behave just like the real cursor, and can do most of the same things. They are not quite perfected yet though.
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15930272 {\insrsid15930272 
\par Fake cursors will look funny (non-transparent) if you don\rquote t have at least Windows 2000.
\par 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15930272 {\insrsid9189977 
Fake cursors are identified by a coloured number in the bottom-right hand corner. Different numbers are different colours, but it repeats eventually.
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15930272 {\insrsid9189977\charrsid15930272 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15930272 {\insrsid8995982 Fake cursors could be controlled by multiple separate mice, or they could be controll
ed by other devices, like keyboards, joysticks, VR Gloves, speech, or whatever. They can even be used when you just want to display values graphically in GlovePIE, for debugging or whatever.
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15930272 {\insrsid8995982 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15930272 {\insrsid8995982 You can create fake cursors with a number between 0 and infinity. You don\rquote 
t have to use them sequentially. You can show only fake cursor 3 and fake cursor 5 if you want. But using big numbers will waste memory.}{\insrsid15930272 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15930272 {\insrsid8995982 
\par }{\insrsid9189977 See the MouseParty.PIE script for an example of using fake cursors.
\par 
\par }{\insrsid8995982 Fake cursors have much the same properties as the ones for }{\b\insrsid8995982 mouse}{\insrsid8995982 .
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15930272 {\insrsid8995982 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15930272 {\insrsid8995982 Note that the special properties for fake cursors aren\rquote t displayed in the code-completion box for cursor, the box }{\insrsid7105692 
only }{\insrsid8995982 displays the same properties as for }{\b\insrsid8995982 mouse}{\insrsid8995982  because I was too lazy to fix it.}{\insrsid8995982\charrsid8995982 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15930272 {\insrsid8995982 
\par }{\insrsid7105692 But s}{\insrsid8995982 ome of the new properties are:
\par 
\par }\pard\plain \s2\ql \li0\ri0\sb240\sa60\keepn\widctlpar\aspalpha\aspnum\faauto\outlinelevel1\adjustright\rin0\lin0\itap0\pararsid8995982 \b\i\f1\fs28\lang3081\langfe1033\cgrid\langnp3081\langfenp1033 {\insrsid8995982 {\*\bkmkstart _Toc152895988}
Cursor2.visible{\*\bkmkend _Toc152895988}
\par }\pard\plain \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid8995982 \fs24\lang3081\langfe1033\cgrid\langnp3081\langfenp1033 {\insrsid8995982 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid8995982 {\insrsid8995982 You need to set a fake cursor to visible if you want to be able to see it. Somewhere in your script write:
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid8995982 {\insrsid8995982 
\par Cursor2.Visible = true
\par 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid8995982 {\insrsid8995982 If you want to see fake cursor number 2. You don\rquote t have to use number 2, you can use any number. But u
sing both fake cursor 1 and a real cursor is confusing, since people think of the real cursor as being cursor 1, even though it isn\rquote t.
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid8995982 {\insrsid8995982 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid8995982 {\insrsid8995982 Making a cursor visible doesn\rquote t make it do anything. Fake cursors don\rquote t respond to mouse movements. They only go where t
hey are told to go, and click when they are told to click.
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid8995982 {\insrsid8995982 
\par }\pard\plain \s2\ql \li0\ri0\sb240\sa60\keepn\widctlpar\aspalpha\aspnum\faauto\outlinelevel1\adjustright\rin0\lin0\itap0\pararsid7105692 \b\i\f1\fs28\lang3081\langfe1033\cgrid\langnp3081\langfenp1033 {\insrsid8995982 {\*\bkmkstart _Toc152895989}
Cursor2.Shift}{\insrsid7105692  and Cursor2.Ctrl}{\insrsid8995982 {\*\bkmkend _Toc152895989}
\par }\pard\plain \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid7105692 \fs24\lang3081\langfe1033\cgrid\langnp3081\langfenp1033 {\insrsid7105692 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid7105692 {\insrsid7105692 
Sometimes applications respond differently to Shift-clicks or Ctrl-clicks. That is when you hold down shift or control, or both, while you click.
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid7105692 {\insrsid7105692 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid7105692 {\insrsid7105692 Most non-game applications don\rquote 
t read the keyboard to check this though. Instead they rely on the information that comes with the mouse message to determine whether shift was held down or not.
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid7105692 {\insrsid7105692 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid7105692 {\insrsid7105692 The good thing about that is that fake cursors can have their own Shift-Click a
nd Control-Click features without using the real shift or control keys. It also means multiple users can be regular-clicking and shift-clicking at the same time without interfering with each other.
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid7105692 {\insrsid7105692 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid7105692 {\insrsid7105692 So to shift-click with a fake cursor you need to set Cursor2.Shift to true before the mouse button is set. It isn\rquote 
t enough to hold down the real shift key.
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid7105692 {\insrsid7105692 
\par Cursor2.shift and Cursor2.ctrl can be either true or false.
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid7105692 {\insrsid7105692 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid7105692 {\insrsid7105692 For example, to control cursor2 with a joystick you might write:
\par 
\par Cursor2.Visible = true
\par Cursor2.Shift = joystick.Button4
\par Cursor2.Ctrl = joystick.Button5
\par Cursor2.LeftButton = joystick.Button1
\par Cursor2.RightButton = joystick.Button2
\par Cursor2.MiddleButton = joystick.Button3
\par }{\insrsid9189977 Cursor2.x = Map}{\insrsid7105692 Range(joystick.x, }{\insrsid9189977  }{\insrsid7105692 -1, 1, }{\insrsid9189977   }{\insrsid7105692 0, 1)
\par Cursor2.y = MapRange(joystick.y, }{\insrsid9189977  }{\insrsid7105692 -1, 1, }{\insrsid9189977   }{\insrsid7105692 0, 1)
\par }{\insrsid7105692\charrsid7105692 
\par }{\insrsid7105692 To shift click you would need to hold down button 4 while you click button 1.
\par 
\par }\pard\plain \s1\ql \li0\ri0\sb240\sa60\keepn\widctlpar\aspalpha\aspnum\faauto\outlinelevel0\adjustright\rin0\lin0\itap0\pararsid721398 \b\f1\fs32\lang3081\langfe1033\kerning32\cgrid\langnp3081\langfenp1033 {\insrsid10427906 \page }{\insrsid721398 
{\*\bkmkstart _Toc152895990}Keyboard}{\insrsid7105692 {\*\bkmkend _Toc152895990}
\par }\pard\plain \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid721398 \fs24\lang3081\langfe1033\cgrid\langnp3081\langfenp1033 {\insrsid721398 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid721398 {\insrsid721398 You can read or write to the keyboard using the keyboard object, or just by using the name of the key without anything in front of it.
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid721398 {\insrsid721398 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid721398 {\insrsid8928437 You can emulate keys that don\rquote t actually exist on your keyboard if you want. For example the multimedia keys, or the Excel key, etc.

\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid721398 {\insrsid8928437 
\par }{\insrsid721398 Keyboard emulation will not trigger the auto-repeat you normally get when you hold down a key.
\par 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid721398 {\insrsid721398 Keyboard emulation doesn\rquote t work as well on Windows 9x, because it won\rquote t work in DirectInput games on 9x.
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid721398 {\insrsid721398 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid721398 {\insrsid721398 
Keys can be either true or false. True when they are down and false when they are up. Some keys (like Pause) only tell you when they are pressed but not released, so the computer assumes they are released soon after.
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid721398 {\insrsid721398 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid721398 {\insrsid15235155 Unless you are using Windows 9x, the keyboard keys will be the actual physical keys, ignoring whatever keyboard layout you are using.
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid721398 {\insrsid15235155 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid721398 {\insrsid721398 Keyboard values, for example the F1 key can be set or read in various ways:
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid721398 {\insrsid721398 
\par Keyboard.F1
\par Key.F1
\par F1
\par 
\par There are also special ways of writing key combinations:
\par 
\par ^C
\par Ctrl+C
\par Ctrl and C
\par 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid721398 {\insrsid15235155 Also most keys have multiple names, which include most of the abbreviations you see written on the keys, as well as the full names.}{
\insrsid5463831  So just the guess key names and you will be fine.}{\insrsid15235155 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid721398 {\insrsid8928437 
\par }\pard\plain \s2\ql \li0\ri0\sb240\sa60\keepn\widctlpar\aspalpha\aspnum\faauto\outlinelevel1\adjustright\rin0\lin0\itap0\pararsid7353286 \b\i\f1\fs28\lang3081\langfe1033\cgrid\langnp3081\langfenp1033 {\insrsid7353286 {\*\bkmkstart _Toc152895991}
Special Keyboard Fields{\*\bkmkend _Toc152895991}
\par }\pard\plain \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid7353286 \fs24\lang3081\langfe1033\cgrid\langnp3081\langfenp1033 {\insrsid7353286 
You can read or set Keyboard.ScanCode or Keyboard.VK to get or set the scancode or the virtual key code of the key that is currently down. They will be 0 when no key is down.
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid7353286 {\insrsid7353286 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid7353286 {\insrsid7353286 You can read Keyboard.Row to find out t
he row of the key that is currently down. It returns -1 if no key is down, or if it has no well-defined position (like backslash).
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid7353286 {\insrsid7353286 
\par You can read or set Keyboard.AnyKey to tell if any key is currently down.
\par 
\par Set Keyboard.RawInput to force GlovePIE to use RawInput instead of DirectInput for the keyboard.
\par }\pard\plain \s2\ql \li0\ri0\sb240\sa60\keepn\widctlpar\aspalpha\aspnum\faauto\outlinelevel1\adjustright\rin0\lin0\itap0\pararsid8928437 \b\i\f1\fs28\lang3081\langfe1033\cgrid\langnp3081\langfenp1033 {\insrsid8928437 {\*\bkmkstart _Toc152895992}
Multiple Keyboards{\*\bkmkend _Toc152895992}
\par }\pard\plain \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid8928437 \fs24\lang3081\langfe1033\cgrid\langnp3081\langfenp1033 {\insrsid8928437 You can read from multiple keyboard}{\insrsid7226931 s}{\insrsid8928437 
 with GlovePIE, if you have Windo}{\insrsid7226931 ws XP. You will probably need extra USB keyboards. Multiple keyboards are rare, and not especially useful. You can\rquote t write to multiple keyboards, because I haven\rquote 
t seen any programs other than mine that can tell which keyboard you used.}{\insrsid8928437 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid8928437 {\insrsid7226931 
\par Just put a number after the word keyboard, like this:
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid8928437 {\insrsid7226931 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid8928437 {\insrsid7226931 midi.BassDrum1 = keyboard2.Enter
\par 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid8928437 {\insrsid7433640 It uses RawInput instead of DirectInput}{\insrsid7226931  for readi
ng multiple keyboards, so sometimes you can get better or worse results just by changing one of your \'93}{\b\insrsid7226931\charrsid148429 keyboard}{\insrsid7226931 \'94s to a \'93}{\b\insrsid7226931\charrsid148429 keyboard1}{\insrsid7226931 \'94
 so that it u}{\insrsid148429 ses RawInput}{\insrsid7226931  instead.}{\insrsid148429  You only need to mention keyboard1 once in your script to force it to use RawInput. RawInput will conflict with some exclusive-mode DirectInput software.}{
\insrsid7226931 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid8928437 {\insrsid2426436 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid8928437 {\insrsid2426436 You can tell how many keyboards there are with Keyboard.Count. You can tell whether a keyboard exists with Keyboard2.Exists.
\par }\pard\plain \s2\ql \li0\ri0\sb240\sa60\keepn\widctlpar\aspalpha\aspnum\faauto\outlinelevel1\adjustright\rin0\lin0\itap0\pararsid8928437 \b\i\f1\fs28\lang3081\langfe1033\cgrid\langnp3081\langfenp1033 {\insrsid8928437 {\*\bkmkstart _Toc152895993}
Keys that can\rquote t be used{\*\bkmkend _Toc152895993}
\par }\pard\plain \s3\ql \li0\ri0\sb240\sa60\keepn\widctlpar\aspalpha\aspnum\faauto\outlinelevel2\adjustright\rin0\lin0\itap0\pararsid16730358 \b\f1\fs26\lang3081\langfe1033\cgrid\langnp3081\langfenp1033 {\insrsid16730358 F Lock
\par }\pard\plain \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid8928437 \fs24\lang3081\langfe1033\cgrid\langnp3081\langfenp1033 {\insrsid8928437 The }{\insrsid7226931 (stupid bloody) }{\b\insrsid16730358\charrsid16730358 F }
{\b\insrsid8928437\charrsid16730358 Lock}{\insrsid8928437  key can\rquote t be read or simulated. It doesn\rquote t send information to the computer when pressed. It just changes what the other keys do.
\par }\pard\plain \s3\ql \li0\ri0\sb240\sa60\keepn\widctlpar\aspalpha\aspnum\faauto\outlinelevel2\adjustright\rin0\lin0\itap0\pararsid16730358 \b\f1\fs26\lang3081\langfe1033\cgrid\langnp3081\langfenp1033 {\insrsid16730358 My Documents
\par }\pard\plain \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid16730358 \fs24\lang3081\langfe1033\cgrid\langnp3081\langfenp1033 {\insrsid16730358 The }{\b\insrsid16730358 My Documents}{\insrsid16730358  key doesn\rquote 
t seem to have a scan-code or an AppCommand, so it is not useable with GlovePIE.
\par }\pard\plain \s3\ql \li0\ri0\sb240\sa60\keepn\widctlpar\aspalpha\aspnum\faauto\outlinelevel2\adjustright\rin0\lin0\itap0\pararsid12206336 \b\f1\fs26\lang3081\langfe1033\cgrid\langnp3081\langfenp1033 {\insrsid12206336 Messenger}{\insrsid727225 
\par }\pard\plain \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid12206336 \fs24\lang3081\langfe1033\cgrid\langnp3081\langfenp1033 {\insrsid12206336 The }{\b\insrsid12206336 Messenger}{\insrsid12206336  key doesn\rquote 
t seem to work with GlovePIE.}{\insrsid12206336\charrsid12206336 
\par }\pard\plain \s3\ql \li0\ri0\sb240\sa60\keepn\widctlpar\aspalpha\aspnum\faauto\outlinelevel2\adjustright\rin0\lin0\itap0\pararsid16730358 \b\f1\fs26\lang3081\langfe1033\cgrid\langnp3081\langfenp1033 {\insrsid16730358 Sleep, LogOff, Power
\par }\pard\plain \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid8928437 \fs24\lang3081\langfe1033\cgrid\langnp3081\langfenp1033 {\insrsid8928437 The }{\b\insrsid8928437\charrsid16730358 Sleep}{\insrsid8928437 , }{
\b\insrsid8928437\charrsid16730358 LogOff}{\insrsid8928437  and }{\b\insrsid8928437\charrsid16730358 Power}{\insrsid8928437  keys shouldn\rquote t be used because they turn everything off.}{\insrsid16730358 
 Which kind of makes responding to them pointless.}{\insrsid12745068  But the }{\b\insrsid12745068\charrsid8411714 Sleep}{\insrsid12745068  key does actually work in GlovePIE.}{\insrsid8928437 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid8928437 {\insrsid16730358 
\par }\pard\plain \s2\ql \li0\ri0\sb240\sa60\keepn\widctlpar\aspalpha\aspnum\faauto\outlinelevel1\adjustright\rin0\lin0\itap0\pararsid16730358 \b\i\f1\fs28\lang3081\langfe1033\cgrid\langnp3081\langfenp1033 {\insrsid16730358 {\*\bkmkstart _Toc152895994}
Keys that sort of work{\*\bkmkend _Toc152895994}
\par }\pard\plain \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid8928437 \fs24\lang3081\langfe1033\cgrid\langnp3081\langfenp1033 {\insrsid8928437 
You can use the multimedia keys, and application keys, but they may not work as well as other keys. You can\rquote t usually tell how long they are held down.}{\insrsid16730358  You can\rquote t tell how long the Pause key was held down either.}{
\insrsid8928437 
\par }\pard\plain \s2\ql \li0\ri0\sb240\sa60\keepn\widctlpar\aspalpha\aspnum\faauto\outlinelevel1\adjustright\rin0\lin0\itap0\pararsid721398 \b\i\f1\fs28\lang3081\langfe1033\cgrid\langnp3081\langfenp1033 {\insrsid721398 {\*\bkmkstart _Toc152895995}
Unicode Characters{\*\bkmkend _Toc152895995}
\par }\pard\plain \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid721398 \fs24\lang3081\langfe1033\cgrid\langnp3081\langfenp1033 {\insrsid721398 Yo
u can also simulate Unicode characters. This allows you to make typing programs for other languages, or to type special symbols or letters.
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid721398 {\insrsid721398 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid721398 {\insrsid721398 The possible values are the word \'93Unicode\'94 followed by }{\insrsid15235155 the }{\insrsid721398 
four hexadecimal digits for that character. }{\insrsid15235155 See }{\field{\*\fldinst {\insrsid15235155  HYPERLINK "http://www.unicode.org" }{\insrsid8473020 {\*\datafield 
00d0c9ea79f9bace118c8200aa004ba90b0200000017000000100000007700770077002e0075006e00690063006f00640065002e006f00720067000000e0c9ea79f9bace118c8200aa004ba90b3000000068007400740070003a002f002f007700770077002e0075006e00690063006f00640065002e006f00720067002f00
00000000}}}{\fldrslt {\cs15\ul\cf2\insrsid15235155\charrsid13584488 www.unicode.org}}}{\insrsid15235155  for tables. }{\insrsid721398 For example, to type the Greek letter alpha when the user presses the joystick button:
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid721398 {\insrsid721398 
\par }{\insrsid721398\charrsid721398 key.Unicode03B1}{\insrsid721398  = joystick.button1
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid721398 {\insrsid15235155 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid721398 {\insrsid15235155 This may not work on all programs or on all operating systems. 
\par }\pard\plain \s2\ql \li0\ri0\sb240\sa60\keepn\widctlpar\aspalpha\aspnum\faauto\outlinelevel1\adjustright\rin0\lin0\itap0\pararsid721398 \b\i\f1\fs28\lang3081\langfe1033\cgrid\langnp3081\langfenp1033 {\insrsid15235155 {\*\bkmkstart _Toc152895996}Number K
eys{\*\bkmkend _Toc152895996}
\par }\pard\plain \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15235155 \fs24\lang3081\langfe1033\cgrid\langnp3081\langfenp1033 {\insrsid15235155 
The main number keys, with the symbols above them (eg. 1!, 2@, 3#, 4$ ) are named:
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15235155 {\insrsid15235155 \'93}{\b\insrsid15235155\charrsid8411714 one}{\insrsid15235155 \'94, \'93}{\b\insrsid15235155\charrsid8411714 two}{\insrsid15235155 \'94, 
\'93}{\b\insrsid15235155\charrsid8411714 three}{\insrsid15235155 \'94, \'93}{\b\insrsid15235155\charrsid8411714 four}{\insrsid15235155 \'94, etc.
\par 
\par eg.
\par 
\par Key.One = Joystick.Button1
\par 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15235155 {\insrsid15235155 The other number keys, on the numeric keypad, are named }{\b\insrsid15235155\charrsid8411714 NumPad1}{\insrsid15235155 , }{
\b\insrsid15235155\charrsid8411714 NumPad2}{\insrsid15235155 , }{\b\insrsid15235155\charrsid8411714 NumPad3}{\insrsid15235155 , }{\b\insrsid15235155\charrsid8411714 NumPad4}{\insrsid15235155 , etc.
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15235155 {\insrsid15235155 
\par Most other keys are named according to what they have written on them.}{\insrsid15235155\charrsid15235155 
\par }\pard\plain \s2\ql \li0\ri0\sb240\sa60\keepn\widctlpar\aspalpha\aspnum\faauto\outlinelevel1\adjustright\rin0\lin0\itap0\pararsid721398 \b\i\f1\fs28\lang3081\langfe1033\cgrid\langnp3081\langfenp1033 {\insrsid15235155 {\*\bkmkstart _Toc152895997}Top Row}{
\insrsid721398 {\*\bkmkend _Toc152895997}
\par }\pard\plain \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid721398 \fs24\lang3081\langfe1033\cgrid\langnp3081\langfenp1033 {\b\insrsid15235155\charrsid8411714 Escape}{\b\insrsid721398\charrsid8411714 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid721398 {\b\insrsid15235155\charrsid8411714 F1, F2, F3, F4, F5, F6, F7, F8, F9, F10, F11, F12, F13, F14, F15, F16, F17, F18, F19, F20, F21, F22, F23, F24}{
\b\insrsid721398\charrsid8411714 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid721398 {\b\insrsid15235155\charrsid8411714 PrintScreen}{\insrsid15235155 , }{\b\insrsid15235155\charrsid8411714 SysReq}{\insrsid15235155 , }{
\b\insrsid15235155\charrsid8411714 Pause}{\insrsid15235155 , }{\b\insrsid15235155\charrsid8411714 Break}{\insrsid15235155 , }{\b\insrsid15235155\charrsid8411714 ScrollLock}{\insrsid15235155 
\par }{\insrsid8928437 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid721398 {\insrsid8928437 NOTE: }{\b\insrsid8928437\charrsid8411714 Pause}{\insrsid8928437  sh
ould not be confused with the new Play and Pause keys for music players. This }{\b\insrsid8928437\charrsid8411714 Pause}{\insrsid8928437  is the original Pause key that has been on every keyboard since the beginning. The new Pause key is called }{
\b\insrsid8928437\charrsid8411714 MediaPause}{\insrsid8928437 .
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid721398 {\insrsid8928437 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid721398 {\insrsid8928437 This }{\b\insrsid8928437\charrsid8411714 Pause}{\insrsid8928437  key (and coincidently also the }{\b\insrsid8928437\charrsid8411714 MediaPause
}{\insrsid8928437  one) doesn\rquote t usually tell you when it is r}{\insrsid16730358 eleased. Which means GlovePIE}{\insrsid8928437  will guess.
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid721398 {\insrsid15235155 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid721398 {\b\insrsid7226931\charrsid8411714 SysReq}{\insrsid7226931  and }{\b\insrsid7226931\charrsid8411714 Break}{\insrsid7226931  used to be separate keys. Then the 
}{\b\insrsid7226931\charrsid8411714 Break}{\insrsid7226931  key got moved onto }{\b\insrsid7226931\charrsid8411714 NumLock}{\insrsid7226931 . Then the }{\b\insrsid7226931\charrsid8411714 Break}{\insrsid7226931  key got moved again onto }{
\b\insrsid7226931\charrsid8411714 Pause}{\insrsid7226931 . Then the }{\b\insrsid7226931\charrsid8411714 SysReq}{\insrsid7226931  got moved onto }{\b\insrsid7226931\charrsid8411714 PrintScreen}{\insrsid7226931 
. But the computer still regards them as separate keys. }{\b\insrsid7226931\charrsid8411714 Break}{\insrsid7226931  is }{\b\insrsid7226931\charrsid8411714 Ctrl+Pause}{\insrsid7226931  and }{\b\insrsid7226931\charrsid8411714 SysReq}{\insrsid7226931  is }{
\b\insrsid7226931\charrsid8411714 Alt+PrintScreen}{\insrsid7226931 .
\par }\pard\plain \s2\ql \li0\ri0\sb240\sa60\keepn\widctlpar\aspalpha\aspnum\faauto\outlinelevel1\adjustright\rin0\lin0\itap0\pararsid15235155 \b\i\f1\fs28\lang3081\langfe1033\cgrid\langnp3081\langfenp1033 {\insrsid15235155 {\*\bkmkstart _Toc152895998}
Number Row{\*\bkmkend _Toc152895998}
\par }\pard\plain \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid721398 \fs24\lang3081\langfe1033\cgrid\langnp3081\langfenp1033 {\b\insrsid15235155\charrsid8411714 
Console, One, Two, Three, Four, Five, Six, Seven, Eight, Nine, Zero, }{\b\insrsid5463831\charrsid8411714 Minus, Equals, Backslash, Backspace}{\b\insrsid15235155\charrsid8411714 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid721398 {\insrsid5463831 
\par }\pard\plain \s2\ql \li0\ri0\sb240\sa60\keepn\widctlpar\aspalpha\aspnum\faauto\outlinelevel1\adjustright\rin0\lin0\itap0\pararsid5463831 \b\i\f1\fs28\lang3081\langfe1033\cgrid\langnp3081\langfenp1033 {\insrsid5463831 {\*\bkmkstart _Toc152895999}Qwerty Row
{\*\bkmkend _Toc152895999}
\par }\pard\plain \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid5463831 \fs24\lang3081\langfe1033\cgrid\langnp3081\langfenp1033 {\b\insrsid5463831\charrsid8411714 Tab, Q, W, E, R,
 T, Y, U, I, O, P, LeftBracket, RightBracket, Backslash
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid5463831 {\insrsid5463831 
\par }\pard\plain \s2\ql \li0\ri0\sb240\sa60\keepn\widctlpar\aspalpha\aspnum\faauto\outlinelevel1\adjustright\rin0\lin0\itap0\pararsid5463831 \b\i\f1\fs28\lang3081\langfe1033\cgrid\langnp3081\langfenp1033 {\insrsid5463831 {\*\bkmkstart _Toc152896000}Next Row
{\*\bkmkend _Toc152896000}
\par }\pard\plain \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid5463831 \fs24\lang3081\langfe1033\cgrid\langnp3081\langfenp1033 {\b\insrsid5463831\charrsid8411714 
CapsLock, A, S, D, F, G, H, J, K, L, Semicolon, Apostrophe, Enter
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid5463831 {\insrsid5463831\charrsid5463831 
\par }\pard\plain \s2\ql \li0\ri0\sb240\sa60\keepn\widctlpar\aspalpha\aspnum\faauto\outlinelevel1\adjustright\rin0\lin0\itap0\pararsid5463831 \b\i\f1\fs28\lang3081\langfe1033\cgrid\langnp3081\langfenp1033 {\insrsid5463831 {\*\bkmkstart _Toc152896001}Next Row}{
\insrsid15235155 {\*\bkmkend _Toc152896001}
\par }\pard\plain \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid721398 \fs24\lang3081\langfe1033\cgrid\langnp3081\langfenp1033 {\b\insrsid5463831\charrsid8411714 LeftShift, Z, X, C, V, B, N, M, Comma, Dot, Slash, RightShift}
{\b\insrsid15235155\charrsid8411714 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid721398 {\insrsid5463831 
\par }\pard\plain \s2\ql \li0\ri0\sb240\sa60\keepn\widctlpar\aspalpha\aspnum\faauto\outlinelevel1\adjustright\rin0\lin0\itap0\pararsid5463831 \b\i\f1\fs28\lang3081\langfe1033\cgrid\langnp3081\langfenp1033 {\insrsid5463831 {\*\bkmkstart _Toc152896002}
Space Bar Row{\*\bkmkend _Toc152896002}
\par }\pard\plain \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid5463831 \fs24\lang3081\langfe1033\cgrid\langnp3081\langfenp1033 {\b\insrsid5463831\charrsid8411714 LeftCtrl, LeftWindows, LeftAlt, Space
, RightAlt, RightWindows, AppMenu, RightCtrl
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid5463831 {\insrsid5463831 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid5463831 {\insrsid16730358 The }{\b\insrsid16730358\charrsid8411714 AppMenu}{\insrsid16730358 
 key is the pointless key with a picture of a menu that works like the right mouse button.
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid5463831 {\insrsid16730358 Don\rquote t assume keyboards have a }{\b\insrsid16730358\charrsid8411714 RightWindows}{\insrsid16730358  keys. New ones only have }{
\b\insrsid16730358\charrsid8411714 LeftWindows}{\insrsid16730358 .
\par }\pard\plain \s2\ql \li0\ri0\sb240\sa60\keepn\widctlpar\aspalpha\aspnum\faauto\outlinelevel1\adjustright\rin0\lin0\itap0\pararsid5463831 \b\i\f1\fs28\lang3081\langfe1033\cgrid\langnp3081\langfenp1033 {\insrsid5463831 {\*\bkmkstart _Toc152896003}Cursor Pad
{\*\bkmkend _Toc152896003}
\par }\pard\plain \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid5463831 \fs24\lang3081\langfe1033\cgrid\langnp3081\langfenp1033 {\insrsid5463831 NOTE!!!! The }{\b\insrsid5463831\charrsid8411714 End}{\insrsid5463831 
 key is tricky because it is also part of the GlovePIE language. Using }{\b\insrsid5463831\charrsid8411714 Key.End}{\insrsid5463831  is probably least confusing.
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid5463831 {\insrsid5463831\charrsid5463831 
\par }{\b\insrsid5463831\charrsid8411714 Home, End, PageUp, PageDown, Insert, Delete
\par }{\b\insrsid16730358\charrsid8411714 Up, Down, Left, Right
\par }{\insrsid5463831 
\par }\pard\plain \s2\ql \li0\ri0\sb240\sa60\keepn\widctlpar\aspalpha\aspnum\faauto\outlinelevel1\adjustright\rin0\lin0\itap0\pararsid5463831 \b\i\f1\fs28\lang3081\langfe1033\cgrid\langnp3081\langfenp1033 {\insrsid5463831 {\*\bkmkstart _Toc152896004}
Numeric Key Pad{\*\bkmkend _Toc152896004}
\par }\pard\plain \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid5463831 \fs24\lang3081\langfe1033\cgrid\langnp3081\langfenp1033 {\b\insrsid5463831\charrsid8411714 NumLock, Divide, Multiply, NumPadMinus
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid5463831 {\b\insrsid5463831\charrsid8411714 NumPad7, NumPad8, NumPad9, NumPadPlus
\par NumPad4, NumPad5, NumPad6, NumPadPlus
\par NumPad1, NumPad2, NumPad3, NumPadEnter
\par NumPad0, NumPadDot, NumPadEnter
\par }{\insrsid5463831 
\par }\pard\plain \s2\ql \li0\ri0\sb240\sa60\keepn\widctlpar\aspalpha\aspnum\faauto\outlinelevel1\adjustright\rin0\lin0\itap0\pararsid7226931 \b\i\f1\fs28\lang3081\langfe1033\cgrid\langnp3081\langfenp1033 {\insrsid7226931 {\*\bkmkstart _Toc152896005}
Stupid Bloody F-Lock Function Keys{\*\bkmkend _Toc152896005}
\par }\pard\plain \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid7226931 \fs24\lang3081\langfe1033\cgrid\langnp3081\langfenp1033 {\b\insrsid7226931\charrsid8411714 Help, Undo, Redo, New, Open, Close, Reply, F}{
\b\insrsid7433640\charrsid8411714 or}{\b\insrsid7226931\charrsid8411714 w}{\b\insrsid7433640\charrsid8411714 ar}{\b\insrsid7226931\charrsid8411714 d, Send, Spell, Save, Print
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid7226931 {\insrsid7226931 
\par }{\insrsid8411714 These all work in GlovePIE, but they don\rquote t tell you when they are released.
\par }\pard\plain \s2\ql \li0\ri0\sb240\sa60\keepn\widctlpar\aspalpha\aspnum\faauto\outlinelevel1\adjustright\rin0\lin0\itap0\pararsid7226931 \b\i\f1\fs28\lang3081\langfe1033\cgrid\langnp3081\langfenp1033 {\insrsid7226931 {\*\bkmkstart _Toc152896006}
Multimedia Keys{\*\bkmkend _Toc152896006}
\par }\pard\plain \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid7226931 \fs24\lang3081\langfe1033\cgrid\langnp3081\langfenp1033 {\insrsid16730358 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid16730358 {\insrsid16730358 The }{\b\insrsid16730358\charrsid148429 MyDocuments}{\insrsid16730358  key doesn\rquote t work!!! It doesn\rquote 
t seem to have a scancode, or an AppCommand, so GlovePIE can\rquote t detect it or trigger }{\insrsid11149598 i}{\insrsid16730358 t}{\insrsid11149598 , and doesn\rquote t even list it}{\insrsid16730358 .}{\insrsid11149598  }{
\b\insrsid11149598\charrsid11149598 Messenger}{\insrsid11149598  doesn\rquote t seem to work either.}{\insrsid16730358 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid7226931 {\insrsid16730358 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid7226931 {\b\insrsid7226931\charrsid148429 MyPictures}{\insrsid7226931 , }{\b\insrsid7226931\charrsid148429 MyMusic}{\insrsid7226931 , }{
\b\insrsid7226931\charrsid148429 Mute}{\insrsid7226931 , }{\insrsid7433640 
\par }{\b\insrsid7226931\charrsid152544 PlayPause}{\insrsid7226931 , }{\b\insrsid7226931\charrsid152544 MediaStop}{\insrsid7226931 , }{\b\insrsid7226931\charrsid152544 VolumeUp}{\insrsid7226931 , }{\b\insrsid7226931\charrsid152544 VolumeDown}{\insrsid7226931 
, }{\b\insrsid7226931\charrsid152544 PrevTrack}{\insrsid7226931 , }{\b\insrsid7226931\charrsid152544 NextTrack}{\insrsid7226931 , }{\b\insrsid7226931\charrsid152544 MediaSelect}{\insrsid7226931 , }{\insrsid7433640 
\par 
\par }{\b\insrsid7226931\charrsid152544 Mail}{\insrsid4869462 , }{\b\insrsid4869462\charrsid152544 WebHome}{\insrsid4869462 , }{\b\insrsid4869462\charrsid152544 Messenger}{\insrsid4869462 , }{\b\insrsid4869462\charrsid152544 Calculator}{\insrsid4869462 , }{
\b\insrsid4869462\charrsid152544 LogOff}{\insrsid4869462 , }{\b\insrsid4869462\charrsid152544 Sleep}{\insrsid7226931 
\par }{\insrsid4869462 
\par }{\insrsid7433640 Note that }{\insrsid12745068 the}{\insrsid11149598  }{\b\insrsid11149598\charrsid11149598 MyPictures}{\insrsid11149598 , }{\b\insrsid11149598\charrsid11149598 MyMusic}{\b\insrsid11149598 ,}{\insrsid11149598\charrsid11149598  and }{
\b\insrsid11149598 LogOff}{\insrsid11149598  keys can\rquote t be read properly}{\insrsid12745068 .}{\insrsid7433640 
\par }{\insrsid2173800 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid7226931 {\insrsid14295034 The }{\b\insrsid14295034\charrsid14295034 PlayPause}{\b\insrsid14295034 , }{\b\insrsid14295034\charrsid7433640 MediaStop}{\insrsid14295034 
, }{\b\insrsid14295034\charrsid7433640 PrevTrack}{\insrsid14295034 , and }{\b\insrsid14295034\charrsid7433640 NextTrack}{\insrsid14295034  keys only work for the correct duration if you have XP and your script includes multiple keyboards}{\insrsid7353286 
, or enables RawInput.}{\insrsid14295034  For example:
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid7226931 {\insrsid14295034 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid14295034 {\insrsid7353286 key.RawInput = true}{\insrsid14295034 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid14295034 {\insrsid14295034 debug = PlayPause
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid7226931 {\insrsid14295034 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid7226931 {\insrsid14295034 Will show correctly when the PlayPause key is released.
\par 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid7226931 {\b\insrsid2173800\charrsid2173800 MyMusic}{\insrsid2173800\charrsid2173800  is the same key as }{\b\insrsid2173800 OfficeHome}{\insrsid2173800 
. Intellitype needs to be set up with the correct keyboard type to perform the correct action.}{\insrsid2173800\charrsid2173800 
\par }\pard\plain \s2\ql \li0\ri0\sb240\sa60\keepn\widctlpar\aspalpha\aspnum\faauto\outlinelevel1\adjustright\rin0\lin0\itap0\pararsid4869462 \b\i\f1\fs28\lang3081\langfe1033\cgrid\langnp3081\langfenp1033 {\insrsid4869462 {\*\bkmkstart _Toc152896007}Other Keys
{\*\bkmkend _Toc152896007}
\par }\pard\plain \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid4869462 \fs24\lang3081\langfe1033\cgrid\langnp3081\langfenp1033 {\insrsid4869462 
Other keys can be specified by their names or by their hexadecimal scan codes, like this:
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid4869462 {\insrsid4869462 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid4869462 {\insrsid4869462\charrsid4869462 key.Scan5B}{\insrsid7105692 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid4869462 {\insrsid4869462 
\par }\pard\plain \s2\ql \li0\ri0\sb240\sa60\keepn\widctlpar\aspalpha\aspnum\faauto\outlinelevel1\adjustright\rin0\lin0\itap0\pararsid4869462 \b\i\f1\fs28\lang3081\langfe1033\cgrid\langnp3081\langfenp1033 {\insrsid4869462 {\*\bkmkstart _Toc152896008}
Left, Right or Don\rquote t Care{\*\bkmkend _Toc152896008}
\par }\pard\plain \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid4869462 \fs24\lang3081\langfe1033\cgrid\langnp3081\langfenp1033 {\insrsid4869462 Keys with Left or Right versions, like }{\b\insrsid4869462\charrsid8411714 
Shift}{\insrsid4869462  or }{\b\insrsid4869462\charrsid8411714 Control}{\insrsid4869462 , can be specified like this:
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid4869462 {\insrsid4869462 
\par }{\b\insrsid4869462\charrsid8411714 LeftShift
\par RightShift
\par Shift
\par }{\insrsid4869462 
\par If you just say }{\b\insrsid4869462\charrsid8411714 Shift}{\insrsid4869462  it will respond to either }{\b\insrsid4869462\charrsid8411714 Shift}{\insrsid4869462  key.
\par }{\insrsid8602720 
\par }\pard\plain \s2\ql \li0\ri0\sb240\sa60\keepn\widctlpar\aspalpha\aspnum\faauto\outlinelevel1\adjustright\rin0\lin0\itap0\pararsid8602720 \b\i\f1\fs28\lang3081\langfe1033\cgrid\langnp3081\langfenp1033 {\insrsid8602720 \page {\*\bkmkstart _Toc152896009}
PPJoy{\*\bkmkend _Toc152896009}
\par }\pard\plain \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid8602720 \fs24\lang3081\langfe1033\cgrid\langnp3081\langfenp1033 {\insrsid8602720 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid8602720 {\insrsid8602720 If}{\insrsid10843544  you want to emulate a joystick with PIE, you need to download and install PPJoy. Download it from }{\field{\*\fldinst {
\insrsid10843544  HYPERLINK "}{\insrsid10843544\charrsid10843544 http://www.geocities.com/deonvdw/PPJoy.htm}{\insrsid10843544 " }{\insrsid8473020 {\*\datafield 
00d0c9ea79f9bace118c8200aa004ba90b02000000170000002b00000068007400740070003a002f002f007700770077002e00670065006f006300690074006900650073002e0063006f006d002f00640065006f006e007600640077002f00500050004a006f0079002e00680074006d000000e0c9ea79f9bace118c8200aa
004ba90b5600000068007400740070003a002f002f007700770077002e00670065006f006300690074006900650073002e0063006f006d002f00640065006f006e007600640077002f00500050004a006f0079002e00680074006d0000001000}}}{\fldrslt {\cs15\ul\cf2\insrsid10843544\charrsid1530045 
http://www.geocities.com/deonvdw/PPJoy.htm}}}{\insrsid8602720 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid8602720 {\insrsid10843544 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid8602720 {\insrsid10843544 You then need to configure PPJoy to add a virtual joystick or two. Go to \'93Parallel Port Joysticks\'94 in Control Panel}{\insrsid7628774 
 (or the CP-Settings menu of GlovePIE)}{\insrsid10843544 , and choose }{\insrsid15553161 \'93Add\'94. Then under \'93Parallel Port\'94 choose \'93Virtual joystick\'94 and under \'93Controller Number\'94
 choose a number between 1 and 16, which will be the number of the Virtual Joystick. It\rquote s best to start with 1.}{\insrsid10843544 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid8602720 {\insrsid15553161 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid8602720 {\insrsid15553161 
Then you need to create a custom mapping for the virtual joystick. Choose the number of Axes (I recommend 8),  the number of buttons (I recommend 32), and the number of POV hats (I recommend 2). T}{\insrsid14555290 hen you need to set which axes yo
u want the 8 available axes to be. Then click next and choose which analog axes you want to correspond to those axes. The analog values are how you set that axis in PIE, just choose any numbers here, but remember them later. I recommend using analog 0 to 
analog 7. Then click next.}{\insrsid15553161 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid8602720 {\insrsid14555290 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid8602720 {\insrsid14555290 Then choose which digital values you want to correspond to the first 16 buttons. I recommend 0 to 15. }{\insrsid1527529 
Then click next and set the next 16. Then set the two POV hats.}{\insrsid14555290 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid8602720 {\insrsid1527529 
\par Once you have a Virtual Joystick set up in PPJoy, you can set its analog and digital values with PIE:
\par 
\par PPJoy1.analog0 = 0.5
\par PPJoy1.digital0 = true
\par 
\par Analog values can be between -1 and 1.
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid8602720 {\insrsid1527529 Digital values can be either true or false.
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid8602720 {\insrsid1527529 
\par }{\insrsid13709112 If you want to set \'93PPJoy Virtual Joystick 2\'94 then set the values for PPJoy2.
\par 
\par }{\insrsid13267684 \'93PPJoy\'94 by itself without a number refers to \'93PPJoy Virtual Joystick 1\'94.
\par 
\par }{\insrsid13709112 If the analog corresponds}{\insrsid10564066  to an axis, then 0 is centred and -1 and 1 are the two extremes. }{\insrsid14165351 
\par 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid8602720 {\insrsid10564066 But if the analog corresponds to a a POV hat sw}{\insrsid14165351 itch, then -1 corresponds to pushed at }{\insrsid10564066 an angle o
f 0 degrees (forwards). -0.5 corresponds to 90 degrees (right). }{\insrsid14165351 0 corresponds to 180 degrees (backwards), 0.5 corresponds to 270 degrees (left) and 1 corresponds to centred.}{\insrsid1527529 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid8602720 {\insrsid14165351 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid8602720 {\insrsid14165351 Games which let you choose which joystick you use will need to be set to the appropriate PPJoy Virtual Joystick in the game. }{
\insrsid7365065 Other games which just use the default Joystick will require you to go to the Control Panel joystick settings (Use GlovePIE\rquote s CP-Settings menu to get there quickly)}{\insrsid2846394 , and change the default joystick there}{
\insrsid7365065 .}{\insrsid14165351 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid8602720 {\insrsid2846394 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid8602720 {\insrsid2846394 If you want to control the game with a real joystick and just add some scripted actions }{\insrsid13267684 
to it, you will set the game or control panel to the virtual joystick and assign values from the real joystick to the PPJoy fields.}{\insrsid2846394 
\par }\pard\plain \s1\ql \li0\ri0\sb240\sa60\keepn\widctlpar\aspalpha\aspnum\faauto\outlinelevel0\adjustright\rin0\lin0\itap0\pararsid7628774 \b\f1\fs32\lang3081\langfe1033\kerning32\cgrid\langnp3081\langfenp1033 {\insrsid7628774 \page 
{\*\bkmkstart _Toc152896010}Joystick}{\insrsid13267684 {\*\bkmkend _Toc152896010}
\par }\pard\plain \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid7628774 \fs24\lang3081\langfe1033\cgrid\langnp3081\langfenp1033 {\insrsid7628774 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid7628774 {\insrsid7628774 Joysticks, Game pads, Steering Wheels, and most other Direct Input devices that aren\rquote 
t keyboards or mice, are considered to be Joysticks by GlovePIE.
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid7628774 {\insrsid7628774 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid7628774 {\insrsid7628774 If you want to read from a joystick you can use the Joystick object, but if you want to write to it, you need to use the PPJoy object.
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid7628774 {\insrsid7628774 
\par }\pard\plain \s2\ql \li0\ri0\sb240\sa60\keepn\widctlpar\aspalpha\aspnum\faauto\outlinelevel1\adjustright\rin0\lin0\itap0\pararsid7628774 \b\i\f1\fs28\lang3081\langfe1033\cgrid\langnp3081\langfenp1033 {\insrsid7628774 {\*\bkmkstart _Toc152896011}
Force Feedback{\*\bkmkend _Toc152896011}
\par }\pard\plain \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid7628774 \fs24\lang3081\langfe1033\cgrid\langnp3081\langfenp1033 {\insrsid7628774 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid7628774 {\insrsid7628774 
Most fields of the Joystick are read-only, but the two joystick fields which you can set are the Vibration1 and Vibration2 fields. These are the force feedback on the two axes, and can be set to any value between -1 and 1. 0 is no effect. I
n this case the Joystick is acting as an output device. On a Gamepad, Vibration1 will be rumble, and Vibration2 will be buzz. On a real Joystick they will push the stick in a direction (I think).
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid7628774 {\insrsid7628774 
\par }\pard\plain \s2\ql \li0\ri0\sb240\sa60\keepn\widctlpar\aspalpha\aspnum\faauto\outlinelevel1\adjustright\rin0\lin0\itap0\pararsid7628774 \b\i\f1\fs28\lang3081\langfe1033\cgrid\langnp3081\langfenp1033 {\insrsid7628774 {\*\bkmkstart _Toc152896012}Buttons
{\*\bkmkend _Toc152896012}
\par }\pard\plain \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid7628774 \fs24\lang3081\langfe1033\cgrid\langnp3081\langfenp1033 {\insrsid7628774 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid7628774 {\insrsid7628774 The Joystick buttons are numbered 1 to 128. Most joysticks won\rquote t have that many buttons though. You can read them with:
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid7628774 {\insrsid7628774 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid7628774 {\insrsid7628774 Joystick.Button1 to Joystick.Button128
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid7628774 {\insrsid10111954 
\par }\pard\plain \s2\ql \li0\ri0\sb240\sa60\keepn\widctlpar\aspalpha\aspnum\faauto\outlinelevel1\adjustright\rin0\lin0\itap0\pararsid10111954 \b\i\f1\fs28\lang3081\langfe1033\cgrid\langnp3081\langfenp1033 {\insrsid10111954 {\*\bkmkstart _Toc152896013}Axes
{\*\bkmkend _Toc152896013}
\par }\pard\plain \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid10111954 \fs24\lang3081\langfe1033\cgrid\langnp3081\langfenp1033 {\insrsid10111954 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid10111954 {\insrsid10111954 You can tell how many axes the joystick has with the Joystick.NumberOfAxes value.
\par 
\par }{\insrsid3553509 Each joystick axis has}{\insrsid10111954  a value between -1 and 1.
\par }{\insrsid10111954\charrsid10111954 
\par }{\insrsid10111954 The joystick axes are referred to as follows:
\par 
\par x = sideways position. -1 = left, 0 = centre, 1 = right
\par y = forwards/backwards position   -1 = forwards, 1 = backwards
\par z = Right Analog stick forwards/backwards   -1 = forwards, 1 = backwards
\par roll = joystick twist, or right analog stick left/right    -1 = left, 1 = right
\par pitch = not usually used
\par yaw = not usually used
\par slider = throttle rudder control, -1 = forwards (full speed), 1 = backwards (no speed)
\par dial = some other dial
\par 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid10111954 {\insrsid10111954 vx, vy, vz, vroll, vpitch, vyaw, vslider
, vdial = Extra axes which DirectInput supports, supposedly for velocity (which seems kind of redundant), but could be anything. Not normally used. They don\rquote t tell you the velocity on a normal joystick.
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid10111954 {\insrsid10111954 
\par }{\insrsid8519705 You can also read the axes as a vector:
\par 
\par Pos = [x, y, z]
\par Pos2d = [x, y]
\par Velocity = [vx, vy, vz]
\par 
\par }\pard\plain \s2\ql \li0\ri0\sb240\sa60\keepn\widctlpar\aspalpha\aspnum\faauto\outlinelevel1\adjustright\rin0\lin0\itap0\pararsid3553509 \b\i\f1\fs28\lang3081\langfe1033\cgrid\langnp3081\langfenp1033 {\insrsid3553509 {\*\bkmkstart _Toc152896014}POV Hats
{\*\bkmkend _Toc152896014}
\par }\pard\plain \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid3553509 \fs24\lang3081\langfe1033\cgrid\langnp3081\langfenp1033 {\insrsid3553509 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid3553509 {\insrsid3553509 
These are either those little hat switches you get on the top of some joysticks, or they are the D-Pad on a Game Pad with analog sticks when it is in analog mode.
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid3553509 {\insrsid3553509 
\par There can be up to 4 POV Hats per joystick, numbered Pov1, Pov2, Pov3 and Pov4.
\par 
\par }{\insrsid16319789 The number of POV hats the joystick has is given by Joystick.NumberOfPOVs.
\par 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid3553509 {\insrsid3553509 POV Hats can be either centred, or they can be pushed out in some direction. You can\rquote 
t tell how far in that direction they are pushed. Analog POV hats can be pushed in any angle. Digital ones only support 8 different angles.
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid3553509 {\insrsid3553509 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid3553509 {\insrsid3553509 
To tell in PIE whether Pov1 is centred, read: Joystick.Pov1Center. It will be either true or false. If it is true then you can read Joystick.Pov1 and it will be the a
ngle in degrees (or you can convert it to other units if you want). If it is centred then Joystick.Pov1 will be -1.
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid3553509 {\insrsid3553509 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid3553509 {\insrsid16319789 An}{\insrsid13043907 
other way of reading the POV hat is to use the values Pov1Up, Pov1Down, Pov1Left and Pov1Right. For example if the joystick is pushed to 
the front-left corner then Pov1Up and Pov1Left will both be true and the others will be false. For analog POV hats it only has to be closer to that direction than to any other. }{\insrsid3553509 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid3553509 {\insrsid3553509 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid3553509 {\insrsid16319789 The final way of reading the POV hat is to use the values Pov1x and Pov1y. Th
ey work just like the x and y values of the joystick, except the values it can return are more restrictive (either both values are 0, or one of them is on the edge).}{\insrsid3553509 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid3553509 {\insrsid3553509 
\par }\pard\plain \s2\ql \li0\ri0\sb240\sa60\keepn\widctlpar\aspalpha\aspnum\faauto\outlinelevel1\adjustright\rin0\lin0\itap0\pararsid16319789 \b\i\f1\fs28\lang3081\langfe1033\cgrid\langnp3081\langfenp1033 {\insrsid16319789 {\*\bkmkstart _Toc152896015}
Joystick Information{\*\bkmkend _Toc152896015}
\par }\pard\plain \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid16319789 \fs24\lang3081\langfe1033\cgrid\langnp3081\langfenp1033 {\insrsid16319789 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid16319789 {\insrsid16319789 There are other joystick fields with information about the joystick. }{\insrsid4152096 
You can look most of them up in the DirectInput documentation. }{\insrsid16319789 They are:
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid16319789 {\insrsid16319789 
\par Alias: true or false
\par Attached: true or false
\par Deadband: true or false
\par DeviceType: number
\par DeviceSubType: number
\par Emulated: true or false
\par FFAttack
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid16319789 {\insrsid16319789 FFDriverVersion
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid16319789 {\insrsid16319789 FFFade
\par FFSamplePeriod
\par FirmwareRevision
\par ForceFeedback
\par ForceFeedbackGuid
\par HardwareRevision
\par HID
\par Hidden
\par HidUsage}{\insrsid8519705 , }{\insrsid16319789 HidUsagePage
\par InstanceGuid
\par IsFirstPerson, IsFlight, IsGamePad, IsJoystick, IsLimited, IsVirtualJoystick, IsWheel
\par Name}{\insrsid4152096 : The name of that individual}{\insrsid8519705  joystick}{\insrsid16319789 
\par Phantom: true or false
\par }{\insrsid8519705 PolledDataFormat}{\insrsid16319789 
\par }{\insrsid8519705 PolledDevice
\par PosNegCoefficients
\par PosNegSaturation
\par PPJoyNumber
\par ProductGuid
\par ProductName: }{\insrsid4152096 The brand of the joystick}{\insrsid8519705 
\par Saturation
\par StartDelay
\par 
\par }\pard\plain \s2\ql \li0\ri0\sb240\sa60\keepn\widctlpar\aspalpha\aspnum\faauto\outlinelevel1\adjustright\rin0\lin0\itap0\pararsid8519705 \b\i\f1\fs28\lang3081\langfe1033\cgrid\langnp3081\langfenp1033 {\insrsid8519705 {\*\bkmkstart _Toc152896016}
Multiple Joysticks{\*\bkmkend _Toc152896016}
\par }\pard\plain \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid8519705 \fs24\lang3081\langfe1033\cgrid\langnp3081\langfenp1033 {\insrsid8519705 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid8519705 {\insrsid8519705 By default \'93Joy\'94 or \'93Joystick\'94 refers to \'93Joystick1\'94. You can also specify a joystick by number, eg. \'93Joystick1\'94 or 
\'93Joystick2\'94.
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid8519705 {\insrsid8519705 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid8519705 {\insrsid8519705 But you can also specify joysticks by type. Note that that only works if the joystick reports its type correctly, which lots of them don
\rquote t. My Game Pad reports itself as a joystick for example.
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid8519705 {\insrsid8519705 
\par Joystick.GamePad1 refers to the first gamepad. Joystick.GamePad2 refers to the second gamepad.
\par 
\par Joystick.Joystick1 refers to the first joystick that actually is a joystick.
\par 
\par Joystick.Wheel1 refers to the first wheel.
\par 
\par Joystick.Flight1 refers to the first flight stick.
\par 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid8519705 {\insrsid8519705 Joystick.FirstPerson1 refers to the first Virtual Reality DirectInput device (p5 gloves don\rquote t count as DirectInput devices).
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid8519705 {\insrsid8519705 
\par Joystick.PPJoy1 refers to PPJoy virtual joystick 1.
\par 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid8519705 {\insrsid8519705 Joystick.NotPPJoy1 or Joystick.Real1 refers to the first joystick that is NOT a PPJoy Virtual Joystick.
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid8519705 {\insrsid8519705 
\par The number after the type is optional. You then put the item after, like this:
\par 
\par debug = joystick.gamepad1.}{\insrsid4152096 x}{\insrsid8519705 
\par }{\insrsid4152096 
\par or like this:
\par 
\par debug = joystick.wheel.x
\par 
\par This is useful if you have different types of joysticks (that report their type correctly).
\par 
\par }\pard\plain \s1\ql \li0\ri0\sb240\sa60\keepn\widctlpar\aspalpha\aspnum\faauto\outlinelevel0\adjustright\rin0\lin0\itap0\pararsid4152096 \b\f1\fs32\lang3081\langfe1033\kerning32\cgrid\langnp3081\langfenp1033 {\insrsid4152096 \page 
{\*\bkmkstart _Toc152896017}P5 Glove{\*\bkmkend _Toc152896017}
\par }\pard\plain \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid4152096 \fs24\lang3081\langfe1033\cgrid\langnp3081\langfenp1033 {\insrsid4152096 
\par You can read the P5 Virtual Reality Glove values using either the \'93P5\'94 object, or the \'93Glove\'94 object. Using Glove is better if you want to put a number after it (\'93P52\'94 would look silly).
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid4152096 {\insrsid4152096 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid4152096 {\insrsid4152096 The Virtual Reality glove has lots of different fields you can set, in four main categories: Buttons, Finger bends, Location, and Rotation.

\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid4152096 {\insrsid4152096 
\par }\pard\plain \s2\ql \li0\ri0\sb240\sa60\keepn\widctlpar\aspalpha\aspnum\faauto\outlinelevel1\adjustright\rin0\lin0\itap0\pararsid4152096 \b\i\f1\fs28\lang3081\langfe1033\cgrid\langnp3081\langfenp1033 {\insrsid4152096 {\*\bkmkstart _Toc152896018}Buttons
{\*\bkmkend _Toc152896018}
\par }\pard\plain \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid4152096 \fs24\lang3081\langfe1033\cgrid\langnp3081\langfenp1033 {\insrsid4152096 
The P5 Glove has 4 buttons on the back, labelled A, B, C, and D. The D button doubles as the Power button. You can only read the D button wh
ile the user is turning the glove on (while the user is turning the glove off, the D button is always false). If you want to use the D button, you need to tell the user to double click it, (to your script it will look like a single click).
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid4152096 {\insrsid4152096 
\par You can read them like this:
\par 
\par debug = P5.A
\par 
\par They are either true or false.
\par 
\par If the glove is out of range, or switched off, or behind something, they will always be false.
\par 
\par }\pard\plain \s2\ql \li0\ri0\sb240\sa60\keepn\widctlpar\aspalpha\aspnum\faauto\outlinelevel1\adjustright\rin0\lin0\itap0\pararsid4152096 \b\i\f1\fs28\lang3081\langfe1033\cgrid\langnp3081\langfenp1033 {\insrsid4152096 {\*\bkmkstart _Toc152896019}Fingers
{\*\bkmkend _Toc152896019}
\par }\pard\plain \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid4152096 \fs24\lang3081\langfe1033\cgrid\langnp3081\langfenp1033 {\insrsid4152096 
The five fingers are called Thumb, Index, Middle, Ring and Pinky. They return a value between 0 and 63 (unless you assign them to something true or false, like a key, then they return true if >= 32)}{\insrsid6255399 .}{\insrsid4152096 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid4152096 {\insrsid6255399 
\par 0 means as straight as the maximum straightness for that finger during calibration.
\par 63 means as bent as the maximum bent-ness during calibration.
\par 
\par You use them like this:
\par 
\par Enter = p5.Index > 32
\par 
\par }\pard\plain \s3\ql \li0\ri0\sb240\sa60\keepn\widctlpar\aspalpha\aspnum\faauto\outlinelevel2\adjustright\rin0\lin0\itap0\pararsid860613 \b\f1\fs26\lang3081\langfe1033\cgrid\langnp3081\langfenp1033 {\insrsid860613 Raw Finger Bends
\par }\pard\plain \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid4152096 \fs24\lang3081\langfe1033\cgrid\langnp3081\langfenp1033 {\insrsid860613 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid4152096 {\insrsid6255399 
If you want to know the raw bend sensor values, then you can get an approximate version by reading the values AbsoluteThumb, AbsoluteIndex, AbsoluteMiddle, AbsoluteRing, and AbsolutePinky. They are }{\insrsid860613 converted from the 0 to 63 values}{
\insrsid6255399 , }{\insrsid860613 so it won\rquote t give you more precision, or tell you if it is outside the calibration range. But it will let you know what raw bend sensor value it corresponds to. The raw bend sensor values are backwards (small mean
s bent) and may be roughly between 400 and 1000. These values are less useful than the ones above.
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid4152096 {\insrsid860613 
\par }\pard\plain \s3\ql \li0\ri0\sb240\sa60\keepn\widctlpar\aspalpha\aspnum\faauto\outlinelevel2\adjustright\rin0\lin0\itap0\pararsid860613 \b\f1\fs26\lang3081\langfe1033\cgrid\langnp3081\langfenp1033 {\insrsid860613 Joint Angles
\par }\pard\plain \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid4152096 \fs24\lang3081\langfe1033\cgrid\langnp3081\langfenp1033 {\insrsid860613 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid4152096 {\insrsid860613 If you want to know what angles the bend values represent for the different finger joints, then you can use the ThumbProximal, ThumbMedial, Th
umbDistal, IndexProximal, IndexMedial, IndexDistal, etc. values.
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid4152096 {\insrsid860613 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid4152096 {\insrsid860613 
Proximal is the closest joint on your finger where it joins the hand, Medial is the middle one, and Distal is the finger tip joint. Note that the thumb\rquote s proximal joint is actually INSIDE your hand.
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid4152096 {\insrsid860613 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid4152096 {\insrsid860613 
These angles are only guesses, since the P5 only returns one value per finger between 0 and 63. They only work if you calibrate the glove to the range: fingers completely flat to fingers bent as much as possible.
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid4152096 {\insrsid860613 
\par }\pard\plain \s3\ql \li0\ri0\sb240\sa60\keepn\widctlpar\aspalpha\aspnum\faauto\outlinelevel2\adjustright\rin0\lin0\itap0\pararsid860613 \b\f1\fs26\lang3081\langfe1033\cgrid\langnp3081\langfenp1033 {\insrsid860613 Index Fingertip Position}{\insrsid6255399 

\par }\pard\plain \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid4152096 \fs24\lang3081\langfe1033\cgrid\langnp3081\langfenp1033 {\insrsid860613 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid4152096 {\insrsid860613 You can find the position of the index finger tip by using the P5.IndexPos vector. It is }{\insrsid9458590 measured }{\insrsid860613 
in P5 Units (51.2ths of an inch, or half a mm) but you can convert it to whatever units you want. It is unfiltered, so you should use the Smooth function}{\insrsid9458590 , preferabl
y with a both an average and a deadband parameter. It is calculated based on the position of LED 4, and the joint angles above. It is not very reliable, it is more experimental.}{\insrsid860613 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid4152096 {\insrsid9458590 
\par }\pard\plain \s3\ql \li0\ri0\sb240\sa60\keepn\widctlpar\aspalpha\aspnum\faauto\outlinelevel2\adjustright\rin0\lin0\itap0\pararsid9458590 \b\f1\fs26\lang3081\langfe1033\cgrid\langnp3081\langfenp1033 {\insrsid9458590 Finger Gestures
\par }\pard\plain \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid9458590 \fs24\lang3081\langfe1033\cgrid\langnp3081\langfenp1033 {\insrsid9458590 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid9458590 {\insrsid9458590 You can recognize various hand-shapes in GlovePIE by using t
he 5 letter codes for fingers. Each letter corresponds to one finger, and can be either \'93l\'94 (L) for straight, \'93r\'94 for partly bent, \'93n\'94 for completely bent, or \'93x\'94 for \'93don\rquote t care\'94
. Note that the shape of the letter corresponds to the shape of the finger.
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid9458590 {\insrsid9458590 
\par So for example, to find out if the user is pointing, use this:
\par 
\par debug = p5.xlnnn
\par 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid9458590 {\insrsid9458590 The first letter x means don\rquote 
t care about the thumb. The second letter (l) means the index finger must be straight. The third letter (n) means the middle finger must be completely bent, and the same for the last two fingers.
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid9458590 {\insrsid9458590 
\par Note that the thumb comes first in these codes, even if it is your left hand.
\par 
\par You can use any five-letter combination of those letters.
\par 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid9458590 {\insrsid9458590 It will be either true or false.
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid9458590 {\insrsid9458590 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid9458590 {\insrsid6233452 You can }{\b\insrsid6233452\charrsid16274356 set}{\insrsid6233452  the values of }{\insrsid16274356 p5.maxl and p5.minn }{\insrsid6233452 
to values between 0 and 63 if you don\rquote t like the default }{\insrsid16274356 bend amounts that correspond to those three ranges.}{\insrsid6233452 
\par }\pard\plain \s3\ql \li0\ri0\sb240\sa60\keepn\widctlpar\aspalpha\aspnum\faauto\outlinelevel2\adjustright\rin0\lin0\itap0\pararsid9458590 \b\f1\fs26\lang3081\langfe1033\cgrid\langnp3081\langfenp1033 {\insrsid9458590 Finger Velocity and Acceleration
\par }\pard\plain \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid9458590 \fs24\lang3081\langfe1033\cgrid\langnp3081\langfenp1033 {\insrsid9458590 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid9458590 {\insrsid9458590 I stupidly decided to use the absolute values for velocity and acceleration. So they will be in the
 opposite direction to what you expect, and have a different magnitude. Sorry.
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid9458590 {\insrsid9458590 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid9458590 {\insrsid9458590 
They are FingerVelocity0, FingerVelocity1, FingerVelocity2, FingerVelocity3, and FingerVelocity4 for velocity, and FingerAcceleration0, etc. for acceleration.
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid9458590 {\insrsid9458590 
\par These values probably need smoothing, or they aren\rquote t very useful.
\par }\pard\plain \s3\ql \li0\ri0\sb240\sa60\keepn\widctlpar\aspalpha\aspnum\faauto\outlinelevel2\adjustright\rin0\lin0\itap0\pararsid6233452 \b\f1\fs26\lang3081\langfe1033\cgrid\langnp3081\langfenp1033 {\insrsid6233452 
Values that have nothing to do with Finger Bends}{\insrsid9458590 
\par }\pard\plain \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid6233452 \fs24\lang3081\langfe1033\cgrid\langnp3081\langfenp1033 {\insrsid6233452\charrsid6233452 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid9458590 {\insrsid6233452 
Beware of values like ThumbUp or FingersForwards. They have absolutely nothing to do with the thumb or finger bends, and are actually about the glove\rquote s ROTATION. They say what direction those parts WOULD be pointing IF they were not bent at all.}{
\insrsid9458590 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid9458590 {\insrsid9458590 
\par }\pard\plain \s2\ql \li0\ri0\sb240\sa60\keepn\widctlpar\aspalpha\aspnum\faauto\outlinelevel1\adjustright\rin0\lin0\itap0\pararsid6233452 \b\i\f1\fs28\lang3081\langfe1033\cgrid\langnp3081\langfenp1033 {\insrsid6233452 {\*\bkmkstart _Toc152896020}Location
{\*\bkmkend _Toc152896020}
\par }\pard\plain \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid6233452 \fs24\lang3081\langfe1033\cgrid\langnp3081\langfenp1033 {\insrsid6233452 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid6233452 {\insrsid6233452 The glove\rquote s filtered location is given by P5.x, P5.y, and P5.z. Or you can read them as a vector with P5.Pos.
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid6233452 {\insrsid6233452 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid6233452 {\insrsid6233452 The units are in P5 Units by default. P5 Uni
ts are equal to a 51.2th of an inch, or roughly half a mm. But because GlovePIE supports units, you can read these values in any units that you want, like this:
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid6233452 {\insrsid6233452 
\par debug = p5.x in cm
\par 
\par Also GlovePIE allows you to compare values that are in different units like this:
\par 
\par Enter = p5.x > 1.5 inches
\par 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid6233452 {\insrsid6233452 
GlovePIE uses Left-Handed coordinates, like Direct3D does (which was a bad decision in hindsight). So x is the sideways position, with negative to the left and positive to the right. y is the vertical position with negat
ive down and positive up. And z is the forwards/backwards position with negative away from the screen and positive towards the screen. Note that the z value will always be negative, since you can\rquote 
t physically move the hand past the receptor. That makes z values confusing, and I\rquote m sorry. Just get used to negative numbers.
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid6233452 {\insrsid6233452 
\par }\pard\plain \s3\ql \li0\ri0\sb240\sa60\keepn\widctlpar\aspalpha\aspnum\faauto\outlinelevel2\adjustright\rin0\lin0\itap0\pararsid16274356 \b\f1\fs26\lang3081\langfe1033\cgrid\langnp3081\langfenp1033 {\insrsid16274356 Filtering
\par }\pard\plain \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid6233452 \fs24\lang3081\langfe1033\cgrid\langnp3081\langfenp1033 {\insrsid16274356 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid6233452 {\insrsid16274356 You can }{\b\insrsid16274356\charrsid16274356 set}{\insrsid16274356 
 the amount of filtering with P5.FilterFrames and P5.FilterDistance. P5.FilterFrames is the number of past frames to average together with the current frame to calcul
ate a smoother position. P5.FilterDistance is the minimum distance the glove has to move in order to register any movement at all. It is good for keeping the position completely still even if you move the glove a tiny bit. It is in P5 Units by default, bu
t you can use any units you want.}{\insrsid6233452 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid6233452 {\insrsid16274356 
\par eg.
\par 
\par P5.FilterFrames = 10
\par P5.FilterDistance = 5 mm
\par debug = P5.x
\par 
\par }\pard\plain \s3\ql \li0\ri0\sb240\sa60\keepn\widctlpar\aspalpha\aspnum\faauto\outlinelevel2\adjustright\rin0\lin0\itap0\pararsid16274356 \b\f1\fs26\lang3081\langfe1033\cgrid\langnp3081\langfenp1033 {\insrsid16274356 Unfiltered Position
\par }\pard\plain \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid6233452 \fs24\lang3081\langfe1033\cgrid\langnp3081\langfenp1033 {\insrsid16274356 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid6233452 {\insrsid16274356 You can also read the unfiltered position of the glove using P5.AbsoluteX, P5.AbsoluteY and P5.AbsoluteZ. You can also read it as a vect
or with P5.AbsPos.
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid6233452 {\insrsid16274356 
\par }\pard\plain \s3\ql \li0\ri0\sb240\sa60\keepn\widctlpar\aspalpha\aspnum\faauto\outlinelevel2\adjustright\rin0\lin0\itap0\pararsid16274356 \b\f1\fs26\lang3081\langfe1033\cgrid\langnp3081\langfenp1033 {\insrsid16274356 Relative Mode
\par }\pard\plain \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid16274356 \fs24\lang3081\langfe1033\cgrid\langnp3081\langfenp1033 {\insrsid16274356 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid16274356 {\insrsid16274356 
Back in the dark ages of the P5 Glove, it was only able to support Relative Mode. Relative Mode means it works like a 3D mouse. You can read its movements, but you can\rquote t tell where it is currently located in physical spac
e. The advantage of relative mode is that it is smoother, and that it doesn\rquote }{\insrsid8801260 t matter if the rotation isn\rquote t calculated correctly. The disadvantage is that you don\rquote t know where the glove is.}{\insrsid16274356 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid16274356 {\insrsid8801260 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid16274356 {\insrsid8801260 You can read the Relative Mode position with P5.RelativeX, P5.Rela
tiveY, and P5.RelativeZ, (or P5.RelativePos for a vector). The units are still in P5 Units.
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid16274356 {\insrsid8801260 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid16274356 {\insrsid8801260 I recommend using RelativeMode (with the smooth function) for things like aiming where you don\rquote t care about the glove\rquote 
s position, and the normal x, y, and z values when you care about the position.
\par }\pard\plain \s3\ql \li0\ri0\sb240\sa60\keepn\widctlpar\aspalpha\aspnum\faauto\outlinelevel2\adjustright\rin0\lin0\itap0\pararsid8801260 \b\f1\fs26\lang3081\langfe1033\cgrid\langnp3081\langfenp1033 {\insrsid8801260 LED Positions
\par }\pard\plain \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid16274356 \fs24\lang3081\langfe1033\cgrid\langnp3081\langfenp1033 {\insrsid8801260 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid16274356 {\insrsid8801260 
The glove has 8 yellow infra-red LEDs mounted on it at fixed locations. The receptor needs to see one of them to calculate a rough position, and three of them to calculate a rotation. It can see a maximum of four of them at a time.
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid16274356 {\insrsid8801260 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid16274356 {\insrsid8801260 You can read the positions of each LED individually with P5.Led0x, P5.Led0y, P5.Led0z, P5.Led1x, P5.Led1y, P5.Led1z, \'85
, P5.Led7x, P5.Led7y, P5.Led7z. The default units are P5 Units.}{\insrsid10308617  You can also use P5.Led0Pos, etc. if you prefer a vector.}{\insrsid8801260 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid16274356 {\insrsid8801260 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid16274356 {\insrsid8801260 
If the LED is visible it will return the actual position of the LED, otherwise it will guess the position based on the positions of the other LEDs it can see.
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid10308617 {\insrsid10308617 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid10308617 {\insrsid10308617 LED 0 is the top one above the right hand side of your wrist.
\par LED 1 is the one to the right of your little (pinky) finger.
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid16274356 {\insrsid10308617 LED 2 is the one on the left of your little (pinky) finger.
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid16274356 {\insrsid10308617 LED 3 is the one on the back of your hand.}{\insrsid8801260 
\par LED 4 is the one near your index finger.
\par }{\insrsid10308617 LED 5 is the top one above your thumb.}{\insrsid8801260 
\par }{\insrsid10308617 LED 6 is the lower one on the right hand side of your wrist.
\par LED 7 is the lower one near your thumb.
\par 
\par You can tell whether an LED is visible or not, using p5.Led0vis, etc.
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid16274356 {\insrsid10308617 \line You can also find out the raw (well almost raw) tan values that the glove returns for that LED. There are 3 values. }{
\insrsid16391730 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid16274356 {\insrsid16391730 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid16274356 {\insrsid10308617 \'93h\'94 is the horizontal position measured by the sensor at the top of the receptor tower. Negative means left, positive means right. }{
\insrsid16391730 512 means roughly 45 degrees to the left, -512 means roughly 45 degrees to the right. It can exceed that range.}{\insrsid10308617 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid16274356 {\insrsid16391730 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid16274356 {\insrsid16391730 \'93v1\'94 is the
 vertical position measured by the sensor at the top of the receptor tower. Negative means down, positive means up. This sensor is angled downwards about 10 degrees. The range is the same.}{\insrsid10308617 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid16274356 {\insrsid16391730 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid16274356 {\insrsid16391730 \'93v2\'94 is the vertical position measured by the sensor at the bottom of the receptor tower. This sensor is angled up about 17 degrees.

\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid16274356 {\insrsid16391730 
\par These values are p5.Led0h, p5.Led0v1, p5.Led0v2, p5.Led1h, etc.
\par 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid16274356 {\insrsid16391730 These raw tan values are the ONLY values the glove hardware gives the computer about the position of the glove. Everything 
else is to be calculated from these values. Use them for testing how to improve the driver, or if you think you can do better than my driver.
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid16274356 {\insrsid16391730 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid16274356 {\insrsid16391730 If you want to know the position of the LEDs relative to the glove (their unchanging physical position) use p5.ActualLed0Pos, p5.Actua}{
\insrsid13373289 lLed1Pos, etc. They are vectors. Their values never change, unless you buy a new version of the glove.}{\insrsid16391730 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid16274356 {\insrsid13373289 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid16274356 {\insrsid13373289 P5.LedsVisible tells you how many LEDs are currently visible.
\par }\pard\plain \s3\ql \li0\ri0\sb240\sa60\keepn\widctlpar\aspalpha\aspnum\faauto\outlinelevel2\adjustright\rin0\lin0\itap0\pararsid10308617 \b\f1\fs26\lang3081\langfe1033\cgrid\langnp3081\langfenp1033 {\insrsid13373289 Speed and Acceleration}{
\insrsid10308617 
\par }\pard\plain \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid13373289 \fs24\lang3081\langfe1033\cgrid\langnp3081\langfenp1033 {\insrsid13373289 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid13373289 {\insrsid13373289 You can tell how fast the glove is moving with P5.Speed. It is just a number measured in P5Units Per Second.
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid13373289 {\insrsid13373289 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid13373289 {\insrsid13373289 
If you want to know the velocity (speed with direction) of the glove, on the x, y and z axes, then you can use P5.XVelocity, P5.YVelocity and P5.ZVelocity. They are also in P5Units per second.
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid13373289 {\insrsid13373289 
\par XVelocity is how fast it is moving to the right. Or negative if it is moving to the left.
\par YVelocity is how fast it is moving up. Or negative if it is moving down.
\par ZVelocity is how fast it is moving towards the screen. Or negative if it is moving backwards.
\par }{\insrsid1595637 
\par If you want a vector, use P5.Velocity.
\par 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid13373289 {\insrsid1595637 
To find out how fast the velocity is increasing (the acceleration) you can read P5.XAcceleration, P5.YAcceleration, and P5.ZAcceleration. Or the vector P5.Acceleration. They are measured in metres per second per second.
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid13373289 {\insrsid1595637 
\par Velocity is good for detecting punches and gestures like that.
\par 
\par }\pard\plain \s3\ql \li0\ri0\sb240\sa60\keepn\widctlpar\aspalpha\aspnum\faauto\outlinelevel2\adjustright\rin0\lin0\itap0\pararsid1595637 \b\f1\fs26\lang3081\langfe1033\cgrid\langnp3081\langfenp1033 {\insrsid1595637 When the glove is in range
\par }\pard\plain \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid1595637 \fs24\lang3081\langfe1033\cgrid\langnp3081\langfenp1033 {\insrsid1595637 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid1595637 {\insrsid1595637 You can tell whether or not the glove is}{\insrsid2061501  visible to the receptor}{\insrsid1595637 
 by reading P5.InRange, or by the number P5.LedsVisible.
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid1595637 {\insrsid1595637 
\par }{\insrsid2061501 If you want to know WHY the glove isn\rquote t visible you can use one of these other values:
\par 
\par P5.BehindSomething
\par P5.SwitchedOff
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid2061501 {\insrsid2061501 P5.TooFarLeft
\par P5.TooFarRight
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid2061501 {\insrsid2061501 P5.TooFarUp
\par P5.TooFarDown
\par P5.TooFarForward
\par P5.TooFarBack
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid1595637 {\insrsid2061501 P5.UntrackableAngle}{\insrsid1595637 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid1595637 {\insrsid2061501 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid1595637 {\insrsid2061501 They are all only GlovePIE\rquote s best guess. They are not guaranteed. The UntrackableAngle one doesn\rquote t work very well.
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid1595637 {\insrsid1595637 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15953647 {\insrsid2061501 They are true if the glove isn\rquote 
t visible for that reason, and false if the glove is visible or if it is not visible for some other reason.}{\insrsid15953647 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15953647 {\insrsid15953647 
\par 
\par }\pard\plain \s2\ql \li0\ri0\sb240\sa60\keepn\widctlpar\aspalpha\aspnum\faauto\outlinelevel1\adjustright\rin0\lin0\itap0\pararsid2061501 \b\i\f1\fs28\lang3081\langfe1033\cgrid\langnp3081\langfenp1033 {\insrsid2061501 {\*\bkmkstart _Toc152896021}Rotation
{\*\bkmkend _Toc152896021}
\par }\pard\plain \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid2644779 \fs24\lang3081\langfe1033\cgrid\langnp3081\langfenp1033 {\insrsid2644779 Note that rotation requires at least 3 LEDs to be
 visible and accurate before it can be calculated. }{\insrsid1447344 Otherwise the rotation will stay much the same as it was before.}{\insrsid2644779\charrsid2644779 
\par }\pard\plain \s3\ql \li0\ri0\sb240\sa60\keepn\widctlpar\aspalpha\aspnum\faauto\outlinelevel2\adjustright\rin0\lin0\itap0\pararsid5653980 \b\f1\fs26\lang3081\langfe1033\cgrid\langnp3081\langfenp1033 {\insrsid5653980 Directions of Parts of the Hand
\par }\pard\plain \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid2061501 \fs24\lang3081\langfe1033\cgrid\langnp3081\langfenp1033 {\insrsid5653980 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid2061501 {\insrsid2061501 The recommended way to get the glove\rquote s orientation in GlovePIE is to use the values that tell you which way
 the parts of the glove are facing.
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid2061501 {\insrsid2061501 For example:
\par 
\par debug = P5.FingersForward
\par 
\par Or if you want to be more precise:
\par 
\par debug = P5.FingersForward and P5.PalmDown
\par 
\par You need to specify two values to uniquely identify an orientation.
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid2061501 {\insrsid2061501 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid2061501 {\b\insrsid15953647 IMPORTANT: }{\insrsid15953647 These do NOT refer t
o the finger bends. The fingers are assumed to be straight and the thumb is assumed to be sticking out the side of your hand at right angles, for the purposes of these rotation values. The finger bends make no difference to these values.}{
\insrsid15953647\charrsid15953647 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid2061501 {\insrsid15953647 
\par }{\insrsid5653980 You can check}{\insrsid2061501  the direction of the following parts:
\par 
\par }{\insrsid5653980 BackOfHand, Fingers, Palm, Thumb, or Wrist}{\insrsid2061501 
\par }{\insrsid5653980 
\par And you can check for one of the following directions:
\par 
\par Forwards, Backwards, Left, Right, Up, Down
\par 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid2061501 {\insrsid5653980 The part will always be pointing in one, and only one, of those 6 directions.}{\insrsid1331161 
 It can be pointing in that direction +/- 45 degrees in order to count as that direction.
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid2061501 {\insrsid5653980 
\par }{\insrsid1331161 Note that a Left handed glove the thumb is on the other side. So for example:
\par 
\par debug = P5.FingersForward and P5.ThumbRight
\par 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid2061501 {\insrsid1331161 Will be palm-up if your glove is right-h
anded, and palm-down if your glove is left-handed. If you want to make your right-handed glove left-handed, please download the Dual Mode Driver and read the instructions about how to create a .ini file.
\par }\pard\plain \s3\ql \li0\ri0\sb240\sa60\keepn\widctlpar\aspalpha\aspnum\faauto\outlinelevel2\adjustright\rin0\lin0\itap0\pararsid5653980 \b\f1\fs26\lang3081\langfe1033\cgrid\langnp3081\langfenp1033 {\insrsid5653980 Diagonal Directions
\par }\pard\plain \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid2061501 \fs24\lang3081\langfe1033\cgrid\langnp3081\langfenp1033 {\insrsid5653980 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid2061501 {\insrsid5653980 You can also check for the diagonal directions:
\par 
\par DownBackLeft, DownBack, DownBackRight,
\par DownLeft, DownRight
\par DownForwardsLeft, DownForwards, DownForwardsRight
\par BackLeft, BackRight
\par ForwardsLeft, ForwardsRight
\par UpBackLeft, UpBack, UpBackRight
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid2061501 {\insrsid5653980 UpLeft, UpRight
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid2061501 {\insrsid5653980 UpForwardsLeft, UpForwards, UpForwardsRight.
\par 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid2061501 {\insrsid5653980 But these directions overlap}{\insrsid1331161  with each other, and the non-diagonal directions above}{\insrsid5653980 . }{\insrsid1331161 
For example the Fingers might register as both}{\insrsid5653980  DownBackLeft}{\insrsid1331161  and DownBack at the same time.}{\insrsid5653980 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid2061501 {\insrsid1331161 
\par It needs to be within +/- 45 degrees of that angle for it to be true.
\par 
\par }\pard\plain \s3\ql \li0\ri0\sb240\sa60\keepn\widctlpar\aspalpha\aspnum\faauto\outlinelevel2\adjustright\rin0\lin0\itap0\pararsid1331161 \b\f1\fs26\lang3081\langfe1033\cgrid\langnp3081\langfenp1033 {\insrsid1331161 Vague Directions}{\insrsid5653980 

\par }\pard\plain \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid1331161 \fs24\lang3081\langfe1033\cgrid\langnp3081\langfenp1033 {\insrsid1331161 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid1331161 {\insrsid1331161 If you don\rquote 
t want to be that precise, for example, you only want to know whether the palm is facing up or down, you can use the vague directions.
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid1331161 {\insrsid1331161 
\par For example:
\par 
\par debug = P5.PalmUpVague
\par 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid1331161 {\insrsid1331161 Will be true whenever the Palm is closer to bein
g up than it is to being down. Either PalmUpVague or PalmDownVague will always be true. Even if the palm is facing left or forwards.
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid1331161 {\insrsid1331161 
\par In other words, the angle only has to be +/- 90 degrees.
\par }{\insrsid15953647 
\par Vague also works for diagonals
\par 
\par }\pard\plain \s3\ql \li0\ri0\sb240\sa60\keepn\widctlpar\aspalpha\aspnum\faauto\outlinelevel2\adjustright\rin0\lin0\itap0\pararsid15953647 \b\f1\fs26\lang3081\langfe1033\cgrid\langnp3081\langfenp1033 {\insrsid15953647 Strict Directions
\par }\pard\plain \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15953647 \fs24\lang3081\langfe1033\cgrid\langnp3081\langfenp1033 {\insrsid15953647 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15953647 {\insrsid15953647 If you want t
o be even more precise than normal, you can use the strict directions. For example if you want to know if the palm is facing directly up, but not facing diagonally up and to the left, then you can use the Strict version.
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15953647 {\insrsid15953647 
\par eg.
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15953647 {\insrsid15953647 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15953647 {\insrsid15953647 Debug = P5.PalmUpStrict.
\par 
\par This also works with diagonals (which is the whole point).
\par 
\par The angle must be within 22.5 degrees.
\par 
\par }\pard\plain \s3\ql \li0\ri0\sb240\sa60\keepn\widctlpar\aspalpha\aspnum\faauto\outlinelevel2\adjustright\rin0\lin0\itap0\pararsid15953647 \b\f1\fs26\lang3081\langfe1033\cgrid\langnp3081\langfenp1033 {\insrsid15953647 Angle from Directions
\par }\pard\plain \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15953647 \fs24\lang3081\langfe1033\cgrid\langnp3081\langfenp1033 {\insrsid15953647 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15953647 {\insrsid15953647 You can also tell how far the part of your hand is from pointing in that direction. For example, how close are your fingers to pointing 
forwards?
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15953647 {\insrsid15953647 
\par You can do comparisons like this:
\par Enter = P5.FingersAngleFromForward <= 30 degrees
\par 
\par That will hold down the Enter key whenever the fingers are within 30 degrees of pointing forwards.
\par 
\par }\pard\plain \s3\ql \li0\ri0\sb240\sa60\keepn\widctlpar\aspalpha\aspnum\faauto\outlinelevel2\adjustright\rin0\lin0\itap0\pararsid15953647 \b\f1\fs26\lang3081\langfe1033\cgrid\langnp3081\langfenp1033 {\insrsid10179789 Direction }{\insrsid15953647 
Vectors and Matrix
\par }\pard\plain \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15953647 \fs24\lang3081\langfe1033\cgrid\langnp3081\langfenp1033 {\insrsid15953647 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15953647 {\insrsid15953647 The other way of fi}{\insrsid16189989 nding which direction the parts of the hand are pointing is to use the following direction vectors:}{
\insrsid15953647 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15953647 {\insrsid16189989 
\par P5.FingersDir
\par P5.ThumbDir
\par P5.PalmDir
\par P5.WristDir
\par P5.BackOfHandDir
\par 
\par These are vectors, which means they have an x, y, and z component like this:
\par 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15953647 {\insrsid16189989 [1, 0, 0]
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15953647 {\insrsid16189989 
\par The total length will equal 1.
\par 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15953647 {\insrsid16189989 
The first component is the x component. It says how much of it is pointing in a right/left direction. In this example it is 1 which means it is pointing all the way to the right. The second component is the y component, which says how 
much of it is pointing in an up/down direction. In this case none, because it is pointing exactly to the right. The third component is the z component, how much is pointing forwards/backwards, in this case none.
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15953647 {\insrsid16189989 
\par }{\insrsid10179789 There is also a }{\b\insrsid10179789\charrsid10179789 rotation matrix}{\insrsid10179789 , which is just three rows of direction vectors like the ones above.
\par }{\insrsid16189989 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15953647 {\insrsid10179789 
The third row of the rotation matrix is the fingers direction. The second row is the back of hand direction. And the first row of the rotation matrix is the right hand side of your hand direction (which isn\rquote t mentioned above). }{\insrsid16189989 

\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15953647 {\insrsid10179789 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15953647 {\insrsid10179789 You can read the components of the rotation matrix individually, by specifying the row first and then the column:
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15953647 {\insrsid10179789 
\par debug = p5.mat31
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15953647 {\insrsid10179789 In the above example it will use the fingers direction (row three), and get the x component o
f it. In other words, how much are the fingers pointing to the right? 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15953647 {\insrsid10179789 
\par debug = p5.mat22
\par 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15953647 {\insrsid10179789 
The above example would get the back-of-hand direction (row two) and get the y component of it. In other words, how much is the back of the hand pointing up?
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15953647 {\insrsid10179789 
\par }{\insrsid3367089 You can also get the entire matrix as a 3x3 matrix, by using P5.RotMat.
\par }{\insrsid2644779 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15953647 {\insrsid2644779 
You can also access the unfiltered rotation matrix with P5.UnfilteredRotMat for the whole matrix, or P5.UnfilteredRotMat11 to P5.UnfilteredRotMat33.
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15953647 {\insrsid3367089 
\par }\pard\plain \s3\ql \li0\ri0\sb240\sa60\keepn\widctlpar\aspalpha\aspnum\faauto\outlinelevel2\adjustright\rin0\lin0\itap0\pararsid3367089 \b\f1\fs26\lang3081\langfe1033\cgrid\langnp3081\langfenp1033 {\insrsid3367089 Using Trigonometry to Convert Them to An
gles}{\insrsid1730733  (Isn\rquote t as hard as you might think)}{\insrsid3367089 
\par }\pard\plain \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15953647 \fs24\lang3081\langfe1033\cgrid\langnp3081\langfenp1033 {\insrsid3367089 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15953647 {\insrsid3367089 If you understand }{\insrsid1730733 a very tiny bit of }{\insrsid3367089 
trigonometry then you can convert those numbers into an angle. For example, if we want to know how much the fingers are pointing up, that would be p5.mat32. But that is a fractio
n, between 0 and 1, or 0 and -1. To convert a fraction to an angle, you use the inverse of the sin, cos, and tan functions. The inverse is called ArcSin, ArcCos, and ArcTan in GlovePIE (But in C they are shortened to asin, acos and atan).}{
\insrsid10179789 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15953647 {\insrsid3367089 
\par ArcSin converts 0 to 0 degrees, and converts 1 to 90 degrees.
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15953647 {\insrsid3367089 ArcCos does the opposite, and converts 0 to 90 degrees and converts 1 to 0 degrees.
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15953647 {\insrsid3367089 ArcTan converts 0 to 0 degrees and converts 1 to }{\b\insrsid3367089\charrsid3367089 45 degrees}{\b\insrsid3367089 .
\par }{\insrsid3367089 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15953647 {\insrsid1730733 Note that you have to use these functions, rather than just mult
iplying by 90, because it is not linear. Sin(45 degrees) is actually about 0.7 not 0.5.
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15953647 {\insrsid1730733 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15953647 {\insrsid3367089 Let\rquote 
s say we want an angle which says how much the fingers are angled upwards. We want 1 (completely up) to be 90 degrees, so we choose ArcSin.
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15953647 {\insrsid3367089 
\par }{\insrsid1730733 debug = ArcSin(p5.mat32)}{\insrsid2773025   // a half-circle kind of pitch}{\insrsid1730733 
\par 
\par You could also write it like this:
\par 
\par debug = ArcSin(p5.FingersDir[2])}{\insrsid2773025  // the same half-circle kind of pitch}{\insrsid1730733 
\par 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15953647 {\insrsid1730733 That will tell you how much the fingers are angled upwards. If they are angled downwards the value will be -90 d
egrees. In other words, this is a version of the \'93pitch\'94 angle.
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15953647 {\insrsid1730733 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15953647 {\insrsid1730733 
There is also an ArcTan2 function, which works like ArcTan but it can give you the angles of a full circle if you give it the fractions for the two directions. It can tell the difference between 45 degrees and 225 degrees.
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15953647 {\insrsid1730733 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15953647 {\insrsid1730733 ArcTan2 works like this: the first parameter is the fraction which corresponds to }{\insrsid738360 9}{\insrsid1730733 
0 degrees and the second parameter is th}{\insrsid738360 e fraction that corresponds to }{\insrsid1730733 0 degrees. For example, lets say we want to find the horizontal angle of the fingers}{\insrsid738360 
, with 0 degrees meaning forwards, 90 degrees meaning right, 180 degrees meaning backwards and -90 degrees meaning left. So we will use the forwards component (z or column 3) of the fingers for the second parameter (which represents 0 degree
s) and we will use the right component (x or column 1) of the fingers for the first parameter (which represents 90 degrees). So it looks like this:}{\insrsid1730733 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15953647 {\insrsid738360 
\par debug = ArcTan2(p5.mat31, p5.mat33)}{\insrsid2773025  // a full circle, from forwards, kind of yaw}{\insrsid738360 
\par 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15953647 {\insrsid738360 This gives us a version of the \'93yaw\'94
 angle. Note that it is different from what we did above, because we want a complete circle for the yaw, from -180 to 180. But for the pitch we only wanted -90 to +90.}{\insrsid2773025 
 Of course, we just decided that arbitrarily. We could have got different vers
ions of the angles. For example, with these two angles, if you pitch your hand back 110 degrees then it will be considered to be a yaw of 180 degrees and a pitch of 80 degrees, because we made pitch only go up to 90, and yaw go all the way around. We coul
d just as easily choose the opposite way around:
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15953647 {\insrsid2773025 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15953647 {\insrsid2773025 
Lets say we want the pitch to have forwards as 0, up as 90, and backwards as 180. That means we need to use ArcTan2 (for the whole circle) and we want the first parameter (90 degrees) to be the y part of the
 fingers row, and we want the second parameter (0 degrees) to be the z part of the fingers row.
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15953647 {\insrsid2773025 
\par debug = ArcTan2(p5.mat32, p5.mat33)   // a full-circle, from forwards, kind of pitch
\par }{\insrsid3294694 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15953647 {\insrsid3294694 That kind of pitch actually makes less sense to most people, since if you
 tilt your hand up a bit (say 10 degrees), then rotate it to the right 80 degree, the pitch will stay the same as you expect, but if you then rotate it 20 degrees more to the right, the pitch will change to 170 degrees. Of course that was the same problem
 we would have with the yaw if we rotated up more than 90 degrees, the yaw would have jumped.
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15953647 {\insrsid3294694 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15953647 {\insrsid3294694 
There is no perfect set of angles that makes the most sense. It depends which angles suit you and your application most. Just think what information you really want.
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15953647 {\insrsid3294694 
\par }\pard\plain \s3\ql \li0\ri0\sb240\sa60\keepn\widctlpar\aspalpha\aspnum\faauto\outlinelevel2\adjustright\rin0\lin0\itap0\pararsid3294694 \b\f1\fs26\lang3081\langfe1033\cgrid\langnp3081\langfenp1033 {\insrsid3294694 Euler Angles
\par }\pard\plain \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid9582688 \fs24\lang3081\langfe1033\cgrid\langnp3081\langfenp1033 {\insrsid9582688 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid9582688 {\insrsid9582688 Euler angles suck. They exist solely to make a set of three steps to get to a parti}{\insrsid14963874 cular orientation.}{\insrsid9582688  }{
\insrsid14963874 Individually }{\insrsid9582688 they mean nothing}{\insrsid14963874  though}{\insrsid9582688 .
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid9582688 {\insrsid9582688 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid9582688 {\insrsid14963874 If you rotate an object several times, the order is important. A different order gives you a different orientation.}{\insrsid2644779 
 Not all programs use the same order, or directions.}{\insrsid9582688 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid9582688 {\insrsid14963874 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid9582688 {\insrsid14963874 
The Euler angles GlovePIE provides are in the order pitch, yaw, roll. First it rotates the hand upwards by the first angle. Then it takes the result of that and twists that thing sid
eways to the right by the second angle. Then whatever is left you tip over to the right by the third angle, so that whatever was at the top after the first two steps becomes at the right after the third step.
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid9582688 {\insrsid14963874 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid9582688 {\insrsid14963874 So the Pitch, Yaw and Roll angles provide one way to get to the current orientation of the glove in three steps.
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid9582688 {\insrsid14963874 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid9582688 {\insrsid2644779 Anyway, these angles can be read form P5.Pitch, P5.Yaw, and P5.Roll, but their usage is not recommended.
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid9582688 {\insrsid2644779 
\par }\pard\plain \s3\ql \li0\ri0\sb240\sa60\keepn\widctlpar\aspalpha\aspnum\faauto\outlinelevel2\adjustright\rin0\lin0\itap0\pararsid2644779 \b\f1\fs26\lang3081\langfe1033\cgrid\langnp3081\langfenp1033 {\insrsid2644779 Angular (rotation) velocity (speed)

\par }\pard\plain \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid2644779 \fs24\lang3081\langfe1033\cgrid\langnp3081\langfenp1033 {\insrsid2644779 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid2644779 {\insrsid2644779 If you want to measure how fast the hand is r
otating, you can use PitchVelocity, YawVelocity and RollVelocity. Unlike Pitch, Yaw and Roll, they are not steps, and they do make sense individually. Their usage }{\b\insrsid2644779\charrsid2644779 is}{\insrsid2644779  recommended.
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid2644779 {\insrsid2644779 
\par They are measured in degrees per second.
\par 
\par PitchVelocity is how fast the front is becoming the top.
\par YawVelocity is how fast the front is becoming the right.
\par RollVelocity is how fast the top is becoming the right.
\par 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid2644779 {\insrsid2644779 You can also get the acceleration in degrees-per-second per second. They are PitchAcceleration, YawAcceleration and RollAcceleration.
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid2644779 {\insrsid2644779 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid2644779 {\insrsid2644779 All these values may require smoothing to make them worth using.
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid2644779 {\insrsid2644779 
\par }\pard\plain \s1\ql \li0\ri0\sb240\sa60\keepn\widctlpar\aspalpha\aspnum\faauto\outlinelevel0\adjustright\rin0\lin0\itap0\pararsid1447344 \b\f1\fs32\lang3081\langfe1033\kerning32\cgrid\langnp3081\langfenp1033 {\insrsid1447344 \page }{\insrsid16470200 
{\*\bkmkstart _Toc152896022}Wiimote (Nintendo Wii Remote){\*\bkmkend _Toc152896022}
\par }\pard\plain \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid16470200 \fs24\lang3081\langfe1033\cgrid\langnp3081\langfenp1033 {\insrsid16470200 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid16470200 {\insrsid16470200 Warning! This feature is completely untested, as Wiimotes haven\rquote t been released in Australia yet.}{\insrsid12740339 
 The Wiimote support will be improved in later versions.}{\insrsid16470200 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid16470200 {\insrsid16470200 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid16470200 {\insrsid16470200\charrsid16470200 
If your computer has Bluetooth, you can control games with the Nintendo Wii Remote. Currently the pointer functionality is not implemented. But you can use the Wiimote\rquote s accelerometers, and buttons for input, and the Wiimote\rquote 
s rumble and LEDs for output.}{\insrsid16470200 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid16470200 {\insrsid16470200 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid16470200 {\insrsid8599737 Before you can use the Wiimote, you will need to \'93sync\'94 or \'93pair\'94
 it with your PC. The PC can only discover the Wiimote when you either hold down both the 1 and 2 buttons on the Wiimote at once, or when you hol}{\insrsid12740339 d down the Sync button (near}{\insrsid8599737  the battery compartment).}{\insrsid12740339 
 You may also need to use some sort of Bluetooth software. Do this before starting GlovePIE.
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid16470200 {\insrsid8599737 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid16470200 {\insrsid16470200 You can use the GUI to assign the Wiimote\rquote s actions, or you can use scripting with the \'93Wiimote\'94 object.}{\insrsid8599737 
 The GUI\rquote s automatic detect input feature will work with the Wiimote.}{\insrsid16470200 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid16470200 {\insrsid16470200 
\par }\pard\plain \s2\ql \li0\ri0\sb240\sa60\keepn\widctlpar\aspalpha\aspnum\faauto\outlinelevel1\adjustright\rin0\lin0\itap0\pararsid8599737 \b\i\f1\fs28\lang3081\langfe1033\cgrid\langnp3081\langfenp1033 {\insrsid8599737 Buttons
\par }\pard\plain \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid16470200 \fs24\lang3081\langfe1033\cgrid\langnp3081\langfenp1033 {\insrsid8599737 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid16470200 {\insrsid16470200 The Wiimote has the following buttons, which are either true or false:
\par 
\par Up, Down, Left, Right,
\par A, B,
\par Minus, Home, Plus
\par One, Two
\par 
\par The power button isn\rquote t implemented yet.
\par 
\par }\pard\plain \s2\ql \li0\ri0\sb240\sa60\keepn\widctlpar\aspalpha\aspnum\faauto\outlinelevel1\adjustright\rin0\lin0\itap0\pararsid8599737 \b\i\f1\fs28\lang3081\langfe1033\cgrid\langnp3081\langfenp1033 {\insrsid8599737 Motion Sensing
\par }\pard\plain \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid16470200 \fs24\lang3081\langfe1033\cgrid\langnp3081\langfenp1033 {\insrsid8599737 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid16470200 {\insrsid16470200 The Wiimote also has three raw force values:
\par 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid16470200 {\insrsid16470200 RawForceX, RawForceY, and RawForceZ
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid16470200 {\insrsid16470200 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid16470200 {\insrsid16470200 They use the standard left-handed coordinate system used by everything in GlovePIE, not the Wiimote coordinate system.
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid16470200 {\insrsid16470200 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid16470200 {\insrsid16470200 Note that }{\insrsid8599737 a stationary Wiimote has a force of 1 G holding it up, otherwise it would be falling due to gravity\rquote 
s 1 G force. The other forces should be 0 on a stationary Wiimote.}{\insrsid16470200 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid16470200 {\insrsid8599737 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid16470200 {\insrsid8599737 
Note that RawForceX, RawForceY and RawForceZ are in unknown units, and they are offset slightly due to manufacturing differences in the Wiimote hardware. Your GlovePIE script will need to take this into account.
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid16470200 {\insrsid8599737 
\par }\pard\plain \s2\ql \li0\ri0\sb240\sa60\keepn\widctlpar\aspalpha\aspnum\faauto\outlinelevel1\adjustright\rin0\lin0\itap0\pararsid12740339 \b\i\f1\fs28\lang3081\langfe1033\cgrid\langnp3081\langfenp1033 {\insrsid12740339 Rotations
\par }\pard\plain \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid16470200 \fs24\lang3081\langfe1033\cgrid\langnp3081\langfenp1033 {\insrsid12740339 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid16470200 {\insrsid8599737 The Wiimote doesn\rquote 
t contain gyros (BOO!!!), so it has no way of determining the yaw rotation without using an imitation sensor bar. But it can sort-of tell which way is down, based on the force of gravity. This allows it to measure pitch and roll rotations.
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid16470200 {\insrsid223426 
\par }\pard\plain \s2\ql \li0\ri0\sb240\sa60\keepn\widctlpar\aspalpha\aspnum\faauto\outlinelevel1\adjustright\rin0\lin0\itap0\pararsid223426 \b\i\f1\fs28\lang3081\langfe1033\cgrid\langnp3081\langfenp1033 {\insrsid223426 Sensor Bar
\par }\pard\plain \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid16470200 \fs24\lang3081\langfe1033\cgrid\langnp3081\langfenp1033 {\insrsid223426 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid16470200 {\insrsid223426 
This new version in theory supports the pointer function of the Wiimote Sensor Bar. The sensor bar is just a bunch of Infra Red lights which are always on. You can make your o
wn fake sensor bar with candles, Christmas tree lights, or Infra-Red remote controls with a button held down.
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid16470200 {\insrsid223426 
\par You can read the position of the infra-red dots that the Wiimote can see with:
\par wiimote.dot1x, wiimote.dot1y
\par \'85
\par wiimote.dot4x, wiimote.dot4y
\par 
\par You can tell whether an infra-red dot can be seen with Wiimote.dot1vis  to Wiimote.dot4vis
\par 
\par You can tell the size of a dot (between 0 and 15) with Wiimote.dot1size to Wiimote.dot4size
\par 
\par }\pard\plain \s2\ql \li0\ri0\sb240\sa60\keepn\widctlpar\aspalpha\aspnum\faauto\outlinelevel1\adjustright\rin0\lin0\itap0\pararsid12740339 \b\i\f1\fs28\lang3081\langfe1033\cgrid\langnp3081\langfenp1033 {\insrsid12740339 LEDs
\par }\pard\plain \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid12740339 \fs24\lang3081\langfe1033\cgrid\langnp3081\langfenp1033 {\insrsid12740339 
\par You can set the 4 LEDs on the Wiimote by setting:
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid12740339 {\insrsid12740339 
\par Wiimote.Leds
\par 
\par to a value between 0 and 15. It is binary.
\par 
\par }\pard\plain \s2\ql \li0\ri0\sb240\sa60\keepn\widctlpar\aspalpha\aspnum\faauto\outlinelevel1\adjustright\rin0\lin0\itap0\pararsid12740339 \b\i\f1\fs28\lang3081\langfe1033\cgrid\langnp3081\langfenp1033 {\insrsid12740339 Force Feedback
\par }\pard\plain \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid12740339 \fs24\lang3081\langfe1033\cgrid\langnp3081\langfenp1033 {\insrsid12740339 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid12740339 {\insrsid12740339 You can activate force feedback by setting:
\par 
\par Wiimote.Rumble
\par 
\par to either true or false
\par 
\par }\pard\plain \s2\ql \li0\ri0\sb240\sa60\keepn\widctlpar\aspalpha\aspnum\faauto\outlinelevel1\adjustright\rin0\lin0\itap0\pararsid12740339 \b\i\f1\fs28\lang3081\langfe1033\cgrid\langnp3081\langfenp1033 {\insrsid12740339 Nunchuck and Classic Controllers

\par }\pard\plain \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid12740339 \fs24\lang3081\langfe1033\cgrid\langnp3081\langfenp1033 {\insrsid12740339 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid12740339 {\insrsid12740339 GlovePIE }{\insrsid223426 can\rquote t read Nunchuk or Classic Controller buttons or movements}{\insrsid12740339 . But Glove
PIE can tell when they are plugged in like this:
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid12740339 {\insrsid12740339 
\par Wiimote.HasNunChuck
\par Wiimote.HasClassic
\par 
\par They will be true }{\insrsid223426 when that attachment is plugged }{\insrsid12740339 in, and false otherwise.
\par }{\insrsid223426 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid12740339 {\insrsid223426 The Nunchuk and Classic Controller no longer prevent the Wiimote from sending its buttons and movements.
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid12740339 {\insrsid223426 
\par }\pard\plain \s2\ql \li0\ri0\sb240\sa60\keepn\widctlpar\aspalpha\aspnum\faauto\outlinelevel1\adjustright\rin0\lin0\itap0\pararsid12013081 \b\i\f1\fs28\lang3081\langfe1033\cgrid\langnp3081\langfenp1033 {\insrsid12013081 Low level}{\insrsid223426  stuff

\par }\pard\plain \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid12740339 \fs24\lang3081\langfe1033\cgrid\langnp3081\langfenp1033 {\insrsid223426 
\par }{\insrsid12013081 You can read the data reports from the Wiimote with:}{\insrsid223426 
\par }{\insrsid12013081 
\par debug  = Wiimote.InByteString
\par 
\par Or you can read them individually with:
\par 
\par var.a = Wiimote.InReport
\par var.b = Wiimote.InByte1
\par }{\insrsid12740339 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid16470200 {\insrsid12013081 You can send data reports to the Wiimote with this function (it has no dot):}{\insrsid12740339 
\par }{\insrsid12013081 
\par WiimoteSend(1, 0x12, 1, 0x33)
\par 
\par The first parameter of WiimoteSend is the Wiimote number you want to send it to, normally 1. The second parameter is the report 
number. The remaining parameters are the report payload. In this case, the report tells the Wiimote to start vibrating, and to send data via report 0x33.
\par 
\par }{\insrsid12661911 The one-byte reports can also be sent another way by setting one of these values (it will only send the report when the value changes):}{\insrsid12013081 
\par }{\insrsid12661911 
\par Wiimote.Report11, Wiimote.Report13, Wiimote.Report14, Wiimote.Report15, Wiimote.Report19, Wiimote.Report1A
\par 
\par You can set bytes in the Wiimote\rquote s onboard memory (where Miis are stored) with the WiimotePoke command, and read bytes from its memory with the WiimotePeek command.
\par 
\par WiimotePoke(1, 0x04B00033, 0x33)
\par var.value = WiimotePeek(1, 0x04B00033)
\par 
\par The first parameter is optional, and it is the Wiimote number. The second parameter is the address. The third parameter is the value you want to set it to (between 0 and 255).
\par 
\par }\pard\plain \s2\ql \li0\ri0\sb240\sa60\keepn\widctlpar\aspalpha\aspnum\faauto\outlinelevel1\adjustright\rin0\lin0\itap0\pararsid12661911 \b\i\f1\fs28\lang3081\langfe1033\cgrid\langnp3081\langfenp1033 {\insrsid12661911 Multiple Wiimotes
\par }\pard\plain \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid16470200 \fs24\lang3081\langfe1033\cgrid\langnp3081\langfenp1033 {\insrsid12661911 
\par You can tell how many Wiimotes there are with Wiimote.Count
\par 
\par You can access a particular wiimote by putting a number after the word \'93wiimote\'94 and before the dot. For example:
\par 
\par Enter = wiimote2.A
\par 
\par You can tell whether a particular Wiimote exists with Wiimote.Exists
\par 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid12661911 {\insrsid12661911 You can read the Serial number (as text) with Wiimote.Serial
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid16470200 {\insrsid12661911 
\par Don\rquote t forget to sync both Wiimotes with the PC before you try to use them.}{\insrsid12661911\charrsid16470200 
\par }\pard\plain \s1\ql \li0\ri0\sb240\sa60\keepn\widctlpar\aspalpha\aspnum\faauto\outlinelevel0\adjustright\rin0\lin0\itap0\pararsid16470200 \b\f1\fs32\lang3081\langfe1033\kerning32\cgrid\langnp3081\langfenp1033 {\insrsid16470200 
\par }\pard \s1\ql \li0\ri0\sb240\sa60\keepn\widctlpar\aspalpha\aspnum\faauto\outlinelevel0\adjustright\rin0\lin0\itap0\pararsid16470200 {\insrsid16470200 \page }{\insrsid1447344 MIDI}{\insrsid2644779 
\par }\pard\plain \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid2644779 \fs24\lang3081\langfe1033\cgrid\langnp3081\langfenp1033 {\insrsid1447344 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid2644779 {\insrsid1447344 MIDI is a system for musical instruments to communicate with each other and with computers.
\par 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid2644779 {\insrsid1447344 If you want to control MIDI software with GlovePIE, you will need to download and install MidiYoke from }{\field{\*\fldinst {\insrsid1447344 
 HYPERLINK "}{\insrsid1447344\charrsid1447344 http://www.midiox.com/myoke.htm}{\insrsid1447344 " }{\insrsid8473020 {\*\datafield 
00d0c9ea79f9bace118c8200aa004ba90b02000000170000002000000068007400740070003a002f002f007700770077002e006d006900640069006f0078002e0063006f006d002f006d0079006f006b0065002e00680074006d000000e0c9ea79f9bace118c8200aa004ba90b4000000068007400740070003a002f002f00
7700770077002e006d006900640069006f0078002e0063006f006d002f006d0079006f006b0065002e00680074006d0000000000}}}{\fldrslt {\cs15\ul\cf2\insrsid1447344\charrsid11739209 http://www.midiox.com/myoke.htm}}}{\insrsid1447344 
. MIDI Yoke will also allow you to read MIDI output from other programs.
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid2644779 {\insrsid1447344 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid2644779 {\insrsid1447344 Otherwise you can only control the soundcard or external MIDI devices. You can also read input from MIDI devices.
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid2644779 {\insrsid1447344 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid2644779 {\insrsid1447344 MIDI devices can be plugged into your joystick port, if you have the right cable. Then you can use them for input.
\par }\pard\plain \s2\ql \li0\ri0\sb240\sa60\keepn\widctlpar\aspalpha\aspnum\faauto\outlinelevel1\adjustright\rin0\lin0\itap0\pararsid14027689 \b\i\f1\fs28\lang3081\langfe1033\cgrid\langnp3081\langfenp1033 {\insrsid14027689 {\*\bkmkstart _Toc152896023}
MIDI Ports}{\insrsid1447344 {\*\bkmkend _Toc152896023}
\par }\pard\plain \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid2644779 \fs24\lang3081\langfe1033\cgrid\langnp3081\langfenp1033 {\insrsid1447344 
Each computer may have multiple MIDI output ports, and multiple MIDI input ports. The output ports will include your sound card,
 software synthesisers, the external ports on the back of your computer, and MIDI Yoke ports. Input ports will include the input ports on the back of your soundcard, and the MIDI Yoke p}{\insrsid12932360 orts. There is no guarantee that}{\insrsid1447344 
 input and output port}{\insrsid12932360 s match up. There is also an output port called the \'93MIDI Mapper\'94
 which in Windows 3.1 was a complicated system for forwarding MIDI messages to different devices, but now it is just a setting in control panel which forwards everything to a chosen device.}{\insrsid1447344 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid2644779 {\insrsid12932360 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid2644779 {\insrsid12932360 Each MIDI port ha
s 16 channels. It is possible to have multiple MIDI devices connected to the same port, but for each one to be listening to a separate channel. It is also possible for one MIDI device to use all the channels, with each channel representing a separate virt
ual instrument.
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid2644779 {\insrsid12932360 
\par You can set which MIDI output port you want GlovePIE to use, like this:}{\insrsid1447344 
\par }{\insrsid12932360 
\par midi.DeviceOut = 2
\par 
\par Where 1 is the first output port, and 0 is the MIDI mapper.
\par 
\par Future writes to midi values will then go to port 2.
\par 
\par You can set the input port like this:
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid2644779 {\insrsid12932360 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid2644779 {\insrsid12932360 midi.DeviceIn = 2
\par 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid2644779 {\insrsid12932360 But there is no guarantee that input port 2 is connected to the same device as output port 2. In fact, most of the time it won\rquote t be.

\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid2644779 {\insrsid12932360 
\par If you want to know what the name of that device is, use:
\par 
\par }{\insrsid12932360\charrsid12932360 debug = midi.OutDevName}{\insrsid12932360 
\par }{\insrsid11274579 
\par or
\par 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid11274579 {\insrsid11274579\charrsid12932360 debug = midi.}{\insrsid11274579 InD}{\insrsid11274579\charrsid12932360 evName}{\insrsid11274579 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid11274579 {\insrsid11274579 
\par }{\insrsid9205223 You can also look at OutVersion, OutTech, InVersion and InTech.
\par 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid11274579 {\insrsid11274579 
Instead of using the default ports that you set with DeviceOut and DeviceIn, you can also use several ports at once, by explicitly putting them after the \'93midi\'94 part of the va
lue. For example to set the volume on (the default channel) of MIDI output port 2:
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid11274579 {\insrsid11274579 
\par midi2.Volume = 50%
\par 
\par Or you could do the same thing like this:
\par 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid2644779 {\insrsid11274579 midi.DeviceOut = 2
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid2644779 {\insrsid11274579 midi.Volume = 50%
\par 
\par A better way to control output ports, is to use the different port categories:
\par 
\par midi.mapper.volume = 50%
\par midi.soundcard.volume = 50%
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid2644779 {\insrsid11274579 midi.software.volume = 50%
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid2644779 {\insrsid11274579 midi.wavetable.volume = 50%
\par midi.playback.volume = 50%
\par midi.yoke2.volume = 50%
\par midi.external2.volume = 50%
\par 
\par You can optionally put a number after the category to use the n}{\super\insrsid11274579 th}{\insrsid11274579  device in that category.
\par 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid2644779 {\insrsid11274579 If you want to set the default output device to one of those, then you can }{\insrsid14027689 
read from the DeviceOut or DeviceIn on one of those devices and use it to set the default device. Observe:
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid2644779 {\insrsid14027689 
\par midi.DeviceOut = midi.yoke3.DeviceOut
\par 
\par That will set the default output port to the 3}{\super\insrsid14027689\charrsid14027689 rd}{\insrsid14027689  MIDI Yoke port.
\par }{\insrsid11274579 
\par }\pard\plain \s2\ql \li0\ri0\sb240\sa60\keepn\widctlpar\aspalpha\aspnum\faauto\outlinelevel1\adjustright\rin0\lin0\itap0\pararsid14027689 \b\i\f1\fs28\lang3081\langfe1033\cgrid\langnp3081\langfenp1033 {\insrsid14027689 {\*\bkmkstart _Toc152896024}
MIDI Channels}{\insrsid11274579 {\*\bkmkend _Toc152896024}
\par }\pard\plain \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid14027689 \fs24\lang3081\langfe1033\cgrid\langnp3081\langfenp1033 {\insrsid14027689 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid14027689 {\insrsid14027689 Each MIDI port has 16 channels, numbered 1 to 16. You can set the default channel like this:
\par 
\par midi.DefaultChannel = 4
\par 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid14027689 {\insrsid14027689 Each channel has its own instrument number, volume and other parameters, and each channel can play multiple notes at once.
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid14027689 {\insrsid14027689 
\par Or you can specify the channel explicitly, like this:
\par 
\par midi.Channel4.Volume = 50%
\par 
\par You can specify both the port and the channel like this:
\par 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid14027689 {\insrsid14027689 midi.Yoke3.Channel4.Volume = 50%
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid14027689 {\insrsid14027689 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid14027689 {\insrsid14027689 All the channe
ls behave the same, except for Channel 10 on General MIDI devices (which most devices are these days). Channel 10 is always in percussion mode, and will play a different percussion instrument for each note of the scale. You can turn General Midi on or off
 by setting:
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid14027689 {\insrsid14027689 
\par midi.GeneralMidi = True
\par or 
\par midi.GeneralMidi = False
\par 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid14027689 {\insrsid14027689 If you tell GlovePIE to play a percussion instrument, it will automatically do it on channel 10, regardless of which channel you specify.

\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid14027689 {\insrsid14027689 
\par }\pard\plain \s2\ql \li0\ri0\sb240\sa60\keepn\widctlpar\aspalpha\aspnum\faauto\outlinelevel1\adjustright\rin0\lin0\itap0\pararsid14027689 \b\i\f1\fs28\lang3081\langfe1033\cgrid\langnp3081\langfenp1033 {\insrsid14027689 {\*\bkmkstart _Toc152896025}
Playing notes{\*\bkmkend _Toc152896025}
\par }\pard\plain \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid14027689 \fs24\lang3081\langfe1033\cgrid\langnp3081\langfenp1033 {\insrsid14027689 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid14027689 {\insrsid14027689 You can turn notes on and off by setting the note to either true or false. For example to play middle C when the press the space bar:

\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid14027689 {\insrsid14027689 
\par midi.MiddleC = space
\par 
\par }{\insrsid8261370 Middle C is octave 5, so you can also write it like this:}{\insrsid14027689 
\par }{\insrsid8261370 
\par midi.C5 = space
\par 
\par You can also play other notes like this:
\par 
\par midi.FSharp8 = Enter
\par 
\par The lowest note is C0. The highest note is G10.
\par 
\par }\pard\plain \s3\ql \li0\ri0\sb240\sa60\keepn\widctlpar\aspalpha\aspnum\faauto\outlinelevel2\adjustright\rin0\lin0\itap0\pararsid8261370 \b\f1\fs26\lang3081\langfe1033\cgrid\langnp3081\langfenp1033 {\insrsid8261370 
Striking notes with a particular velocity
\par }\pard\plain \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid14027689 \fs24\lang3081\langfe1033\cgrid\langnp3081\langfenp1033 {\insrsid8261370 
\par If you want more control over how fast the note is struck, you can set the velocity instead. If you turn notes on and off like above they will always be struck with a velocity of 50%. But you can also turn notes on by setting their velocity:
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid14027689 {\insrsid8261370 
\par if pressed(Space) then midi.C5Velocity = 80%
\par if released(Space) then midi.C5Velocity = 0
\par 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid14027689 {\insrsid8261370 Note that velocities are between 0 and 1 (80% is the same as 0.8). Setting the ve
locity to 0 turns the note off. Notes are always released with a release-velocity of 50%.
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid14027689 {\insrsid8261370 
\par Some instruments will sound the same whatever velocity you use.
\par 
\par }\pard\plain \s3\ql \li0\ri0\sb240\sa60\keepn\widctlpar\aspalpha\aspnum\faauto\outlinelevel2\adjustright\rin0\lin0\itap0\pararsid16415098 \b\f1\fs26\lang3081\langfe1033\cgrid\langnp3081\langfenp1033 {\insrsid16415098 Applying Pressure to a note
\par }\pard\plain \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid16415098 \fs24\lang3081\langfe1033\cgrid\langnp3081\langfenp1033 {\insrsid16415098 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid16415098 {\insrsid16415098 You can also apply extra pressure to a note when it is down. By default
 0 extra pressure is applied. Applying extra pressure to a note may not have any effect on most instruments. The extra pressure is called \'93aftertouch\'94.
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid16415098 {\insrsid16415098 
\par if pressed(space) then
\par   midi.C5 = true
\par   midi.C5Aftertouch = 20%
\par else
\par   midi.C5 = false
\par end if
\par 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid16415098 {\insrsid16415098 You can also apply extra pressure to every note that is played on that channel by setting the ChannelPressure:
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid16415098 {\insrsid16415098 
\par midi.ChannelPressure = 20%}{\insrsid16415098\charrsid16415098 
\par }\pard\plain \s3\ql \li0\ri0\sb240\sa60\keepn\widctlpar\aspalpha\aspnum\faauto\outlinelevel2\adjustright\rin0\lin0\itap0\pararsid8261370 \b\f1\fs26\lang3081\langfe1033\cgrid\langnp3081\langfenp1033 {\insrsid8261370 Playing notes by number
\par }\pard\plain \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid8261370 \fs24\lang3081\langfe1033\cgrid\langnp3081\langfenp1033 {\insrsid8261370 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid8261370 {\insrsid8261370 You can also play a note by setting midi.FirstNote to the number of the note you want to play. The
re are 12 notes per octave, including sharps and flats (anyone who tells you 8 is an idiot, even without sharps and flats there are only 7). C0 is note number 0. C1 is note number 12. MiddleC is note number 60. G10 is note number 127. You need to set it t
o -1 to turn the note off.
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid8261370 {\insrsid8261370 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid8261370 {\insrsid8261370 if pressed(Space) then midi.FirstNote = 60
\par if released(Space) then midi.FirstNote = -1}{\insrsid8261370\charrsid8261370 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid14027689 {\insrsid8261370 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid14027689 {\insrsid16415098 There is also a SecondNote, ThirdNote, and FourthNote, so you can play 4 notes by number at once. }{\insrsid8261370 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid14027689 {\insrsid16415098 
\par These notes are all struck (and released) with a velocity of 50%.
\par 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid14027689 {\insrsid16415098 You can\rquote 
t read the note you are playing, so if you want to remember it, store it in a variable. Reading from midi.FirstNote will read from the MIDI input device instead!
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid14027689 {\insrsid14027689 
\par }\pard\plain \s2\ql \li0\ri0\sb240\sa60\keepn\widctlpar\aspalpha\aspnum\faauto\outlinelevel1\adjustright\rin0\lin0\itap0\pararsid14506655 \b\i\f1\fs28\lang3081\langfe1033\cgrid\langnp3081\langfenp1033 {\insrsid14506655 {\*\bkmkstart _Toc152896026}
Playing Percussion{\*\bkmkend _Toc152896026}
\par }\pard\plain \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid14506655 \fs24\lang3081\langfe1033\cgrid\langnp3081\langfenp1033 {\insrsid14506655 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid14506655 {\insrsid14506655 You can play percussion instruments by setting one of the percussion instruments:
\par 
\par }{\insrsid9205223 midi.AcousticBassDrum}{\insrsid14506655  = space
\par 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid14506655 {\insrsid14506655   AcousticBassDrum}{\insrsid9205223 , BassDrum2, }{\insrsid14506655 SideStick}{\insrsid9205223 , }{\insrsid14506655 AcousticSnare}{
\insrsid9205223 , }{\insrsid14506655 HandClap}{\insrsid9205223 , }{\insrsid14506655 ElectricSnare}{\insrsid9205223 , }{\insrsid14506655 LowFloorTom}{\insrsid9205223 , }{\insrsid14506655 ClosedHiHat}{\insrsid9205223 , }{\insrsid14506655 HighFloorTom}{
\insrsid9205223 , }{\insrsid14506655 PedalHiHat}{\insrsid9205223 , }{\insrsid14506655 LowTom}{\insrsid9205223 , }{\insrsid14506655 OpenHiHat}{\insrsid9205223 , }{\insrsid14506655 LowMidTom}{\insrsid9205223 , }{\insrsid14506655 HighMidTom}{\insrsid9205223 
, }{\insrsid14506655 CrashCymbal1}{\insrsid9205223 , }{\insrsid14506655 HighTom}{\insrsid9205223 , }{\insrsid14506655 RideCymbal1}{\insrsid9205223 , }{\insrsid14506655 ChineseCymbal}{\insrsid9205223 , }{\insrsid14506655 RideBell}{\insrsid9205223 , }{
\insrsid14506655 Tambourine}{\insrsid9205223 , }{\insrsid14506655 SplashCymbal}{\insrsid9205223 , }{\insrsid14506655 Cowbell}{\insrsid9205223 , CrashCymbal2, }{\insrsid14506655 Vibraslap}{\insrsid9205223 , }{\insrsid14506655 RideCymbal2}{\insrsid9205223 
, }{\insrsid14506655 HiBongo}{\insrsid9205223 , }{\insrsid14506655 LowBongo}{\insrsid9205223 , }{\insrsid14506655 MuteHiConga}{\insrsid9205223 , }{\insrsid14506655 OpenHiConga}{\insrsid9205223 , }{\insrsid14506655 LowConga}{\insrsid9205223 , }{
\insrsid14506655 HighTimbale}{\insrsid9205223 , LowTimbale, }{\insrsid14506655 HighAgogo}{\insrsid9205223 , }{\insrsid14506655 LowAgogo}{\insrsid9205223 , }{\insrsid14506655 Cabasa}{\insrsid9205223 , }{\insrsid14506655 Maracas}{\insrsid9205223 , }{
\insrsid14506655 ShortWhistle}{\insrsid9205223 , }{\insrsid14506655 LongWhistle}{\insrsid9205223 , }{\insrsid14506655 ShortGuiro}{\insrsid9205223 , }{\insrsid14506655 LongGuiro}{\insrsid9205223 , }{\insrsid14506655 Claves}{\insrsid9205223 , HiWoodBlock, }
{\insrsid14506655 LowWoodBlock}{\insrsid9205223 , }{\insrsid14506655 MuteCuica}{\insrsid9205223 , }{\insrsid14506655 OpenCuica}{\insrsid9205223 , }{\insrsid14506655 MuteTriangle}{\insrsid9205223 , }{\insrsid14506655 OpenTriangle
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid14506655 {\insrsid9205223 
\par You can also set other percussion instruments by setting Percussion0 to Percussion127.}{\insrsid9205223\charrsid14506655 
\par }\pard\plain \s2\ql \li0\ri0\sb240\sa60\keepn\widctlpar\aspalpha\aspnum\faauto\outlinelevel1\adjustright\rin0\lin0\itap0\pararsid16415098 \b\i\f1\fs28\lang3081\langfe1033\cgrid\langnp3081\langfenp1033 {\insrsid16415098 {\*\bkmkstart _Toc152896027}
Reading Notes}{\insrsid14027689 {\*\bkmkend _Toc152896027}
\par }\pard\plain \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid16415098 \fs24\lang3081\langfe1033\cgrid\langnp3081\langfenp1033 {\insrsid16415098 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid16415098 {\insrsid16415098 You can read whether notes are being played on a MIDI input device like this:
\par 
\par debug = midi.MiddleC
\par 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid16415098 {\insrsid16415098 or you can read by number by using midi.FirstNote (SecondNote, ThirdNote and FourthNote don\rquote t work for MIDI input yet).
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid16415098 {\insrsid16415098 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid16415098 {\insrsid16415098 if midi.FirstNote = 60 then say(\'93hello\'94)
\par 
\par You can use these methods to control games by using a MIDI keyboard:
\par 
\par Space = midi.MiddleC
\par Up = midi.}{\insrsid14506655 MiddleDSharp}{\insrsid16415098 
\par }{\insrsid14506655 Down = midi.MiddleE
\par Left = midi.MiddleD
\par Right = midi.MiddleE
\par }{\insrsid16415098 
\par You can also read the velocities and aftertouches.
\par }{\insrsid14506655 
\par }\pard\plain \s2\ql \li0\ri0\sb240\sa60\keepn\widctlpar\aspalpha\aspnum\faauto\outlinelevel1\adjustright\rin0\lin0\itap0\pararsid14506655 \b\i\f1\fs28\lang3081\langfe1033\cgrid\langnp3081\langfenp1033 {\insrsid14506655 {\*\bkmkstart _Toc152896028}
Setting the instrument{\*\bkmkend _Toc152896028}
\par }\pard\plain \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid14506655 \fs24\lang3081\langfe1033\cgrid\langnp3081\langfenp1033 {\insrsid14506655 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid14506655 {\insrsid14506655 You can set the instrume
nt to a number between 1 and 128 by setting midi.Instrument. See a midi instrument chart on the internet if you want to know what each instrument is.
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid14506655 {\insrsid14506655 
\par If you normally use instrument numbers between 0 and 127, you can set midi.Instrument0 instead.
\par 
\par Note that each channel has its own instrument (except channel 10 on GeneralMidi)
\par 
\par By default instrument 1 is used, which is normally a piano.
\par 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid14506655 {\insrsid14506655 If your instrument contains multiple banks of instruments, you can also set BankSelectLevel. But you need to divide by 16383\'85
 for example, to set it to bank 2:
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid14506655 {\insrsid14506655 
\par midi.BankSelectLevel = 2 / 16383
\par 
\par The first bank is bank 0. Instrument banks may have no effect on some devices.
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid14506655 {\insrsid14506655 
\par }\pard\plain \s2\ql \li0\ri0\sb240\sa60\keepn\widctlpar\aspalpha\aspnum\faauto\outlinelevel1\adjustright\rin0\lin0\itap0\pararsid10698787 \b\i\f1\fs28\lang3081\langfe1033\cgrid\langnp3081\langfenp1033 {\insrsid10698787 {\*\bkmkstart _Toc152896029}
Pitch Wheel}{\insrsid14506655 {\*\bkmkend _Toc152896029}
\par }\pard\plain \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid10698787 \fs24\lang3081\langfe1033\cgrid\langnp3081\langfenp1033 {\insrsid10698787 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid10698787 {\insrsid10698787 You can also set the pitch bend using the pitch wheel.
\par 
\par The pitch wheel can be set to a value between 0 and 1. Setting it to 0.5 means no effect.
\par 
\par midi.PitchWheel = 50%
\par 
\par Each channel has its own Pitch Wheel.
\par }{\insrsid10698787\charrsid10698787 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid14506655 {\insrsid10698787 You can also try setting the PitchBendRange to change the range that the maximum pitch bend represents, in semitones.}{\insrsid14506655 

\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid14506655 {\insrsid10698787 
\par }\pard\plain \s2\ql \li0\ri0\sb240\sa60\keepn\widctlpar\aspalpha\aspnum\faauto\outlinelevel1\adjustright\rin0\lin0\itap0\pararsid10698787 \b\i\f1\fs28\lang3081\langfe1033\cgrid\langnp3081\langfenp1033 {\insrsid10698787 {\*\bkmkstart _Toc152896030}
Controls and Change Control messages{\*\bkmkend _Toc152896030}
\par }\pard\plain \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid14506655 \fs24\lang3081\langfe1033\cgrid\langnp3081\langfenp1033 {\insrsid14506655 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid14506655 {\insrsid10698787 
Each channel of each device has a set of 32 different 14-bit controls, numbered 0 to 31, and a set of 7-bit controls numbered 64 onwards. You can also access the two 7-bit components of the 14-bit controls separately, as Coarse and Fin
e controls or as byte controls numbered 0 to 63.
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid14506655 {\insrsid10698787 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid14506655 {\insrsid10698787 
Some of them have standard names, and some of them just have numbers. But you can use any control by number if you prefer. Sometimes the controls aren\rquote t used for their defined function.
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid14506655 {\insrsid10698787 
\par For example, setting Midi.Volume is the same as setting Midi.Control7.
\par 
\par So you can either write this:
\par 
\par midi.Volume = 52.38%
\par 
\par }{\insrsid403405 or}{\insrsid10698787 
\par }{\insrsid403405 
\par midi.Control7 = 52.38%
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid14506655 {\insrsid403405 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid14506655 {\insrsid403405 It is a 14-bit control, so it is a value between 0 and 1, but with about 4 or 5 decimal places. In this case we are setting it to 0.5238

\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid14506655 {\insrsid403405 
\par You can also access the coarse and fine parts separately, like this:
\par 
\par midi.Control7Coarse = 0.5
\par 
\par midi.Control7Fine = 0
\par 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid14506655 {\insrsid403405 The controls numbered 32 to 63 are the same as the fine parts of the controls numbered 0 to 31. So Control7Fine and Cont
rol38 are the same thing.
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid14506655 {\insrsid403405 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid14506655 {\insrsid403405 You can also use ByteControl7 to refer to the coarse part of Control7, or ByteControl38 to refer to the fine part of Control7.
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid14506655 {\insrsid403405 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid14506655 {\insrsid403405 Controls numbered 64 onwards are only 7-bit controls, and have no coarse or fine components. They are
 also set to a value between 0 and 1, but they will be accurate to less decimal places (about 2). They also often have names.
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid14506655 {\insrsid403405 
\par }\pard\plain \s2\ql \li0\ri0\sb240\sa60\keepn\widctlpar\aspalpha\aspnum\faauto\outlinelevel1\adjustright\rin0\lin0\itap0\pararsid403405 \b\i\f1\fs28\lang3081\langfe1033\cgrid\langnp3081\langfenp1033 {\insrsid403405 {\*\bkmkstart _Toc152896031}
RPN (Registered Parameter Numbers){\*\bkmkend _Toc152896031}
\par }\pard\plain \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid403405 \fs24\lang3081\langfe1033\cgrid\langnp3081\langfenp1033 {\insrsid403405 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid403405 {\insrsid403405 MIDI also has RPN messages. These include:
\par 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid403405 {\insrsid403405 MasterTuning, }{\insrsid8924119 MasterTuningCoarse, MasterTuningFine, }{\insrsid403405 
PitchBendRange, TuningProgramSelect and TuningBankSelect.
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid403405 {\insrsid403405 
\par You can set them in GlovePIE like this:
\par 
\par Midi.PitchBendRange = 2 octaves
\par Midi.MasterTuning = }{\insrsid8924119 -}{\insrsid403405 0.5 semitones // all notes will be off by half a note
\par 
\par }{\insrsid8924119 I can\rquote }{\insrsid935787 t guarantee these will work.}{\insrsid8924119 
\par }{\insrsid403405 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid403405 {\insrsid8924119 You can also set other RPN values manually, Eg. to set RPN 0,1 like this:
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid403405 {\insrsid8924119 
\par Midi.Control101 = 0 / 127
\par Midi.Control100 = 1 / 127
\par Midi.DataEntry = 0.75 // whatever value you want to set it to
\par Midi.Control101 = 127 / 127
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid8924119 {\insrsid8924119 Midi.Control100 = 127 / 127
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid8924119 {\insrsid8924119\charrsid403405 
\par }\pard\plain \s2\ql \li0\ri0\sb240\sa60\keepn\widctlpar\aspalpha\aspnum\faauto\outlinelevel1\adjustright\rin0\lin0\itap0\pararsid8924119 \b\i\f1\fs28\lang3081\langfe1033\cgrid\langnp3081\langfenp1033 {\insrsid8924119 {\*\bkmkstart _Toc152896032}
NRPN (Non Registered Parameter Numbers){\*\bkmkend _Toc152896032}
\par }\pard\plain \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid403405 \fs24\lang3081\langfe1033\cgrid\langnp3081\langfenp1033 {\insrsid8924119 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid403405 {\insrsid8924119 There are no standard NRPN values}{\insrsid935787  (that\rquote s the point of NRPN)}{\insrsid8924119 
. But you can set them manually like this}{\insrsid935787  (for NRPN 0,1)}{\insrsid8924119 :
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid403405 {\insrsid8924119 
\par }{\insrsid935787 Midi.Control99 = 0 / 127}{\insrsid8924119 
\par }{\insrsid935787 Midi.Control98 = 1 / 127
\par Midi.DataEntry = 0.75 // or whatever value
\par Midi.Control99 = 127 / 127
\par Midi.Control98 = 127 / 127
\par 
\par }\pard\plain \s2\ql \li0\ri0\sb240\sa60\keepn\widctlpar\aspalpha\aspnum\faauto\outlinelevel1\adjustright\rin0\lin0\itap0\pararsid935787 \b\i\f1\fs28\lang3081\langfe1033\cgrid\langnp3081\langfenp1033 {\insrsid935787 {\*\bkmkstart _Toc152896033}
SysEx (System Exclusive){\*\bkmkend _Toc152896033}
\par }\pard\plain \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid935787 \fs24\lang3081\langfe1033\cgrid\langnp3081\langfenp1033 {\insrsid935787 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid935787 {\insrsid935787 You can set standard System Exclusive midi values like this:
\par 
\par Midi.GeneralMidi = true
\par Midi.MasterVolume = 76%
\par Midi.IdentityRequest = pressed(space)
\par 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid935787 {\insrsid935787 If you want to set other System Exclusive midi v
alues, you need to save them in a .SYX file. You can then tell GlovePIE to send that file like this:
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid935787 {\insrsid935787 
\par Midi.SetupFile = \'93c:\\coolsounds.syx\'94
\par 
\par }\pard\plain \s1\ql \li0\ri0\sb240\sa60\keepn\widctlpar\aspalpha\aspnum\faauto\outlinelevel0\adjustright\rin0\lin0\itap0\pararsid14901482 \b\f1\fs32\lang3081\langfe1033\kerning32\cgrid\langnp3081\langfenp1033 {\insrsid14901482 \page 
{\*\bkmkstart _Toc152896034}Speech}{\insrsid935787 {\*\bkmkend _Toc152896034}
\par }\pard\plain \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid14901482 \fs24\lang3081\langfe1033\cgrid\langnp3081\langfenp1033 {\insrsid14901482 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid14901482 {\insrsid14901482 You need to install SAPI 5.1, (It comes with Windows XP and Office XP) to use speech in GlovePIE. If you don\rquote 
t have speech recognition installed, download and install this:
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid14901482 {\insrsid14901482 
\par }{\insrsid14901482\charrsid14901482 http://www.chant.net/downloads/sapi51.exe
\par }{\insrsid14901482 
\par Unless you have XP Pro, in which case download and install this to get a later version:
\par 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid14901482 {\insrsid14901482\charrsid14901482 http://www.voicewebsolutions.net/community/tutorials/voicewebstudio/salt/MicrosoftInternetExplorerSpeechAddInSetup.exe

\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid14901482 {\insrsid14901482 
\par If you just want the Mike and Mary text-to-speech voices for XP, download this:
\par }{\insrsid6898166\charrsid6898166 http://www.aldostools.com/sapi51xp.msi}{\insrsid14901482\charrsid6898166 
\par }{\insrsid14901482 
\par }\pard\plain \s2\ql \li0\ri0\sb240\sa60\keepn\widctlpar\aspalpha\aspnum\faauto\outlinelevel1\adjustright\rin0\lin0\itap0\pararsid6898166 \b\i\f1\fs28\lang3081\langfe1033\cgrid\langnp3081\langfenp1033 {\insrsid6898166 {\*\bkmkstart _Toc152896035}
Making GlovePIE talk{\*\bkmkend _Toc152896035}
\par }\pard\plain \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid14901482 \fs24\lang3081\langfe1033\cgrid\langnp3081\langfenp1033 {\insrsid6898166 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid14901482 {\insrsid14901482 You can make GlovePIE speak by using the \'93say\'94 command, like this:
\par 
\par say(\'93Hello World\'94)
\par 
\par Or you can set speech.text, like this:
\par 
\par speech.text = \'93Hello World\'94
\par 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid14901482 {\insrsid14901482 The advantage/disadvantage of setting speech.text is that it won\rquote 
t say it again until you set speech.text to something different. Say will say it every time you use say.
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid14901482 {\insrsid14901482 
\par You can get it to speak in different voices like this:
\par 
\par }{\insrsid6898166 speech.sam.text = \'93Hello, my name is Sam.\'94}{\insrsid14901482 
\par }{\insrsid6898166 speech.mike.text = \'93Hello, my name is Mike.\'94
\par speech.mary.text = \'93Hello, my name is Mary.\'94
\par 
\par If Mike and Mary sound the same as Sam, then you need to download this:
\par }{\field{\*\fldinst {\insrsid6898166  HYPERLINK "}{\insrsid6898166\charrsid6898166 http://www.aldostools.com/sapi51xp.msi}{\insrsid6898166 " }{\insrsid8473020 {\*\datafield 
00d0c9ea79f9bace118c8200aa004ba90b02000000170000002700000068007400740070003a002f002f007700770077002e0061006c0064006f00730074006f006f006c0073002e0063006f006d002f00730061007000690035003100780070002e006d00730069000000e0c9ea79f9bace118c8200aa004ba90b4e000000
68007400740070003a002f002f007700770077002e0061006c0064006f00730074006f006f006c0073002e0063006f006d002f00730061007000690035003100780070002e006d007300690000000000}}}{\fldrslt {\cs15\ul\cf2\insrsid6898166\charrsid2360435 
http://www.aldostools.com/sapi51xp.msi}}}{\insrsid14901482 
\par }{\insrsid6898166 
\par You can also use other popular text to speech engines by name, if you have them.
\par 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid14901482 {\insrsid6572936 If you want to try out and download some high-quality voices, and don\rquote t mind using up disk space, you can go to:}{\insrsid6898166 

\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid14901482 {\insrsid6572936 
\par }{\field{\*\fldinst {\insrsid6572936  HYPERLINK "}{\insrsid6572936\charrsid6572936 http://www.cepstral.com/demos/}{\insrsid6572936 " }{\insrsid8473020 {\*\datafield 
00d0c9ea79f9bace118c8200aa004ba90b02000000170000001f00000068007400740070003a002f002f007700770077002e0063006500700073007400720061006c002e0063006f006d002f00640065006d006f0073002f000000e0c9ea79f9bace118c8200aa004ba90b3e00000068007400740070003a002f002f007700
770077002e0063006500700073007400720061006c002e0063006f006d002f00640065006d006f0073002f0000000000}}}{\fldrslt {\cs15\ul\cf2\insrsid6572936\charrsid2360435 http://www.cepstral.com/demos/}}}{\insrsid14901482 
\par }{\insrsid6572936 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid14901482 {\insrsid6572936 You can download the Cepstral voices, but they are trial versions which add stuff at the start of everything it s
ays. Please buy them rather than cracking them with a keygen, as they are good quality.}{\insrsid6572936\charrsid6572936 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid14901482 {\insrsid14901482 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid14901482 {\insrsid6572936 There are lots of other speech parameters you can read or set. Just type \'93speech.\'94 and use the code completion box.}{\insrsid14901482 

\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid14901482 {\insrsid6572936 
\par }\pard\plain \s2\ql \li0\ri0\sb240\sa60\keepn\widctlpar\aspalpha\aspnum\faauto\outlinelevel1\adjustright\rin0\lin0\itap0\pararsid6572936 \b\i\f1\fs28\lang3081\langfe1033\cgrid\langnp3081\langfenp1033 {\insrsid6572936 {\*\bkmkstart _Toc152896036}
Speech Recognition{\*\bkmkend _Toc152896036}
\par }\pard\plain \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid6572936 \fs24\lang3081\langfe1033\cgrid\langnp3081\langfenp1033 {\insrsid6572936 You can use Speech recognition in GlovePIE to control games with speech.
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid6572936 {\insrsid6572936 
\par Just use the said( ) function like this:
\par 
\par Enter = said(\'93jump\'94)
\par 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid6572936 {\insrsid6572936 That will press the \'93Enter\'94 key, whenever you say \'93jump\'94 into the microphone.
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid6572936 {\insrsid6572936 
\par You can also use the AskedFor( ) function like this:
\par 
\par Four = AskedFor(\'93rocket launcher\'94)
\par 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid6572936 {\insrsid6572936 The AskedFor function will only trigger if you say something like \'93can I please have a rocket launcher?\'94
. It will not trigger if you just say \'93rocket launcher\'94 or \'93rocket launcher please\'94. AskedFor does understand lots of different ways of phrasing a request, everything from \'93I need a rocket launcher now\'94 to \'93
please give me a rocket launcher\'94.
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid6572936 {\insrsid6572936 
\par }\pard\plain \s3\ql \li0\ri0\sb240\sa60\keepn\widctlpar\aspalpha\aspnum\faauto\outlinelevel2\adjustright\rin0\lin0\itap0\pararsid6572936 \b\f1\fs26\lang3081\langfe1033\cgrid\langnp3081\langfenp1033 {\insrsid6572936 Amount of Confidence Required
\par }\pard\plain \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid6572936 \fs24\lang3081\langfe1033\cgrid\langnp3081\langfenp1033 {\insrsid6572936 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid6572936 {\insrsid6572936 You can change the amount of confidence required by specifying a second parameter which is a number. The default is 2.
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid6572936 {\insrsid6572936 
\par Eg.
\par 
\par Enter = said(\'93jump\'94, 3)
\par }{\insrsid12265351 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid6572936 {\insrsid12265351 The higher the number, the more confidence is required to recognise it. If it thinks you said \'93jump\'94 when you actually said \'93pump
\'94, set the confidence value higher. If it doesn\rquote t recognise it when you do say \'93jump\'94 set the confidence value lower.
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid6572936 {\insrsid12265351 
\par The following confidence values exist:
\par 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid6572936 {\insrsid12265351 
0: No confidence required: Will always recognise at least one of the phrases in your script, no matter how different what you said is, unless you only said the first word of a multi-word phrase.
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid6572936 {\insrsid12265351 
1: Partial phrase, low confidence: Will quickly guess what you said based on the first syllable or two, unless it is a multi-word phrase in which case it will wait for the start of the last word. Will accept anything that is even vaguely close, and 
respond quickly.
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid6572936 {\insrsid12265351 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid6572936 {\insrsid12265351 
2: Partial phrase, medium confidence: Will quickly guess what you said based on the first syllable or two, unless it is a multi-word phrase. It will accept things that are reasonably close to what it is expecting.
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid6572936 {\insrsid12265351 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid6572936 {\insrsid12265351 3: Partial phrase, high
 confidence: Will quickly guess what you said based on the first syllable, unless it is a multi-word phrase. It will only accept things that it is sure matches.
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid6572936 {\insrsid12265351 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid6572936 {\insrsid12265351 4: Complete phrase, low confidence: Will wait until it is sure you have finished speaking, and
 it has processed the complete phrase before guessing. The whole phrase must be vaguely close to what it was expecting.
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid6572936 {\insrsid12265351 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid6572936 {\insrsid12265351 5: Complete phrase, medium confidence: Will wait until it is sure you have finished speaking, and it has processed the complete phrase 
before guessing. T}{\insrsid15629807 he whole phrase must be reasonably }{\insrsid12265351 close to what it was expecting.
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid6572936 {\insrsid6572936 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid12265351 {\insrsid15629807 6}{\insrsid12265351 
: Complete phrase, high confidence: Will wait until it is sure you have finished speaking, and it has processed the complete phrase. The whole phrase must be very close to what it was expecting.
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid935787 {\insrsid14901482 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid935787 {\insrsid15629807 If your script has a phrase that contains another phrase, like this:
\par 
\par W = Said(\'93weapon\'94)
\par X = Said(\'93weapon fire linked\'94)
\par 
\par then you need to set the shorter phrase to wait for the complete phrase, like this:
\par 
\par W = Said(\'93weapon\'94, 5)
\par X = Said(\'93weapon fire linked\'94)
\par 
\par Otherwise it will press W before you have finished saying \'93weapon fire linked\'94.
\par 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid935787 {\insrsid15629807 If you are expecting the user to say things that aren\rquote 
t in your script, and you want them to be ignored, you need to set the confidence reasonably high.
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid935787 {\insrsid15629807 
\par Other than that, which confidence levels you choose is up to you. 
\par 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid935787 {\insrsid15629807 But if GlovePIE isn\rquote 
t recognising what you say, the first thing you should do is go to the Speech Control Panel (You can use the CP-Settings menu in GlovePIE), and do some traini
ng. You should also change the recognition settings in Control Panel to change how quickly it responds, and how much accuracy it requires.
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid935787 {\insrsid15629807 
\par }\pard\plain \s2\ql \li0\ri0\sb240\sa60\keepn\widctlpar\aspalpha\aspnum\faauto\outlinelevel1\adjustright\rin0\lin0\itap0\pararsid15629807 \b\i\f1\fs28\lang3081\langfe1033\cgrid\langnp3081\langfenp1033 {\insrsid15629807 {\*\bkmkstart _Toc152896037}
Push-to-talk{\*\bkmkend _Toc152896037}
\par }\pard\plain \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15629807 \fs24\lang3081\langfe1033\cgrid\langnp3081\langfenp1033 {\insrsid15629807 
If you only want it to recognise you when you are holding down a button, you need to set Microphone.Enabled. eg.
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15629807 {\insrsid15629807 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15629807 {\insrsid15629807 Microphone.Enabled = joystick1.Button1
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15629807 {\insrsid15629807 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15629807 {\insrsid15629807 
It will only trigger the speech commands when you are holding down the joystick button. The rest of the time it will ignore your speech. It doesn\rquote t turn the microphone off, or let other applications use it, it just ignores you when it hears you.

\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15629807 {\insrsid15629807 
\par You can also do the opposite, like this:
\par 
\par Microphone.PushToNotTalk = joystick1.Button2
\par 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15629807 {\insrsid15629807 Now, when you hold down button 2 it will ignore anything you say. Good for when you are talking to your team-mates.
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15629807 {\insrsid4523222 
\par Don\rquote t use Microphone.PushToTalk, it doesn\rquote t work.}{\insrsid4523222\charrsid15629807 
\par }\pard\plain \s2\ql \li0\ri0\sb240\sa60\keepn\widctlpar\aspalpha\aspnum\faauto\outlinelevel1\adjustright\rin0\lin0\itap0\pararsid15629807 \b\i\f1\fs28\lang3081\langfe1033\cgrid\langnp3081\langfenp1033 {\insrsid15629807 
\par {\*\bkmkstart _Toc152896038}Other Microphone Stuff{\*\bkmkend _Toc152896038}
\par }\pard\plain \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15629807 \fs24\lang3081\langfe1033\cgrid\langnp3081\langfenp1033 {\insrsid15629807 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15629807 {\insrsid15629807 There are other Microphone values you can read and set.
\par 
\par For example:
\par 
\par Mouse.LeftButton = Microphone.AudioLevel > 0.5
\par 
\par That will click the left mouse button whenever you make a loud noise.
\par 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15629807 {\insrsid15629807 
TooFast, TooSlow, TooLoud and TooQuiet will be true for an instant when GlovePIE is trying to recognise your speech but you are speaking too fast, slow, loud or quietly.
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15629807 {\insrsid15629807 
\par For example:
\par 
\par if Microphone.TooFast then say(\'93Don\rquote t talk so fast.\'94)
\par if Microphone.TooSlow then say(\'93You need to talk faster.\'94)
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15629807 {\insrsid15629807 if Microphone.TooLoud then say(\'93Stop shouting. I\rquote m not deaf.\'94)
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15629807 {\insrsid15629807 if Microphone.TooQuiet then say(\'93Speak up, I can\rquote t hear you.\'94)
\par 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15629807 {\insrsid15629807 HeardNoise will be true for an instant when GlovePIE is trying to recognise your speech and it hears some other noise.
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15629807 {\insrsid15629807 
\par if Microphone.HeardNoise then say(\'93I can\rquote t hear you over the noise.\'94)
\par 
\par }{\insrsid4523222 InPhrase will be true while you are speaking, and false while you are not.
\par InSound will be true while there is sound which might be speech, and false otherwise.
\par 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15629807 {\insrsid4523222 
Microphone.CompletePhrase will be whatever text you said, but it only works if you said one of the phrases in your script. It will only be set to something for an instant. For example:
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15629807 {\insrsid4523222 
\par var.saidsomething = said(\'93hello\'94) or said(\'93goodbye\'94) or said(\'93thank you\'94)
\par }{\insrsid4523222\charrsid4523222 if microphone.CompletePhrase <> "" then Say(microphone.CompletePhrase)
\par }{\insrsid4523222 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15629807 {\insrsid4523222 
Microphone.PartialPhrase will be set to whatever partial text you said, but it only works if you said one of the phrases in your script. It will only be set to something for an instant. For example:}{\insrsid15629807 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15629807 {\insrsid4523222 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid4523222 {\insrsid4523222 var.saidsomething = said(\'93this is a test\'94) or said(\'93does it work\'94) or said(\'93I don\rquote t know\'94)
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid4523222 {\insrsid4523222 if microphone.Partial}{\insrsid4523222\charrsid4523222 Phrase <> "" then }{\insrsid4523222 debug = microphone.Partial}{
\insrsid4523222\charrsid4523222 Phrase
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15629807 {\insrsid4523222 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15629807 {\insrsid4523222 Speak slowly for the above example. Notice how what you say appears one word at a time in the debug box?
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15629807 {\insrsid4523222 
\par }\pard\plain \s1\ql \li0\ri0\sb240\sa60\keepn\widctlpar\aspalpha\aspnum\faauto\outlinelevel0\adjustright\rin0\lin0\itap0\pararsid4523222 \b\f1\fs32\lang3081\langfe1033\kerning32\cgrid\langnp3081\langfenp1033 {\insrsid4523222 \page 
{\*\bkmkstart _Toc152896039}Screen{\*\bkmkend _Toc152896039}
\par }\pard\plain \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid4523222 \fs24\lang3081\langfe1033\cgrid\langnp3081\langfenp1033 {\insrsid4523222 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid4523222 {\insrsid4523222 
You can get information about the screen, or screens, connected to the computer. Which may be important for controlling mouse pointers and stuff like that.
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid4523222 {\insrsid4523222 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid4523222 {\insrsid4523222 Use \'93Screen\'94 to refer to the primary monitor, or use \'93Screen\'94 followed by a number to refer to individual screens.
\par }\pard\plain \s2\ql \li0\ri0\sb240\sa60\keepn\widctlpar\aspalpha\aspnum\faauto\outlinelevel1\adjustright\rin0\lin0\itap0\pararsid15077622 \b\i\f1\fs28\lang3081\langfe1033\cgrid\langnp3081\langfenp1033 {\insrsid5526621 {\*\bkmkstart _Toc152896040}Size
{\*\bkmkend _Toc152896040}
\par }\pard\plain \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid4523222 \fs24\lang3081\langfe1033\cgrid\langnp3081\langfenp1033 {\insrsid5526621 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid4523222 {\insrsid4523222 Screen.Width is the width in pixels, but you can also get the width in real units by writing something like:
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid4523222 {\insrsid4523222 
\par debug = Screen.Width in cm
\par 
\par The Physical width will only be right for a single Plug and Play monitor you have connected.
\par 
\par Screen.Height is the height in pixels. You can also get the real units.
\par 
\par }{\insrsid3102386 Screen.PhysicalWidth is a better way of getting the screen width in physical units.}{\insrsid4523222 
\par }{\insrsid3102386 Screen.PhysicalHeight is the same for height.
\par 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid4523222 {\insrsid5526621 S
creen.ViewableSize is the actual viewable size of the monitor. If it is a CRT monitor then it will be less than the advertised size, because the advertised size is always the size of the tube itself rather than the viewable area. If it is an LCD monitor, 
then it will be about the right size.
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid4523222 {\insrsid15077622 
\par Screen.PixelsPerInch is the number of dots per inch that your monitor has.
\par }{\insrsid5526621 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid4523222 {\insrsid5526621 Screen.WorkAreaWidth and Screen.WorkAreaHeight is the size in pixels of the work-area, which is all of the screen that isn\rquote 
t covered up with the task-bar and other bars.
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid4523222 {\insrsid5526621 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid4523222 {\insrsid15077622 Screen.}{\insrsid5526621 
DesktopWidth and Screen.DesktopHeight are the size in pixels of the Virtual Desktop, which stretches across all monitors in a multiple monitor setup.
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid4523222 {\insrsid5526621 
\par }\pard\plain \s2\ql \li0\ri0\sb240\sa60\keepn\widctlpar\aspalpha\aspnum\faauto\outlinelevel1\adjustright\rin0\lin0\itap0\pararsid15077622 \b\i\f1\fs28\lang3081\langfe1033\cgrid\langnp3081\langfenp1033 {\insrsid15077622 {\*\bkmkstart _Toc152896041}Position
{\*\bkmkend _Toc152896041}
\par }\pard\plain \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid4523222 \fs24\lang3081\langfe1033\cgrid\langnp3081\langfenp1033 {\insrsid15077622 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid4523222 {\insrsid15077622 Screen.Left is the position of the left hand side of the sc
reen in pixels, relative to the top left corner of the primary monitor. So for screen1 it will be 0, but for screen2 it may be something else.
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid4523222 {\insrsid15077622 Screen.Top is the position of the top of the screen in pixels, relative to the primary monitor.
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid4523222 {\insrsid15077622 Screen.Right is the position of the right hand side of the screen in pixels, relative to the primary monitor.
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid4523222 {\insrsid15077622 Screen.Bottom is the position of the bottom of the screen in pixels, relative to the primary monitor.
\par 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid4523222 {\insrsid15077622 Screen.DesktopLeft is the position of the left hand side of the virtual desktop relative to the top left corner of the primary monitor.

\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid4523222 {\insrsid15077622 etc.
\par 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid4523222 {\insrsid15077622 Screen.WorkAreaLeft is the position of the left hand side of that screen\rquote s work area (the parts not covered by the taskbar).
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid4523222 {\insrsid15077622 etc.
\par 
\par }\pard\plain \s2\ql \li0\ri0\sb240\sa60\keepn\widctlpar\aspalpha\aspnum\faauto\outlinelevel1\adjustright\rin0\lin0\itap0\pararsid15077622 \b\i\f1\fs28\lang3081\langfe1033\cgrid\langnp3081\langfenp1033 {\insrsid15077622 {\*\bkmkstart _Toc152896042}
Plug & Play Monitor Stuff{\*\bkmkend _Toc152896042}
\par }\pard\plain \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15077622 \fs24\lang3081\langfe1033\cgrid\langnp3081\langfenp1033 {\insrsid15077622 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15077622 {\insrsid15077622 These only work for a single Plug & Play monitor.
\par 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15077622 {\insrsid15077622 
PlugAndPlayAvailable, ManufactureDate, EDIDVersion, EDIDRevision, PhysicalWidth, PhysicalHeight, VendorCode, ProductCode, VendorShortName, VendorLongName, SerialNumber, IsProjector, ViewableSize 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15077622 {\insrsid7801339 
\par }\pard\plain \s2\ql \li0\ri0\sb240\sa60\keepn\widctlpar\aspalpha\aspnum\faauto\outlinelevel1\adjustright\rin0\lin0\itap0\pararsid7801339 \b\i\f1\fs28\lang3081\langfe1033\cgrid\langnp3081\langfenp1033 {\insrsid7801339 {\*\bkmkstart _Toc152896043}
ScreenSaver stuff{\*\bkmkend _Toc152896043}
\par }\pard\plain \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid7801339 \fs24\lang3081\langfe1033\cgrid\langnp3081\langfenp1033 {\insrsid7801339 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid7801339 {\insrsid7801339 ScreenSaverEnabled, ScreenSaverRunning, ScreenSaverTimeout
\par 
\par }\pard\plain \s2\ql \li0\ri0\sb240\sa60\keepn\widctlpar\aspalpha\aspnum\faauto\outlinelevel1\adjustright\rin0\lin0\itap0\pararsid7801339 \b\i\f1\fs28\lang3081\langfe1033\cgrid\langnp3081\langfenp1033 {\insrsid7801339 {\*\bkmkstart _Toc152896044}
GlovePIE stuff{\*\bkmkend _Toc152896044}
\par }\pard\plain \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid7801339 \fs24\lang3081\langfe1033\cgrid\langnp3081\langfenp1033 {\insrsid7801339 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid7801339 {\insrsid7801339 IsPieScreen, PieScreen
\par 
\par }\pard\plain \s2\ql \li0\ri0\sb240\sa60\keepn\widctlpar\aspalpha\aspnum\faauto\outlinelevel1\adjustright\rin0\lin0\itap0\pararsid7801339 \b\i\f1\fs28\lang3081\langfe1033\cgrid\langnp3081\langfenp1033 {\insrsid7801339 {\*\bkmkstart _Toc152896045}
Other Stuff{\*\bkmkend _Toc152896045}
\par }\pard\plain \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid7801339 \fs24\lang3081\langfe1033\cgrid\langnp3081\langfenp1033 {\insrsid7801339 
\par There\rquote s lots of other stuff in the Screen object, mostly control panel settings.}{\insrsid7801339\charrsid7801339 
\par }}